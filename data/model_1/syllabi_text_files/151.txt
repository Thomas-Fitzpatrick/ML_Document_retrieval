CSCI 111 Course Syllabus CSCI 111 -- Computer Science I - Sections 1, 2 and 3 Course Syllabus Fall 2002 "Programming with Events" Instructor:  Pamela B. Lawhead          Phone: 662-915-5356 E-mail:  lawhead@cs.olemiss.edu Office: 242, Kinard Hall Office Hours:   Tuesday and Thursday 1-3 or by appointment Teaching Assistants: TBA Textbook: Ira Pohl, Charlie McDowell. Java by Dissection: The Essentials of Java Programming . Addison Wesley longman, Inc., 2000. ISBN: 0-201-61284-8. Supplementary Materials: Two 3.5" IBM preformatted floppy diskettes. One hardsided loose leaf binder. General Description: Introduction to computer science with an emphasis on problem solving and algorithm development. Students will use the Java progamming language to design, implement, debug, test, and document computer programs for various applications.  This particular section -01- will have a different approach than the other sections.  We will use a series of small robots to illustrate each of the concepts taught throughout the semester.  While the content base will be the same as the other sections, the programming assignments will be quite different. Co-requisite: MATH 123 or 125. (3). (CC 1613). General Objectives: This section of the course is designed to provide the student with the opportunity to: Design, code, debug, document and test programs that: Use Lego Mindstorm Robotics Kits to create robots that can be programmed in Java using a package called TinyVM Have a focus on event programming Use Java "Tiny VM"  to control a programmable RCX Brick Use interactive input/output statements Use arithmetic operations that illustrate operator precedence. Use the selection statements; if, nested-if and switch. Use the repetition statements; while, for and do-while. Use array-processing techniques to solve a programming problem. Use classes and methods to accomplish code reuse. Perform simple sequential file I/O processing. Course Grading and Attendance Policies The following information outlines the policies that will be followed in the assignment of your final course grade. Attendance: The roll will be called each day.  Students who miss more than three classes will have their grades lowered by one letter grade. Except for FORMAL, University Sanctioned events, excuses are not accepted. Three unexcused absences are provided to allow the student to have the unfortunate experience of being ill, having a family emergency or having other unexpected conflicts with the regularly scheduled class time. Students who wish to discontinue the class must officially drop the course; otherwise a grade of zero will be recorded for all missed assignments and tests used to calculate the final course grade. Make Up Work: In the case of absences or tardiness, it is the student's responsibility to determine what work has been missed. If there is a formally documented reason for the absence, then the instructor will assist the student in this effort, otherwise the student should consult other sources. Grading System: The grading scale is quite simple 90% of total points = A 80% of total points = B 70% = C 60% = D 59% and below           = F This is a fixed, non-negotiable procedure. Points are acquired in the following way. Regular Tests and Final Exam : Sources of test material will come from relevant sections in the textbook, classroom lectures, programming assignments and homework assignments. There will be three regular tests and a comprehensive final exam. (approximately 400 points) No make up tests will be given under any circumstances. If a test is missed for any reason, then a grade of zero will be recorded for that test grade. Your semester test average will be computed using the three highest scores from among the three regular test scores and the final exam score. Programming Assignments: There will be approximately 9 programming assignments.  (900 points) Students should complete every programming assignment, however, ten points will be deducted from the assigned grade for every day that the assignment is late. No exceptions. ALL PROGRAMMING ASSIGNMENTS MUST BE HANDED IN A GRADED IN ORDER TO PASS THE COURSE. There will be no make up assignments under any circumstances. If an assignment is missed for any reason, then a grade of zero will be recorded for that lab grade. There will be no drop grade. Other Course Work: This grade will be assigned by the instructor based on the following: The number of programming assignments completed on time. Class attendance and cooperation. Daily scores received from pop quizzes and/or class exercises. The student is responsible for: Maintaining both a hardcopy and a floppy disk copy of all programming assignments until a final grade is received. (If both diskette copies are destroyed then you will have to re-key your program from the hardcopy.) Keeping all graded materials until a final grade is received. Maintaining a laboratory manual assignment notebook.  This book should contain a printed copy of all laboratory assignements, a copy of the "pencil exercises", a hardcopy of the completed assignment, a diskette copy of the assignement.  It is suggested that this be a looseleaf binder with pockets to hold the diskettes. CLEARLY labeling all material - notebooks, laboratory assignments and diskettes. Reading the course material that is relevant to class discussions. Taking notes in class. Honor Code: All aspects of this course fall under the provisions of the Honor Code of the school of Engineering. Homework assignments must represent the individual effort of the student, without assistance from others. Cheating and copying on tests and the final exam are, of course, not allowed. Violations of the Honor Code will be turned over to the Honor Code Committee of the School of Engineering for appropriate handling. Academic Needs: If you have a documented disability and wish to discuss academic accommodations, please contact the instructor as soon as possible. Copyright © 2000, Pamela B. Lawhead for The University of Mississippi.