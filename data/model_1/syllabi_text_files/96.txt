Syllabus for 16S-CISC108-010: Introduction to Computer Science I You need to have JavaScript enabled in order to access this site. Skip To Content Dashboard Login Dashboard Courses Calendar 0 Inbox Help Close My Dashboard 16S-CISC108-010Syllabus 2016 Spring HomeSyllabusAssignmentsFilesQuizzesPiazzaiclicker Course Syllabus Jump to Today The focus of the course is “How to think like a Computer Scientist.” In particular, we focus on how to develop a statement of a problem, and then systematically design a computer program that solves the problem. The idea is to give you the proper knowledge, intuition, and habits on which you can base a lifetime of learning in computer science. We will examine the ways in which computational ideas have arisen from, and had impact on, many different disciplines. In this first CISC course, we focus on the abstract, mathematical nature of computation: how Computer Science is relevant and useful even without the details of specific computing hardware. You will find that program design involves a series of smaller skills, including information design, logic design, testing, and documentation. Improving your skills in these areas should help you with general problem solving even when you aren't programming. Course Objectives Follow and explain an explicit Design Recipe to go from an idea to a working, tested final program Develop abstract computational data models for representing problem domain-level information Choose from, and write programs over simple atomic data, compound structures, data mixtures/ itemizations, arbitrarily-sized data like lists and trees Develop test procedures for programs Use simple control mechanisms: function composition, conditionals, recursion, iteration Explain when mutable state is needed (and why we avoid it if possible) Abstract over and analyze simple programming patterns (higher-order programming) including simple parameter abstraction, parametric data, map/filter/reduce/lambda, and closures Basic sorting & searching algorithms, recognize simple program time/space behavior Book How to Design Programs, by Felleisen, Findler, Flatt & Krishnamurthy, MIT Press. 2nd edition: http://www.ccs.neu.edu/home/matthias/HtDP2e/index.html 1st edition: http://www.htdp.org/2003-09-26/Book/ Office hours Dr Clause: Wednesdays, noon–2pm @ Smith 438 Chen Huo: Mondays, 4–6pm @ Smith 201, email: huoc@udel.edu Grading Participation: Participation means asking and answering questions in class or in person, and working well with your partners. You should try for a minimum of one interaction a week, for full credit, and no negative peer reviews. Other participation credit opportunities may be announced in class. i>clicker participation is required (see i>clicker section). Lab attendance: Lab attendance is required and worth part of the lab grade. Labs are generally due at 11:55pm the Wednesday following the lab period. Labs turned in after that time are considered late (see the late policy). Quizzes: Quizzes will be given with specific due dates and conditions. Late Policy: In general, labs will have a 4 day grace period after the due date. Submissions during the grace period will be marked down 25%. No submissions will be accepted after the grace period. All items are to be turned in online using Canvas; Canvas provides a timestamped, dated receipt. No receipt, no submission, no grade. Final Grade Rule: Your final grade cannot be more than one letter grade higher than your best exam grade. This is to ensure mastery of fundamental skills. Lab, Homework, & Project Grading: A separate grading guide is available. Please note that this course is about How to Think Like a Computer Scientist, and so a large part of your grade is focused on the DESIGN of your solutions, as on the solutions themselves. Simply providing code that “works” correctly is not nearly enough. Getting Help Many students will have significant difficulty, since computer science (or even simple programming) is not a common K-12 topic and requires DESIGN skills, not memorization. Take advantage of BOTH instructor and TA office hours Take advantage of the lab time, TA, and lab tutors Take advantage of the Academic Enrichment Center tutoring (you must sign up) Take advantage of the Piazza forums (link in Canvas) Collaboration vs Cheating Collaboration of any kind is PROHIBITED during Exams and Quizzes. However, in the Real World, programming is almost never a solo activity. This class will use a standard industry eXtreme Programming [XP] technique called Pair Programming for (most) Labs. In Pair Programming, you work on problems together, simultaneously, with one person running the keyboard and the other driving. You should switch the keyboard every 15 minutes or so. You should NOT program separately. Thus, collaboration WITHIN YOUR PAIR is ENCOURAGED on Pair Labs and Projects. You may discuss problems across pairs, but each pair is responsible for their own solution. As examples, each of the following scenarios would constitute cheating (this list is not exhaustive!): Two different homework pairs share a solution to a single question on a homework assignment. Students from different homework pairs sit side-by-side while writing up their solutions and one student copies down what the other student types up. You send the code for a completed homework question to a friend in another homework pair “just so he can look at it to figure out how to do the problem”. You obtain a solution to a homework problem (or a problem similar to a homework problem) from on-line or from someone who took the course in a previous term. In contrast, the following scenarios would not constitute cheating: Students from two different homework pairs discuss a pair-assignment (its goal, what it is asking you to do, what the challenging parts are, or how to approach the problem). You ask the professor or TA for help in understanding or completing an individual assignment. Students from the same lab pair share code to a solution. Copying any other person's work (off the Internet, for example) without proper acknowledgment is plagiarism, a serious offense, and the one most common to computer science courses.  Anyone that aids another student with work that is expected to be done without collaboration is as guilty as the person who seeks help. Both will be prosecuted. It is strongly recommended that you familiarize yourself with the University's Policy of Academic Dishonesty. Any student who in any way facilitates another student's access to someone else's classwork is cheating, whether the classwork is written, electronic, verbal, or any other form. Furthermore, there have been rare instances of people claiming that their work was stolen. In these cases it is very hard to determine if the person gave their work to someone else, or if it was taken without their permission. If there is any doubt, I will always assume that the work was deliberately shared. It is thus your responsibility to safeguard your papers, your passwords, your computers, and any other means by which your work can be copied. How to get an “A” in this course For most of you, this will be your first class in computer science. Here is some advice on how to approach this class. Skim the relevant reading before you come to lecture, and read more carefully after the lecture. The lecture should help you understand the context and key points of the chapter. The lecture does not fully replace reading, because the lecture will omit fine points that are discussed in the text. THIS IS A DESIGN COURSE, NOT A MEMORIZATION COURSE. Do some of the unassigned finger exercises while reading. Although the entire book is online, do not cut and paste sample code into DrRacket. Typing the examples will help you retain the material. Follow instructions. Read directions before, during, and again after you complete an assignment to be sure you are addressing the problem required, not one of your own making. A beautiful solution to a problem I didn't assign will not help your grade. Also, be careful to do all parts of a problem. Respect the assignments. Some students expect that if they have done the reading and concentrated in lecture, then the assignments will be straightforward. What these students don’t understand is that assignments are designed to challenge you by requiring that you apply the concepts you have learned to new situations. The assignments will be your most important learning experience in the course; they will rarely be straightforward. You should start each problem set days before it is due. This way, you will have time to take a break when you get stuck. Beginners are often surprised by the amount of human effort that has to go into designing, writing, and testing a program. Complaints from students about the amount of time required by introductory computer programming courses are universal across the planet. You should expect to spend three hours outside of class for every hour that you spend in class. In other words, you should expect to spend at least 9–12 hours per week or more reading, studying, and designing programs. Many of you will spend significantly more time. Please keep this in mind when setting up your schedule for the semester! i>clickers i>clickers will be used to promote learning in this class. Bring your clicker to every class every day to obtain full credit for the activities that use them. For more info about clickers, visit: http://ats.udel.edu/clickers/faq.php Register your clicker using the i>clicker link in Sakai. One registration will provide information to all your instructors in classes using i>clickers and Sakai this semester. You can register multiple clickers if you’re concerned about picking up your roommate’s or if you lose your clicker mid-semester. Disability Resources and Services If you have a disability for which you are requesting an accommodation, you are encouraged to contact both the instructor and the University of Delaware's Office of Disabilities Support Services (DSS), as early as possible in the term. DSS will verify your disability and determine reasonable accommodations for this course. The syllabus page shows a table-oriented view of the course schedule, and the basics of course grading. You can add any other comments, notes, or thoughts you have about the course structure, course policies or anything else. To add some comments, click the "Edit" link at the top. HTML Editor Rich Content Editor Syllabus Description: Cancel Update Syllabus Course Summary: Date Details Prev month Next month January 2018 1 Calendar Sunday Monday Tuesday Wednesday Thursday Friday Saturday 31 Previous month Next month Today Click to view event details 1 Previous month Next month Today Click to view event details 2 Previous month Next month Today Click to view event details 3 Previous month Next month Today Click to view event details 4 Previous month Next month Today Click to view event details 5 Previous month Next month Today Click to view event details 6 Previous month Next month Today Click to view event details 7 Previous month Next month Today Click to view event details 8 Previous month Next month Today Click to view event details 9 Previous month Next month Today Click to view event details 10 Previous month Next month Today Click to view event details 11 Previous month Next month Today Click to view event details 12 Previous month Next month Today Click to view event details 13 Previous month Next month Today Click to view event details 14 Previous month Next month Today Click to view event details 15 Previous month Next month Today Click to view event details 16 Previous month Next month Today Click to view event details 17 Previous month Next month Today Click to view event details 18 Previous month Next month Today Click to view event details 19 Previous month Next month Today Click to view event details 20 Previous month Next month Today Click to view event details 21 Previous month Next month Today Click to view event details 22 Previous month Next month Today Click to view event details 23 Previous month Next month Today Click to view event details 24 Previous month Next month Today Click to view event details 25 Previous month Next month Today Click to view event details 26 Previous month Next month Today Click to view event details 27 Previous month Next month Today Click to view event details 28 Previous month Next month Today Click to view event details 29 Previous month Next month Today Click to view event details 30 Previous month Next month Today Click to view event details 31 Previous month Next month Today Click to view event details 1 Previous month Next month Today Click to view event details 2 Previous month Next month Today Click to view event details 3 Previous month Next month Today Click to view event details 4 Previous month Next month Today Click to view event details 5 Previous month Next month Today Click to view event details 6 Previous month Next month Today Click to view event details 7 Previous month Next month Today Click to view event details 8 Previous month Next month Today Click to view event details 9 Previous month Next month Today Click to view event details 10 Previous month Next month Today Click to view event details Assignments are weighted by group: Group Weight Labs 35% Exams 45% Projects 10% Quizzes 5% Participation 5% Total 100% Insert Content into the Page Links Files Images Link to other content in the course. Click any page to insert a link to that page. Pages Assignments Assignments 2/11 2/16 2/18 2/23 2/25 3/15 3/24 3/3 4/12 4/26 4/28 5/10 5/5 Exam 1 Exam 2 Exam 3 Introduction to Pair Programming Lab0 Lab1 Lab10 Lab11 Lab12 Lab2 Lab3 Lab4 Lab5 Lab6 Lab7 Lab8 Lab9 Practice Exam Project1 Project2 Quizzes Quizzes Unnamed Quiz Announcements Announcements Course evaluation reminder TA office hours next week cancelled and the week after's changed Office hours next week cancelled Grading for Lab0 and Lab1 Lab0 Grading Done Change of TA's office hours Lab1 Grading Done Lab 1 Problem 4.1 Lecture notes for Week 1 uploaded Discussions Discussions Modules Modules Course Navigation Assignments Pages Discussions Syllabus Announcements Files Collaborations Grades People Modules Click any file to insert a download link for that file. Uploading file... 0 more to upload Drop Files Here to upload course files folder course files Loading... Click any image to embed the image in the page. Find images on flickr creative commons Uploading file... 0 more to upload {{ display_name }} Drop Images Here to upload course_1310886 Select a destination folder for these   files: course files Upload Files to Folder Cancel In order to create video or audio recordings your computer needs to be webcam-enabled. If you don't have a webcam on your computer, you can still record audio-only messages by first installing the Google Video Chat plugin. Install the Video Plugin Don't have a webcam?