CMPSC 121 Spring 2017 | Jeffrey A. Stone, Ph.D. Jeffrey A. Stone, Ph.D. Assistant Professor of IST @ Penn State University Menu Skip to content Contact Teaching Research Sustainablity in CS1 PALMS for CS1 CMPSC 121 Spring 2017 CMPSC 121: Introduction to Programming Techniques Penn State University, Schuylkill Campus Spring 2017 Course Instructor Jeffrey A. Stone, Ph.D. Senior Instructor of IST 007 Classroom Building (570) 385-6267 stonej@psu.edu Office Hours: MWF 10:00-10:50 or by appointment Course Meeting Time/Place 04:40-05:30 (MWF), 10:35-11:50 (T) in Classroom Building 107 Required Textbooks and Course Materials zyBooks Programming in C++ with zyLabs electronic textbook (online purchase) PALMS: Problem Solving Animated Learning Modules for CS1 (online) One USB Mass Storage device One set of standard stereo headphones Course Overview CMPSC 121 is intended to be an introduction to the methods and techniques for solving problems using computer programming, with an emphasis on numerical problems for Engineers. This course qualifies as a Quantitative (GQ) elective in the General Education curriculum. The course is also an optional course for several majors and is a required course for some Engineering majors. CMPSC 121 is a “C”-required course for Computer Science and Computer Engineering, among other majors; check with your adviser to see how this course affects your current plan of study. CMPSC 121 is NOT an “introduction to computers” or “how to use computers” course. The C++ programming language will be used to implement potential solutions for both simple and complex problems. No prior programming experience is assumed. The PCs in the Cotler Computer Center provide the development environment(s) for student use in this course. Upon completion of the course, students should possess the following skills: Problem Definitions: Given a problem, students can create a functional description of the problem including input and output specifications, and processing steps to obtain the output from the input. This description should be added to code as comments. Problem Synthesis: Given a problem, students should be able to decompose the problem into a sequence of single-purpose functions that are highly cohesive and loosely coupled. Data Types: Given a functional description of a problem, students can select appropriate data types (including primitive data types and arrays) for storing the input and output values. Declare, define, and initialize one-dimensional, simple data type arrays of a fixed size. Demonstrate the ability to read from and write to an arbitrary array element using array indices. Demonstrate an ability to process the entire array, one element at a time, performing both read and write operations. Assignment Statements: Given a mathematical expression, students can translate this expression into equivalent syntactically correct programming statements. Style/Documentation: Given a problem, students can write code that conforms to a programming style specified by the instructor. Control Structures: Given a problem, students can select and implement the appropriate control structure (if/else, switch, for-loop, while-loop, and do while-loop). Given a problem and a specific control structure, students can implement that control structure to solve the problem. Given the pre/post conditions, students can write functions utilizing various return types and pass by value parameters as appropriate. Code Analysis: Given an unfamiliar code segment and specific inputs, students can analyze the code and predict the result. Testing and Debugging: During program development students can utilize basic testing methodologies and debugging tools such as stubs, drivers, and integrated debuggers to identify fault points and possible error conditions, and exceptions with try-catch block (as time permits). File Input and Output: Given a problem, a student can develop input/output modules to read data from the standard input or a text file and write data in a prescribed format either to the standard output or to a text file. This course follows a sustainability theme, whereby real-world problems involving sustainability concepts are solved using C++ and algorithmic processes. Course Prerequisite CMPSC 121 lists a prerequisite of MATH 110 or a co-requisite of MATH 140. Course Format and Grade Determination CMPSC 101 will follow a flipped classroom model. Readings and activities will be provided as preparation for the next class period. Students are expected to read the assigned readings and perform (or at least attempt) the assigned activities before coming to class. A failure to come to class prepared will result in students not maximizing the learning potential provided by the in-class experience and will impact your progress in this course. Class time will be spent answering questions, providing short lectures of specific topics, and performing in-class activities designed to reinforce the concepts learned from the preparatory readings and activities. The biggest factor that can help you in this course is to attend class and keep up with the assigned readings, activities and assignments. Lectures may include material not covered in the textbook and/or electronic resources, as well as providing further explanation of readings. You are responsible for any material covered in class as well as in assignments, regardless of attendance. Assignments will be collected electronically before the beginning of class on the specified due date and time. Assignments turned in late will NOT be accepted. Please do not ask. There will be NO MAKE-UP EXAMS given during the semester except in extreme circumstances, as determined by the instructor. The course grades will consist of the following items: Course Aspect Percentage Homework Projects (6) 30% In-Class Labs & Preparatory Exercises 20% Exams (2) 30% Final Exam 20% TOTAL: 100% Grades will be assigned based on this scale (there is NO curve): Letter Grade Percent Range A 94.00-100.00 A- 90.00-93.99 B+ 87.00-89.99 B 83.00-86.99 B- 80.00-82.99 C+ 77.00-79.99 C 70.00-76.99 D 60.00-69.99 F 0.00-59.99 Course Policies and Expectations of Students Students are expected to keep up with required readings and assignments. A significant portion of student time will be spent working outside of class on the computer – completing assignments, performing online activities and reading assigned materials. On average, you should budget 3-6 hours of work for every hour of class time. Attendance: In order to participate, you must attend all classes. Attendance will be taken at the beginning of each class period. Each absence will reduce your overall score by one (1) percent at the end of the semester. Punctuality: Be on time to every class. If you must arrive after the designated class time, students are asked to seat in the seat closest to the back so as not to disturb the rest of the class. Please note that arriving late will cause you to be marked as absent for the day (see the attendance policy above) but you may still participate in class and any assignments for that day. Homework projects must be completed individually. Exams are individual. The purpose of the homework projects is to help prepare the student for the exams. Assignments and readings will be completed both inside and outside of class. It is the students’ responsibility to complete the assignments and seek assistance if needed. Out-of-class assistance can be obtained from the instructor during normal office hours and from the ARC tutor(s) if available. In order to maintain a positive learning environment for everyone in the classroom, students are expected to…. Stay until the end of each class period and avoid leaving the room during class time. Act professionally in the classroom. Avoid all use of profanity or other inappropriate or offensive language. Actively participate in class discussions, assignments, and activities. Avoid the use of cellular phones, MP3 players/iPods, or other electronics in class unless directed by the instructor. Avoid game playing, instant messaging, and work unrelated to the course while in class. Use the classroom computers at the discretion and direction of the instructor. Treat other students with respect while in the classroom. Students are expected to remember and live the Penn State Principles while in this classroom: I will respect the dignity of all individuals within the Penn State community. I will practice academic integrity. I will demonstrate social and personal responsibility. I will be responsible for my own academic progress and agree to comply with all University policies. Repeated violations of class policies WILL reduce your overall course grade. The instructor will discuss these violations with the individual student on a case-by-case basis. Use of the Canvas Learning Management System The Canvas Learning Management System (http://psu.instructure.com) will be utilized for all course-related electronic communication. Students should check their Canvas account at least once a day for breaking news and events. Regular Penn State e-mail should NOT be used for course communication. Canvas will also be used to submit most assignments. E-mail Policy The Instructor will respond to e-mails during the hours of 9:00 a.m. – 4:00 p.m., Monday through Friday. Students are encouraged to use normal or virtual office hours to seek assistance with non-trivial questions or problems. Students with Disabilities Students with disabilities, whether physical, learning, or psychological, who believe that they may need academic adjustments in this class, are encouraged to contact Disability Services as soon as possible to ensure that such adjustments are implemented in a timely fashion. Please schedule an appointment to meet with the Disability Services Liaison, Mindy Anthony Spolski, (570-385-6127 or mma149@psu.edu), to present your documentation and to verify your eligibility for any classroom adjustments and for academic assistance related to your disability. The Office of Disability Services is located in office 210A Health and Wellness Building. Inclement Weather Policy If class is cancelled for any reason, including weather conditions, students should check their Canvas e-mail for instructions on how work will be conducted electronically for that day. The instructor will e-mail students with instructions on work to complete, video lectures to review, reading assignments, and other important issues related to course progress. It is the students’ responsibility to be aware of these directions and complete the assigned work before the next class period. If the campus is open, you should assume class will be held as scheduled. The Weather Delay Information Line is (570) 385-6220. In the event the instructor must cancel class for any reason other than those mentioned above, Canvas e-mail will be used to inform students at least two hours in advance. Note that this does not cover emergencies or acts of god. Policy on Academic Integrity Penn State Schuylkill is committed to maintaining academic integrity in this and all other courses it offers. Academic integrity—scholarship free of fraud and deception—is an important educational objective of Penn State. Academic dishonesty can lead to a failing grade or referral to the Office of Judicial Affairs. Academic dishonesty includes, but is not limited to: Cheating Plagiarism Fabrication of information or citations Facilitating acts of academic dishonesty by others Unauthorized prior possession of examinations Submitting the work of another person or work previously used without informing the instructor and securing written approval Tampering with the academic work of other students In cases where academic integrity is questioned, Penn State’s Policy on Academic Integrity requires that the instructor give the student notice of the charge as well as the recommended sanction. Procedures allow the student to accept or contest the charge through discussions with the instructor. If a student accepts the charge and the recommended sanction, the respective College files the case with the Office of Judicial Affairs. If a student chooses to contest, the case will then be managed by the respective College or Campus Academic Integrity Committee. If a disciplinary sanction also is recommended, the case will be referred to the Office of Judicial Affairs. If you have any doubts as to the meaning of plagiarism or cheating as it applies to this course, you should discuss them with the instructor. Please note that the instructor may utilize electronic resources such as MOSS (https://theory.stanford.edu/~aiken/moss/) or ETector (http://etector.org) to ensure academic integrity. When working on the assignments, you are encouraged to discuss ideas with fellow students; however, results and specific issues regarding solutions to any assignment in this course must NOT be discussed with fellow students. You may discuss abstract design with fellow students, but when the discussion turns to C++ language details, all students need to be working on their own. You must not show your C++ code to fellow students, as most students will likely end up copying your code and/or sharing it with others. Exams are also individual and must NOT be discussed with other students or individuals. Always remember this: the answers to specific assignments and exam questions must be your own work. Violations of this policy will result in a failing grade for all students involved, as determined by the instructor. Class Schedule The following represents a tentative class schedule. Look over the week’s topics and readings before attending class. Further instructions will be given on Canvas and in class. I anticipate that we will follow the schedule I’ve outlined here, but I may make adjustments based on what actually happens in class. Be sure to check with a classmate after an absence to see if assignments have changed. I may also change basis for the course grade; if I do so, I will so inform you in writing. Remaining in the course after reading this syllabus will signal that you accept the possibility of changes and responsibility for being aware of them. Week Beginning Lecture Topic(s) Lab Topic(s) 01/09 Problem-Solving, Algorithms, and C++ Basics iPad Basics 01/16 No Class Monday C++ Basics C++ Basics and I/O 01/23 C++ Expressions, Arithmetic, I/O C++ Expressions & Arithmetic 01/30 Conditional Selection in C++: if statements Homework Project #1 (Wednesday) If Statements 02/06 Conditional Selection in C++: cascading if statements Cascading If Statements 02/13 Conditional Repetition in C++: while statements Homework Project #2 (Wednesday) Exam #1 (Tuesday) 02/20 Conditional Repetition in C++: while statements While Loops 02/27 Conditional Repetition in C++: for loops Homework Project #3 (Wednesday) While Loops 03/06 SPRING BREAK (No Class) 03/13 Conditional Repetition in C++: for loops For Loops 03/20 Functions in C++ Homework Project #4 (Wednesday) User-Defined Functions 03/27 Functions and Arrays in C++ Exam #2 (Tuesday) 04/03 Arrays in C++ Homework Project #5 (Wednesday) One-Dimensional Arrays 04/10 Arrays and Structures in C++ Two-Dimensional Arrays 04/17 Files, Structures, and Strings in C++ Files and Structures 04/24 Files, Structures, and Strings in C++ Homework Project #6 (Wednesday) Files and Structures 05/01 Final Exam Proudly powered by WordPress | Theme: Able by Automattic. Skip to toolbar Sites at Penn State Log In Search