CS 415: Introduction to Computer Science I | Computer Science Skip to main content Home About UsContact Us B.S. in CS: Student Outcomes B.S. in IT: Student Outcomes C.S Undergraduate Courses Program Enrollment and Degree Data Programming Assistance Center Scholarships UNH InterOperability Laboratory Tenure-Track Assistant Professor Position Undergraduate ProgramsB.S. in Computer Science B.S. in Computer Science: Bioinformatics B.S. in Information Technology Minor in Computer Science Minor in Information Technology CS Honors in Major IT Honors in Major Cognate in Computer Programming Cognate in Information Technology Cognate in Skills and Perspecitves for the Digital World Graduate ProgramsGraduate Degree Requirements Accelerated Master's Progam Admission Requirements Apply Resources for Students Frequently Asked Questions CS Graduate Courses PeopleFaculty Staff CS Industrial Advisory Board IT Industrial Advisory Board ResearchThesis and Dissertation Topics AlumniAlumni Sketches High Tech Day Apply Contact Maps & Directions Storm MyCourses Give A-Z Social UNH Search form SearchSearch Toggle navigation Toggle navigation Computer Science HomeAbout UsContact UsB.S. in CS: Student OutcomesB.S. in IT: Student OutcomesC.S Undergraduate CoursesProgram Enrollment and Degree DataProgramming Assistance CenterScholarshipsUNH InterOperability LaboratoryTenure-Track Assistant Professor PositionUndergraduate ProgramsB.S. in Computer ScienceB.S. in Computer Science: BioinformaticsB.S. in Information TechnologyMinor in Computer ScienceMinor in Information TechnologyCS Honors in MajorIT Honors in MajorCognate in Computer ProgrammingCognate in Information TechnologyCognate in Skills and Perspecitves for the Digital WorldGraduate ProgramsGraduate Degree RequirementsAccelerated Master's ProgamAdmission RequirementsApplyResources for StudentsFrequently Asked QuestionsCS Graduate CoursesPeopleFacultyStaffCS Industrial Advisory BoardIT Industrial Advisory BoardResearchThesis and Dissertation TopicsAlumniAlumni SketchesHigh Tech Day Courses CS 415: Introduction to Computer Science I CS 415: Introduction to Computer Science I (Coordinator: Mark Bochert) Catalog description Theory and practice of computer science. Algorithm development and analysis; data abstraction techniques; elementary data structures; dynamic memory manipulation; debugging; and program design issues. Computer systems and applications. Intended for CS majors. Outcomes Software development and programming languages (Department outcomes 1 and 4): Discuss and identify the concepts of encapsulation, abstraction, inheritance, and polymorphism Design, implement, test, and debug programs involving basic computation, simple I/O, standard conditional and iterative structures, plus the definition of instance variables and functions/methods within the context of multiple classes involving some class hierarchy. Identify and use good programming style. Develop simple event-driven programs that respond to user events and exception conditions raised during execution. Analyze and explain the behavior of simple programs and fragments of larger programs. Choose appropriate conditional and iteration constructs for a given programming task and apply them properly. Apply the techniques of structured (functional) decomposition to break a program in to smaller pieces, demonstrating appropriate use of method overloading and overriding. Describe how the class mechanism supports encapsulation and information hiding, and the nature of the relationship between a class and an object of that class Data structures (Department outcome 2): Write programs that make use of arrays and lists. Evaluation Weekly programming assignments (50%) Semi-weekly labs, weekly recitations (20%) Weekly written quizzes and 2 written exams (15%) Weekly programming quizzes and 2 programming exams (15%) Topics This course meets 6 hours per week, 2 hours in lecture, 3 hour in a computer lab, and 1 hour of group work in recitation. CS 415 and CS 416 are a sequence – the topics listed below are normally taught within CS 415, although the actual distribution of some of the topics between the two courses varies somewhat from year to year. Introduction/background Models Classes and objects Methods Inheritance, interfaces, polymorphism Expressions and conditionals Loops Strings Exceptions and exception handling Arrays and wrappers Algorithm Development Textbooks Sanders and van Dam, Introduction to Object-Oriented Programming in Java: A Graphical Approach. Stay Connected Department of Computer Science Kingsbury Hall N229 • 33 Acadmic Way • Durham, NH 03824 Tel: 603-862-3778• Fax: 603-862-3493 • Email: CS Copyright © 2015  •  TTY Users: 7-1-1 or 800-735-2964 (Relay NH)USNH Privacy Policies  •  USNH Terms of Use  •  ADA Acknowledgement