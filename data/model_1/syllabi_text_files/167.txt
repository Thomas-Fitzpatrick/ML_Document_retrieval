COSC121 - 17S1 (C) (2017): Introduction to Computer Programming Future Students Departments All departments College of Arts College of Business and Law School of Business and Economics College of Education College of Engineering UC Health School of Law College of Science Service areas Students Current students UC Timetable Learn Library Insider’s Guide to UC Research Research & Innovation UC SPARK Research Centres Postgraduate Studies at UC NZi3 National ICT Innovation Institute Bluefern - Supercomputer Library Teaching Teaching and learning Library UC Teaching Awards Key dates Learn Learn myUC Library Maps Contact us Toggle navigation Learn Library Maps Contact us Future students Future students Apply and enrol Apply now with myUCApply for undergraduate qualificationsApply for graduate and postgraduate qualificationsApply for PhD and Doctoral degreesApply for preparatory programmes Qualifications and courses Bachelors degreesHonours degreesMasters degreesPhDs and Doctoral degreesSubjects What makes UC unique Innovative programmesVibrant student communityGet outdoors in CanterburyExperience Christchurch's renewalExplore UC's campusLearn from the best Fees and funding Accommodation International students Get the support you need Services for new students Campus tours and future student events News and announcements Departments All departments College of Arts College of Business and Law School of Business and Economics College of Education College of Engineering UC Health School of Law College of Science Service areas Students Current students UC Timetable Learn Library Insider’s Guide to UC Research Research & Innovation UC SPARK Research Centres Postgraduate Studies at UC NZi3 National ICT Innovation Institute Bluefern - Supercomputer Library Teaching Teaching and learning Library UC Teaching Awards Key dates Learn Search courses Year 20172018 Advanced course search Future Students Toggle navigation Future students Qualifications and courses Subjects University terms explained Study advice and planning Preparatory programmes STAR UC Pathways Bachelors degrees Undergraduate certificates and diplomas Graduate certificates and diplomas Postgraduate certificates and diplomas Honours degrees Masters degrees PhDs and Doctoral degrees Certificate of Proficiency Apply and enrol What makes UC unique Fees and funding Accommodation International students Get the support you need Services for new students Campus tours and future student events Key dates Student profiles News and announcements COSC121-17S1 (C) Semester One 2017 Introduction to Computer Programming 15 points, 0.1250 EFTS20 Feb 2017 - 25 Jun 2017 Description Computer programming in a high-level language with special emphasis on style and structure. This course is a prerequisite for COSC122 and all 200 level COSC and SENG courses. In COSC121 you will learn the fundamentals of computer programming using the Python language.Programming is the nuts and bolts of computer science; it is an essential tool but only a small part of the overall subject. Programming involves using a special language to issue a series of instructions to the computer in order to have it solve a particular problem. COSC121 is a prerequisite for all 200 level COSC courses and is normally required as preparation for COSC122.An advanced COSC121 stream '121 Overdrive' will cover all the standard assessment material of COSC121 but with additional opportunities to explore extra language features, interesting problems, and/or project work. More information on the 121 Overdrive stream, including how to apply for entry to it, is available here. Learning Outcomes Students will: Understand the following Python data types and their methods : strings, lists, tuples, files, sets and dictionaries. Be able to implement basic algorithms using selection, iteration and function calling. Be able to apply their understanding of the Python language in designing, implementing and testing programs to solve simple problems in science and engineering. Be able to (re)structure code using modules and functions to reduce complexity. Appreciate the performance benefits of hashed data structures in certain applications. Be familiar with simple object oriented programming in Python. Be able to implement simple Graphics User Interfaces in Python. Be able to review and assess the quality and maintainability of Python code. Restrictions COSC123 Timetable 2017 Students must attend one activity from each section. Lecture A Activity Day Time Location Weeks 01 Monday 10:00 - 11:00 C2 Lecture Theatre (20/2-3/4, 1/5-29/5)C1 Lecture Theatre (20/2-3/4, 1/5-29/5) 20 Feb - 9 Apr 1 May - 4 Jun Lecture B Activity Day Time Location Weeks 01 Tuesday 15:00 - 16:00 C1 Lecture Theatre (21/2-4/4, 2/5-30/5)C2 Lecture Theatre (21/2-4/4, 2/5-30/5) 20 Feb - 9 Apr 1 May - 4 Jun Lecture C Activity Day Time Location Weeks 01 Thursday 15:00 - 16:00 C2 Lecture Theatre (23/2-6/4, 4/5-1/6)C1 Lecture Theatre (23/2-6/4, 4/5-1/6) 20 Feb - 9 Apr 1 May - 4 Jun Computer Lab A Activity Day Time Location Weeks 01 Friday 13:00 - 15:00 Erskine 133, 134 20 Feb - 9 Apr 1 May - 4 Jun 02 Monday 15:00 - 17:00 Erskine 133, 134 20 Feb - 9 Apr 1 May - 4 Jun 03 Tuesday 13:00 - 15:00 Erskine 133, 134 20 Feb - 9 Apr 1 May - 4 Jun 04 Monday 13:00 - 15:00 Erskine 133, 134 20 Feb - 9 Apr 1 May - 4 Jun 06 Tuesday 17:00 - 19:00 Erskine 133, 134 20 Feb - 9 Apr 1 May - 4 Jun 07 Thursday 09:00 - 11:00 Erskine 133, 134 20 Feb - 9 Apr 1 May - 4 Jun 08 Tuesday 09:00 - 11:00 Erskine 133, 134 20 Feb - 9 Apr 1 May - 4 Jun Examination and Formal Tests Test A Activity Day Time Location Weeks 01 Wednesday 17:00 - 19:00 Erskine 134 Lab 3 (5/4)Erskine 248 Computer Lab (5/4)Erskine 001 Crypt 1 (5/4)Erskine 010 Crypt 2 (5/4)Erskine 136 Lab 4 (5/4)Erskine 133 Lab 2 (5/4) 3 Apr - 9 Apr 02 Wednesday 19:00 - 21:00 Erskine 134 Lab 3 (5/4)Erskine 248 Computer Lab (5/4)Erskine 001 Crypt 1 (5/4)Erskine 010 Crypt 2 (5/4)Erskine 136 Lab 4 (5/4)Erskine 133 Lab 2 (5/4) 3 Apr - 9 Apr Timetable Note Check your personal timetable on My Timetable. Note that you are welcome to attend extra lab sessions provided there are free machines available.Depending on final student numbers, some of the advertised lab/tutorial streams may not run. Final lab/tutorial options will be available for self-allocation closer to the start of the semester through My Timetable. Course Coordinator Andrew Cockburn Lecturer Richard Lobb Assessment Assessment Due Date Percentage Description Lab Quizzes 10% Weekly Quizzes Mid Semester Test 15% Programming Assignments 15% Four Assignments Final Exam 60% There are four assessment components: weekly laboratory online quizzes, a mid-semester test, a so-called “assignment" and the final exam. The assignment will be a series of programs for you to write, handed out at regular intervals throughout the course. They will for the most part be automatically marked by our online program tester, but some of them will also be assessed by staff for readability and `style'. This set of assignment programs will also be referred to as the assignment superquiz. Textbooks There are two main options for books to use to supplement the lectures and support your lab work.- The second edition of "Practical Programming: An Introduction to Computer Science Using Python 3" by Campbell, Gries, Montojo and Wilson is the best book for the course  as it matches the lecture sequence well. It is available from the university bookshop, or you buy an e-copy for$US25 from http://pragprog.com/titles/gwpy2 You can probably find second hand copies of the first edition of the same book, but be aware that it uses version 2.7 of Python, and we are now using version 3. There are only a few minor changes that you will need to adjust for, and we'll give information about this in the course.- "How To Think Like a Computer Scientist'' is available free online at http://interactivepython.org. It uses the same version of Python as you'll need for labs (version 3). Course links Course Information on Learn COSC121 Overdrive Information STAR COSC121 Information Notes There are several important documents available online about departmental regulations, policies and guidelines at the following site. We expect all students to be familiar with these. Notices about this class will be posted to the class forum in the Learn system.COSC students will also be made members of a class called “CSSE Notices”, where general notices will be posted that apply to all classes (such as information about building access or job opportunities). Additional Course Outline Information Academic integrity Every year several students fail the course because of dishonest practice. Please do not be among them. You are encouraged to discuss the general aspects of a problem with others. However, anything you submit for credit must be entirely your own work and not copied, with or without modification, from any other person.If you share details of your work with anybody else then you are likely to be in breach of the University's General Course and Examination Regulations and/or Computer Regulations (both of which are set out in the University Calendar) and/or the Computer Science Department's policy. The Department treats cases of dishonesty very seriously and, where appropriate, will not hesitate to notify the University Proctor. If you need help with specific details relating to your work, or are not sure what you are allowed to do, then contact your tutors or lecturer for advice. Grade moderation The Computer Science department's grading policy states that in order to pass a course you must meet two requirements:1. You must achieve an average grade of at least 50% over all assessment items.2. You must achieve an average mark of at least 45% on invigilated assessment items.If you satisfy both these criteria, your grade will be determined by the following University- wide scale for converting marks to grades: an average mark of 50% is sufficient for a C- grade, an average mark of 55% earns a C grade, 60% earns a B- grade and so forth. However if you do not satisfy both the passing criteria you will be given either a D or E grade depending on marks. Marks are sometimes scaled to achieve consistency between courses from year to year.Students may apply for special consideration if their performance in an assessment is affected by extenuating circumstances beyond their control.Applications for special consideration should be submitted via the Examinations Office website within five days of the assessment. Where an extension may be granted for an assessment, this will be decided by direct application to the Department and an application to the Examinations Office may not be required. Special consideration is not available for items worth less than 10% of the course.Students prevented by extenuating circumstances from completing the course after the final date for withdrawing, may apply for special consideration for late discontinuation of the course. Applications must be submitted to the Examinations Office within five days of the end of the main examination period for the semester. Laboratory Work Practical work is an essential part of learning to program.A new laboratory exercise will be made available each week and you are expected to work on that exercise during your scheduled lab for that week. Each laboratory exercise is accompanied by an online quiz. The quizzes are electronically graded and the sum of all your quiz marks contributes 10% of your total course mark. Usually you will submit your work at the end of that scheduled lab session but if you wish to continue to work on the exercise in your own time during the next week you may do so. However, you must submit each quiz by its final submission date, the so-called “drop dead date", which is written on the exercise handout. Usually this is the Friday of the week after the lab exercise is handed out.The lab tutors will help you work through the exercises when you are stuck, but try to solve the problems yourself before calling for help. In programming there are in infinitely many possible programming exercises and each one has a huge number of possible solutions. It's not the solution to the problem that's important; it's the mental processes you use to get even one solution that matter. Tutors can provide only limited assistance with guiding your mental processes - ultimately you yourself have to acquire the necessary problem-solving skills. Costs Your usercode on our computer system enables you to access a range of services. Some of these services are not free and you are responsible for ensuring that your account contains sufficient funds to cover any charges you incur. If your account balance becomes negative then you may be unable to use any computer facilities until you have cleared this debt. The Computer Science Department is not involved with the financial details of your account - you should go to the Information and Communications Technology Services (ICTS) Department for this.The main chargeable service you are likely to make use of is printing.To use chargeable services you will need to have money loaded on your Canterbury Card.See the Information and Communication Technology Services (ICTS) Department home page for details of services and charges. Help! If you need help or are feeling lost, seek help immediately. Do not wait until the day before your assignment is due. There is plenty of help available - it is up to you to make use of it.Sources of helpThere are a variety of ways for you to get help.•   The Learn COSC121S1 forums provide electronic noticeboards for use by all students and staff involved with COSC121S1. You can post any course-related queries to these forums and other students or staff can answer them. You can access the forum by logging into Learn. However, there are a few rules to be observed:•    Be courteous. The forum should be a pleasant place for everyone. Rude, angry or arrogant postings will rapidly destroy the value of the forum.•   Don't be too helpful. By that we mean don't destroy someone else's learning experience by posting direct answers to test, exam or assignment questions. Rather, try to guide someone towards the solutions by hints or suggestions as to where the answers can be found. Never post assignment-related code.•   If time permits, some problems may be discussed with your tutors during normal laboratory sessions.•   Your lecturers are happy to help. However, their time is limited so please try to arrange an appointment by email to ensure that sufficient time will be available to deal with your queries effectively.•   Some students may wish to engage a tutor for additional private or group tuition. Mr Holland (room 220) can assist with advertising and information about likely costs.Note that the department is not responsible for computer systems and networks around the campus. The ICTS help desk (x6060) is the place to get help with technical problems outside the department. Working on your home computer Many students will do at least some of their laboratory and assignment work on home computers.To do that, you will need to install some course-specific software as follows:•   Python, version 3.5 or later. This can be downloaded from www.python.org. NB: Version 2.7 is NOT appropriate, as it is not compatible with version 3, which will be using in the course.•  Wing101 Version 6.0, the IDE (Integrated Development Environment) we use in COSC121S1. This can be downloaded from http://www.wingware.com/downloads/wingide-101/6.0/ . [This is not strictly essential; you can, if you wish, develop your programs using the IDLE IDE that comes with Python. Wing101 is what we will use in the lectures and laboratories, however.] •  Enjoy the Course!!! Indicative Fees Domestic fee $817.00 International fee $3,525.00 * Fees include New Zealand GST and do not include any programme level discount or additional course related expenses. For further information see Computer Science and Software Engineering. All COSC121 Occurrences COSC121-17S1 (C) Semester One 2017 COSC121-17S2 (C) Semester Two 2017 Previous year Next year GENERAL ENQUIRIES +64 3 369 3999 info@canterbury.ac.nz ENROLMENT ENQUIRIES 0800 VARSITY (827 748) enrol@canterbury.ac.nz INTERNATIONAL ENQUIRIES +64 3 364 3443 (Aus) 1-800-431595 Ask a question CONTACTS & DIRECTORIES University contacts Student contacts Students' Association A–Z of Support Services Find a researcher (SPARK) Accommodation Campus maps Donate online DEPARTMENTS All departments College of Arts College of Business and Law School of Business and Economics College of Education, Health and Human Development College of Engineering UC Health School of Law College of Science Service areas LATEST Canterbury Magazine Chronicle Magazine Events Insider's guide student blog Student e-newsletters News Publications UCnow Vacancies TOOLS UC Policy Library Staff email Intranet (Staff) Student email myUC IT account Learn Library OneDrive Timetable Copyright and Disclaimer Feedback Help and accessibility Privacy Emergency Information © University of Canterbury