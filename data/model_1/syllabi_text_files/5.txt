Computer Science Course -- Univ. of Porto -- Computer Programming II Go backward to Computer Programming IGo up to Course Modules: aims, syllabi and bibliographyGo forward to Topics on Discrete Mathematics Computer Programming II Aims To introduce the students to the intrinsics of imperative programming through the C language, after having first learned the principles of declarative programming in Computer Programming I. Syllabus Pseudo-code to describe algorithms. Concepts of imperative structured programming: control constructs, loops, functions and program structure, recursion, arrays and pointers, call by value and call by reference, external variables, scope rules, structures, Input and Output. Programming design techniques: top down structured design and modular design. The use of make and makefiles in implementation. Implementation of searching and sorting algorithms in the C language. Basic abstract data types: lists, stacks, queues and trees. Their representation using arrays and/or dynamic variables. Bibliography Steve Oualline, Practical C Programming, 2nd edition, O'Reilly and Associates, 1993. B. Kerninghan and D. Ritchie, The C Programming Language, 2nd ed., Prentice-Hall, 1989. F. Friedman and E. Koffman, Problem Solving, Abstraction, and Design Using C++, Addison-Wesley, 1994. Harley Hahn, A student's guide to Unix, McGraw-Hill, 1993.