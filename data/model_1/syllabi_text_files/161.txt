Skip to main content Computer Science and Engineering HomeBack to top About Chairperson Welcome Maps Notable Newsletters Research Groups Showcase CSE Lecture Series Students Current Undergrads Current Masters/PhD Future Undergrads Future Masters/PhD Resources Facilities CSE Course Information Info For Faculty Calendars Request Forms Employment Opportunities People Faculty and Staff Faculty and Staff listing Publications and Tech Reports Students Student Organizations Grad Student Profiles Student Homepages Student Resumes Student Organizations Committees Alumni & Friends Sponsors Alumni Showcase CSE ACCOUNT LOGIN CONTACT Home > Students > Future_Undergrad > CSE_Prereq > Syllabi > CSE_231 CSE 231 Introduction to Programming I CSE 231 Introduction to Programming I (4 cr: 3 lecture + 1 lab) Catalog Course Description Introduction to programming using Python. Design, implementation and testing of programs to solve problems such as those in engineering, mathematics and science. Programming fundamentals, functions, objects, and use of libraries of functions. Course Outcomes (Letters refer to program outcomes; caps indicate greater emphasis.) There are two broad goals for this course: If a student is presented with a problem, the response should be: "I can write a program to solve that." This course should prepare students for further study in computer science. The course outcomes in more detail are: (Fundamentals) Students will learn general programming concepts, as well as a modern programming language that employs those concepts. (a,I) Students will learn the fundamentals of a programming language. (such as language-defined data types (int, float, bool, str, list, tuple, dictionary, and set), programmer-defined classes, control constructs (sequence, selection, repetition), program modules (including functions, modules, methods ) ) (Knowledge & Comprehension) Be able to recall the fundamental components of the programming language studied in the course. (Application) Given an algorithm a student will be able to formulate a program that correctly implements the algorithm. Students will learn a programming environment. (Application) Students will be able to demonstrate that they can effectively use the programming environment used in the course. (Problem solving) Students will design, implement and test readable Python programs to solve problems. (C,I,k) Create algorithms to solve problems. As part of creating a solution, extend the programming language with new statements (functional abstraction) and new types, abstract data types (ADTs). (Application) Students will create programs that use functional and data abstraction. Given a problem students will be able to select an appropriate existing ADT or function, e.g. from a package; or create a new, appropriate ADT, function, or package. Write programs that use functions and ADTs. (Application) Given a set of functions and ADTs, possibly in a package, students will be able to develop an algorithm to solve a problem and implement the algorithm. (Teamwork) Students will work in teams of two to solve problems in lab sessions. (d) Program Outcomes covered in CSE 231 (a)An ability to apply knowledge of computing and mathematics appropriate to the discipline (c)An ability to design, implement, and evaluate a computer-based system, process, component, or program to meet desired needs (d)An ability to function effectively on teams to accomplish a common goal (i)An ability to use current techniques, skills, and tools necessary for computing practice (k)An ability to apply design and development principles in the construction of software systems of varying complexity Assessment Assessment of how well outcomes are being achieved will be done by applying a rubric to a random sample of at least 25% of the students who have completed the work being used for assessment. Assessment tools are examinations and programming projects. For each outcome being assessed, each student in the sample will be judged to (a) exceed, (b) meet, or (c) fail to meet an objective standard designed to assess this outcome. Unless otherwise specified the thresholds used are: meet (70%), exceed (85%). We will say that this offering of the course achieved the particular outcome if and only if 70% or more of the students sampled were assessed to be in categories (b) or (c). Course outcome I assessed by specific programming work and specific exam questions. the success of students who take CSE 232 within one year (meet: 70% earn 2.0 or better). Course outcome II assessed by specific programming work and exam coding questions (written) the success of students who take CSE 232 within one year (meet: 70% earn 2.0 or better). Course outcome III assessed by successful completion of 70% of the laboratory exercises (required to be done in teams of two). Topics Digital computing systems Problem solving Fundamentals of programming Sequence, Selection, Repetition Functions and modules Data Structures Objects and methods Files Data manipulation Algorithms Textbook The Practice of Computing using Python, Punch & Enbody, Addison-Wesley, 2010 Grading Examinations Homework Labs Computer Science and Engineering 428 South Shaw Rd Room 3115 East Lansing, MI 48824517-353-3148 View map | E-mail us Connect with us Contact Us © Michigan State University Board of Trustees. East Lansing MI 48824 (517) 355-1855MSU is an affirmative-action, equal-opportunity employer. Visit msu.edu