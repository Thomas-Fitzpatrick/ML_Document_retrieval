CSCI 1100 - Computer Science I | FCS Undergraduate Curricula Skip to Main Content Area FCS Undergraduate Curricula CSCI 1100 - Computer Science I Daedalus Help: This page shows the relationship between courses (Course Map). There are links to pre-requisite courses, co-requisites and cross listing. For cross-listed courses, only one instance is mapped and all other course code are redirected. The assumed learning outcomes section indicate SLOs assumed to be mastered prior to taking this course. Course Map The information provided here is superceeded by this course's official calendar entry. Please refer to the academic calendar for an official source on academic requirements. Assumed Learning Outcomes    What the student enrolling in this course is assumed to be able to do.#pre-requisite Apply and manipulate simple arithmetic equations. [PREU 0000] Know how to use computers (basic skills). [PREU 0000] Student Learning Outcomes    Student learning outcomes that are covered by this course.#basics #career #programming #systems #algorithm #development #java #data structures #logic Define a computer system.Describe what the disciplines of informatics and computer science entail.Explain and use the concepts of primitive types, variables, and variable assignment.Explain memory, binary numbers, and memory addresses.Explain what is an algorithm.Compare and contrast problems, challenges, issues, and foci of computer science and informatics.Design Java programs on an integrated development environment such as JCreator.Explain and use the concept of arrays to store aggregate data.Explain the purpose and function of an integrated development environment (IDE).Implement a program with a graphical user interface that prints text and displays pictures.Use pseudo-code to specify an algorithmDevelop and use arithmetic expressions comprising arithmetic operators, constants, and variables.Develop and use boolean expressions comprising relational and logical operators.Explain and use the concept of loops to perform repetitive tasks.Explain and use the concept of procedures to develop modularized code.Identify and repair simple bugs in small code samples (30 lines).Implement simple algorithms to search and sort arrays.Describe the procedural programming paradigm and describe commonalities among a variety of commonly used procedural languages.Design (reusable) functions to divide the solution of a problem into simpler steps.Develop a program to solve simple problems by decomposing the problem into simple tasks, implementing procedures to solve the tasks, and composing the procedures to solve the original problem.Explain and use the concept of conditional structures to perform decision-making.Write a reasonably-complex (200-250 line) modular procedural program. Daedalus Menu BrowseCourses Learning Outcomes User login Username: * Password: * Request new password This curriculum mapping software is developed by the Faculty of Computer Science, Dalhousie University.