CS1002: Object-Oriented Programming | CS Student Handbook CS Student Handbook Key Points Home Welcome Communication Problems Welcome Emails Programmes & Modules Programme Aims & Outcomes Modules Timetables Learning & Teaching Organisation of Learning & Teaching Academic Year Module Choices Teaching Assessment Feedback Time Management Writing Guidance Programming Style Academic Alerts Project Library Distinguished Lecture Series Academic Matters Absence Appeals & Complaints Suspension & Termination of Studies Good Academic Practice Ethics Disability Support Study Abroad Prizes, Medals & Awards Other Academic Matters Course-Specific Sub-Honours Honours Masters Evening Degree School Events Buildings Labs Systems Welfare & Equality Health & Safety Online Resources Exam Archive Comments & Feedback Student Representation SSCC Library Reading Party Mentoring Scheme Gifts Internships References Jack Cole CS1002: Object-Oriented Programming Aims Learning Outcomes Syllabus Compulsory Elements Links Module Delivery Search Student Handbook CS1002: Object-Oriented Programming This module is offered in 2017-18. Aims The aims of this module are: To introduce the concepts of software design and programming. To develop skills in the use of a modelling tool and a high-level object-oriented language. Learning Outcomes On successful completion of this module, the student should: Be able to design simple object-oriented (OO) models using an OO design notation and supporting software tools. Be able to implement an OO model in a high-level OO language using objects, classes, inheritance, arrays, conditionals and iteration. Be conversant with effective documentation, layout, debugging and testing. Syllabus Software development: nature of software, software lifecycle, models, design, programming, testing and debugging Object-oriented concepts: objects, attributes, methods, classes, identity, references, inheritance UML: UML diagrams, object-oriented model design with a UML tool Java: Classes, objects, types, control flow, libraries, inheritance, documentation with JavaDoc, using Java from command line and an Integrated Development Environment, unit tests Compulsory Elements This module has no compulsory elements beyond those common to all sub-Honours modules (tutorials, exercise classes, mark of 4 in each assessment component). Links Course catalogue entry Reading list Resources Module Delivery Dharini Balasubramaniam Kasim Terzic Home Welcome Communication Problems Welcome Emails Programmes & Modules Programme Aims & Outcomes Modules Timetables Academic Matters Absence Appeals & Complaints Suspension & Termination of Studies Good Academic Practice Ethics Disability Support Study Abroad Prizes, Medals & Awards Other Academic Matters Learning & Teaching Organisation of Learning & Teaching Academic Year Module Choices Teaching Assessment Feedback Time Management Writing Guidance Programming Style Academic Alerts Project Library Distinguished Lecture Series Course-Specific Sub-Honours Honours Masters Evening Degree School Events Buildings Labs Systems Welfare & Equality Health & Safety Online Resources Exam Archive Comments & Feedback Student Representation SSCC Library Reading Party Mentoring Scheme Gifts Internships References Jack Cole Back to top Copyright Â©2013-2018. All Rights Reserved. Last Published: 11 Jan 2018.