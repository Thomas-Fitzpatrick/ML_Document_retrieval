Syllabus Syllabus EECS 183. Winter 2018. eecs183.org Table of Contents 1. Basic Information 2. Overview 3. Website 3.1. Course Information 3.2. Resources 3.3. Schedule 4. Materials 4.1. CodeLab 4.2. zyBooks 4.3. Safari Books 5. Taking the Course Pass/Fail 6. Course Withdrawals 7. Lectures 8. Lab Sections 9. Piazza 10. Office Hours 11. Exam Reviews 12. Assignments 13. Projects 13.1. S’more 13.2. Final Project 13.3. Submitting Projects 13.4. Honor Code 13.5. Tips for Success on the Projects 14. Exams 15. Students with Disabilities 16. Grades 16.1. Tentative Points 16.2. Final Grades EECS 183: Elementary Programming Concepts 1. Basic Information Website https://eecs183.org/ Discussion forum http://piazza.com/ Contact the staff For any administrative issues, please contact the staff at https://eecs183.org/admin. Please use this form whenever you have a question about grades, assignments, absences, VISA (from the office of Services for Students with Disabilities) requests for accommodations, or other course-material related questions or issues which can not be answered on Piazza or during office hours. 2. Overview This is an introductory course in computer programming for Computer Science majors and non-majors alike. Topics include control-flow, introductory data structures, algorithms using selection and iteration, basic object-oriented programming, testing and debugging. We primarily use C++ and Python as programming languages. There are no prerequisites. EECS 183 does not assume any prior programming experience. However, we do assume that you can use email, Internet, etc. 3. Website The address of the course’s website is https://eecs183.org. Visit the course’s website to access the schedule, watch videos of lectures, download source code used in lectures, view project specifications, submit projects and follow links to other resources. 3.1. Course Information A calendar of all lectures, discussion sections, and office hours accessible via the Course Info button on the left side of the course’s website. Click on an event to see its details, including time, location and description, if any. 3.2. Resources The Resources page of the website contains slides and source code used in lectures, recordings of lectures, materials from discussion sections, references for the software used in the course and other documents. 3.3. Schedule A schedule is available via the Course Info button on the left side of the course’s website. Then click on schedule and you’ll find a listing of all reading assignments, lectures and topics, exams, due dates, and programming assignments, subject to change. 4. Materials 4.1. CodeLab EECS 183 requires students to complete exercises within TuringsCraft’s CodeLab website. For registration information see CodeLab Purchasing. See the Grades section for details on CodeLab scores. 4.2. zyBooks EECS 183 requires students to read and complete exercises within zyBooks, an online book. zyBooks will cover both C++ and Python. It is easy-reading with animations where appropriate and exercises to reinforce your understanding. For registration information see zyBooks Purchasing. See the Grades section for details on zyBooks scores. 4.3. Safari Books While no textbooks other than zyBooks are required for the course, you are welcome to supplement your preparation or review with self-assigned readings from other resources. Realize that all UM students have access to the Safari Books Online database, which has hundreds of textbooks online for free. With the multitude of books available, it is difficult to know which are good, but allow us to recommend a few, in this order: C++ Primer, Fifth Edition Stanley B. Lippman, Josée Lajoie, Barbara E. Moo Addison-Wesley Professional, 2012 http://proquest.safaribooksonline.com.proxy.lib.umich.edu/ book/programming/cplusplus/9780133053043 C++ How to Program, Ninth Edition Paul Deitel, Harvey Deitel Prentice Hall, 2013 http://proquest.safaribooksonline.com.proxy.lib.umich.edu/ book/programming/cplusplus/9780133378795 C++: An Active Learning Approach Todd W. Breedlove, Randal L. Albert Jones & Bartlett Learning, 2010 http://proquest.safaribooksonline.com.proxy.lib.umich.edu/ book/programming/cplusplus/9780763757236 5. Taking the Course Pass/Fail If you are taking this course Pass/Fail, you will need a total of 700 points (C-minus or better for LSA, see the Grades section for details on points) in the course to achieve a passing grade. You may want to ask the faculty to assist you in determining when you have enough points to “Pass” the course. We will not notify you when you have enough points to pass. This is critical to know before joining a team for the Final Project. It would be grossly unprofessional if you join a team and then back out because you decide the Final Project is too much work and you do not need the score to pass this course. 6. Course Withdrawals The last date the EECS 183 faculty will approve withdrawal requests for the semester is Friday, March 16, the withdrawal date for the Colleges of LSA and Engineering as published by the Registrar’s Office. Note: this final withdraw date for LSA will also be applied to all students in Business Administration, Dentistry (D.D.S.), Law School, Medical School and the School of Social Work. 7. Lectures You are expected to regularly attend lectures. Lectures will involve i>clicker questions and your answers thereto will contribute to your final grade. Videos of lectures will be posted on the course’s website shortly after each lecture. You are welcome to watch a recording if you are unable to attend some lecture in person. You are encouraged to watch these recordings for the sake of review. Lecture slides are also posted on Canvas and the course website in advance of lectures. 8. Lab Sections You are expected to regularly attend labs. Lab sections will give you the opportunity to practice the course material in a supportive environment with more personal attention than is possible in lecture. Labs will typically involve three components: a short introduction to the lab activity and discussion of relevant topics, an exam preparation exercise, and a guided lab exercise which is intended to be completed during lab time. The work from the lab will be submitted and graded for completeness and correctness. We encourage you to work in groups during the labs. However, you must submit your own solution for each lab to receive credit. Be sure to bring a laptop to lab section if you have one, or work in collaboration with other students who do. For both lectures and labs you are encouraged to attend the section that best suits your learning style. And sometimes it helps to hear things twice, if not from different people. However, understand that students who are actually registered for that section have priority on seats. The Course Info page of the website lists all lectures and labs, along with their meeting times, locations and instructors. 9. Piazza All students are required to register on Piazza, the course’s discussion forum, via http://piazza.com. If an announcement is posted on Piazza (and sent out via email), you will be expected to have read it. To pose a question to the staff (and to your classmates!) throughout the semester, head to http://piazza.com. If you would like so, you may choose to remain anonymous to your classmates. For any administrative issues, please contact the staff at https://eecs183.org/admin. If you decide to post a question, be sure to search first, lest it already have been asked and answered. If you do post a new question, provide as much detail as possible, without sharing code from your solution. Posting code from your solution to projects or to any other assignments, including CodeLab, is considered an Honor Code violation. If you choose to ask a question about a CodeLab exercise, be sure to include the question number. If you choose to ask about an i>clicker question from lecture slides, about a question from a past exam, or about a CodeLab exercise, be sure to include the entire question. Unquestionably, you are encouraged to read others' questions and answers for your own benefit. 10. Office Hours Office hours are opportunities for assistance with projects, CodeLab exercises and understanding concepts. Office hours ordinarily take place from 2:00 p.m. until 8:00 p.m. Monday, and Wednesday through Friday, and Tuesday 2:00 pm to 7:30 pm, on the third floor of the Duderstadt Center of Duderstadt Center. Upon arrival, head to the East corner of the third floor and sign up to receive help. Check for staff on duty via the Office Hours button on the left side of the course’s website. Before doing so though, be sure to search for your question on Piazza, lest it already have been asked and answered. If you do sign up for help, provide as much detail as possible about what you’re finding difficult to understand or to implement. A schedule of office hours appears at Office Hours button on the left side of the course’s website. 11. Exam Reviews Led by the course staff, there will be exam reviews before each of two mid-term exams. These 60- to 90-minute exam reviews take place on the Sundays immediately preceding exams at 6:00 PM in Chemistry Building 1800. Before each exam, they will involve a course-wide review. Videos of the exam reviews will be posted on the course’s website. 12. Assignments Several assignments will be required to be completed for the course. Assignments may involve programming exercises in CodeLab, as well surveys. Assignments must be submitted by following links therein. Assignments are due by 6:00 p.m. on on the due date. To account for short-term, unexpected events like network outages, computer crashes, submission problems, and clock skew, we will allow a grace period of 6 hours and will accept assignments until exactly 11:59:59 p.m. with no penalty. No late days may be used on assignments. 13. Projects Five projects will be required for the course (four during the semester and a Final Project). Each project will require a substantial time commitment on your part. Each of the first four projects is designed to address specific learning goals. They are also designed for pertinence in today’s world and of course fun! 13.1. S’more In order to accommodate students with different backgrounds and interests, most projects include a S’more part. Its purpose is to challenge those students who are more comfortable and would like to solve a more sophisticated problem. Students who submit S’mores do not receive any extra credit outright, but completing S’mores is a great way to learn more about course topics. 13.2. Final Project The Final Project will build off all you have learned during the semester. It is your chance to develop a really cool project to show off to your fellow classmates, friends, family as well as to company recruiters at the Showcase. Your final project may be one that the staff have designed and will support, or one of your own. Moreover, inasmuch as software development is rarely a one-person effort, the Final Project will be team-based where the teams are of size 4. The faculty will put together teams of 3 only if needed. No other team size will be allowed without express faculty permission, in advance. Needless to say, it is expected that every student on the team contribute equally to the design and implementation of that group’s project. If a student does not contribute, their team may vote them off the team with approval of the faculty. Then the students needs to find another team to join or their score on the Final Project will be a zero (0). Note that final project submission deadlines, as specified in the course schedule or on the final project general specification, are absolute and final deadlines. No late submissions of any portion of the final project will be accepted for grade. 13.3. Submitting Projects Due Times You will submit your projects through a web form. Projects are due at 6:00 p.m. on the due date. To account for short-term, unexpected events like network outages, computer crashes, submission problems, and clock skew, we will allow a grace period of 6 hours and will accept projects until exactly 11:59:59 p.m. with no penalty. Bonus Point Policy For the first four projects, if your last submit is 2 days (or more) before the due date, you will receive bonus points calculated at 5% of your “correctness” and “test suite” points. If your last submit is between 2 days and 1 day before the due date, you will receive bonus points calculated at 2.5% of your “correctness” and “test suite” points. For purposes of early submission, the 11:59 pm submission deadline is used. That is, if your last submission is by 11:59 pm on Wednesday you will earn 5% bonus points for a project due on Friday two days later. Style will not be included in the bonus point calculation. Note that there are no bonus points for the Final Project. In addition to the bonus points for projects turned in early, some projects may also have an extra credit component. Late Policy Sometimes unexpected events make it difficult to submit a project on time. For this reason, each student will have a pool of 3 late days to be used for any of Project 1 through Project 4 throughout the semester. That is 3 days total for the semester, not three days per project. These late days should only be used to deal with unexpected problems such as illness. They should not be used simply to start later on a project or because you are having difficulty completing the project, lest you fall behind with the course’s material. Once late days are used up, submissions received after the due date will be highly penalized. Note that each student is responsible for tracking his or her own late days. If you use a 4th late day, your submission will be counted at 50% of your score. If you use a 5th late day, it will not count. Try to save some late days for the last projects. Weekend days are counted in the same way as weekdays (e.g., if the project deadline is Friday and you turn it in Sunday, that’s two days late). Late days and penalties are applied to the individual part of a project submitted late. For example, if the “correctness” portion of a project is submitted one day late, and the "test suite" is submitted two days late, the amount recorded will be two days late for this entire project — the max of (1 day late, 2 days late).  If the "correctness" portion of a project is submitted 4 days late, and the "test suite" is submitted on time, the amount recorded will be 4 days late and the penalty will be applied only to the "correctness" portion of the project. If the “test suite” portion is submitted on time but the “correctness” portion is submitted one day late, the amount recorded will be one day late. Note that late days may not be used for the Final Project. Extension Policy To request an extension beyond the three free late days, you must discuss your situation with an instructor before the deadline and provide written documentation. Extensions will typically not be granted, even for computer problems, illness, family emergencies, etc. You can avoid most problems by starting the projects early and keeping backup files. If a family/personal emergency causes you to miss a significant number of days, please see an instructor to decide the best course of action. If you are having trouble understanding the material or starting a project, please come to office hours for help right away. Contact an instructor at the beginning of the semester if you have a disability that might interfere with your ability to participate in class, submit assignments, or take exams. 13.4. Honor Code All students in the class are presumed to be decent and honorable, and all students in the class are bound by the College of Engineering Honor Code. You may not seek to gain an unfair advantage over your fellow students; You may not consult, look at, or possess the unpublished work of another without their permission; You are not allowed to look at or in any way derive advantage from the existence of project specifications or solutions either for the current semester or for past semesters; and You must appropriately acknowledge your use of another’s work. Any violation of the honor policies appropriate to each piece of course work will be reported to the Honor Council, and if guilt is established penalties may be imposed by the Honor Council and Faculty Committee on Discipline. Such penalties can include, but are not limited to, letter grade deductions or expulsion from the University. Students who are not members of the College of Engineering and who take a course offered by the College are bound by the policies of the Engineering Honor Code. Any suspected policy violations will be referred to the Engineering Honor Council and Faculty Committee on Discipline. The appropriate authorities of the school or college of the students involved will be notified. If you have any questions about this course policy, please consult the course instructor. Some projects in this course are to be completed individually; other projects may be done as a team of two current EECS183 students. All projects in this course are in accordance with the College of Engineering Honor Code. Violation will result in a zero on the project in question and initiation of the formal procedures of the Engineering Honor Council. We will use automated programs and manual checks to correlate projects with each other, and with prior solutions. At the same time, we encourage students to help each other learn the course material. As in most courses, there is a boundary separating these two situations. You may give or receive help on concepts covered in lecture or discussion and on the specifics of C++ syntax. You may consult with other students to help you understand the project specification (i.e., the problem definition). However, you may not collaborate in any way when constructing your solution—​the solution to the project must be generated by you working alone. You are not allowed to work out the programming details of the problems with anyone or to collaborate to the extent that your programs are identifiably similar. You are not allowed to look at or in any way derive advantage from the existence of project specifications or solutions prepared in prior years (e.g., programs written by former students, solutions provided by instructors, project handouts). If you have any questions as to what constitutes unacceptable collaboration, please talk with an instructor. You are expected to take reasonable precautions to protect your work. You may not store your work in a publicly accessible location, such as public code repositories. Don’t let other students borrow your account or computer, don’t leave your program in a publicly accessible directory, and don’t discard printouts in a public place. 13.5. Tips for Success on the Projects The most common reason for doing poorly on the projects is starting them late. You will be given plenty of time to complete each project. However, if you wait until the last minute to start, you may not be able to finish. Start early, and plan to have it finished a few days ahead of the due date. Expect to spend more time debugging the code than you did writing it. The most common reason for spending too much time on a project is coding before thinking through the entire project. Resist the urge to start writing code as your first step; you are likely to code yourself into a corner. Set aside time to plan out the architecture of your solution. Expect to revise this architecture several times before settling on a plan. Read the project description carefully, and list the behaviors the specifications require of your solution. The more you think through and understand what needs to be programmed before you write code, the better. Design your project with independently and incrementally testable subsystems rather than saving all testing for the end. Testing is about seeing if you can break the solution with the simplest possible test. Another common reason for spending too much time on a project is debugging by trying things at random, just to see if they work. If you find a workaround without understanding why it fixes the problem, you may be masking the problem rather than fixing it, and it will probably cause more problems later and be harder to fix. If you find yourself in this position, step away from the computer and think about what is happening, or come see an instructor in office hours. There are many sources of help on which you can draw. Most questions can be submitted to Piazza. These will typically be answered within the day, often more quickly during working hours. However, some types of questions cannot be answered without seeing your project. If you have detailed questions about your program, speak to an instructor during office hours. Students are also encouraged to help one another on the course concepts (but not the implementation of the projects). One of the best ways for you to make sure that you understand a concept is to explain it to someone else. Keep in mind, however, that you should not expect anyone else to do any part of your project for you. The project that you turn in must be your own. Many computing sites have consultants who are available to help you. They can often help with questions about the computers, printers, and installed software (e.g., Unix, AFS, e-mail). However, they probably will not be able to help you with questions about operating systems, C++, or specific errors in your program. Some projects may be done with partners. In this case, the uniqname of both partners must be in all files submitted. Also, both partners must submit all files involved. If one of the partners does not submit, then the score for the non-submitting partner will be zero. 14. Exams There will be two midterm exams during the semester. You are expected to take all exams at the scheduled times. For the midterms, there may be an alternate exam time offered. If you miss an exam for reasons other than a documented medical or personal emergency, you will receive a zero for that exam. If you anticipate a conflict with an exam time, talk to the instructor at least one month before the exam date, and you must fill out the official request for alternate exam, found on the course schedule. Exam dates are listed at the beginning of the semester in the schedule on the course’s website so you can avoid scheduling job interviews or other commitments on those days. Outside commitments are not considered a valid reason for missing an exam. To be very clear, on a missed exam: If the missed exam is Exam 1, and if we have prior notice and it is for a documented medical or personal emergency, then the normalized score of Exam 2 will be used. If the missed exam is Exam 1, and we did not receive prior notice, the score on the exam will be a zero unless it is a documented extreme circumstance. Poor judgment does not qualify as an extreme circumstance. If the missed exam is Exam 2 and if we have prior notice, and it is for a documented medical or personal emergency, an alternate exam 2 may be offered during the semester. If for some valid reason, as determined by faculty, the alternate exam is not taken during the semester, an incomplete will be given and you may take the exam the following semester. If the missed exam is Exam 2 and if we did not receive prior notice, the score on the exam will be a zero unless it is a documented extreme circumstance. Poor judgment does not qualify as an extreme circumstance. Furthermore, If a student does not bubble in their correct UMID on the scantron portion of the exam, we will deduct 10 points. If a student does not bubble in the correct Key Number on the scantron portion of the exam, we will record a zero(0) on this portion of the exam. If a student does not sign page 1 of the Multiple Choice section of the exam and print their uniqname legibly and correctly, we will deduct 10 points. If a student does not write their uniqname or does not write their uniqname legibly and correctly on the written portion of the exam, we will deduct 10 points. 15. Students with Disabilities If you believe you need an accommodation for a disability, please let us know before the first alternate exam request deadline, as specified in the course schedule. We work with the Services for Students with Disabilities office to determine the appropriate academic accommodations. The SSD office can be reached by phone at 734-763-3000, by email at ssdoffice@umich.edu, or at the SSD Website. The SSD office recommends accommodations through the Verified Individual Services Accommdations (VISA) form. Please contact the SSD office well before the deadline to assure they may furnish the documentation necessary to provide accommodations. You may submit documentation to a course instructor during office hours or before/after lecture. Requests without documentation or after the deadline may not be considered. 16. Grades 16.1. Tentative Points Final grades will be based on the total points earned on the projects and exams. The tentative point breakdown is: Item Points Total 1000 points Exams (2) 400 Projects (4) 310 Final Project 130 Assignments (includes CodeLab) 60 Labs (9) 50 zyBooks Exercises 40 i>clicker Questions 10 16.1.1. CodeLab Codelab is due six times during the semester. Due dates for exercises can be determined directly through the CodeLab site. Due dates will also be published through Assignments on the course schedule. There are approximately 160 exercises. You need to complete 137 of them correctly and on-time to get full points. That comes out to be approximately 0.29 points per correct exercise completed by the deadline with a maximum of 40 points. In regard to CodeLab exercises, you have unlimited tries and it only matters that your final answer is correct. Late days cannot be used on CodeLab exercises. 16.1.2. zyBooks The “Required Readings” in zyBooks are listed on the Course’s Schedule. The assumption is you have completed the reading before attending lecture. On the Course’s Schedule, you will note that there are about 20 dates for readings. Each reading will be worth a max of 3.5 points and you will receive full credit if you have at least 70% of the participation exercises correct and have at least 70% of the activities attempted. If not, your score will be a zero for this portion. zyBooks is worth a maximum of 40 points and late days cannot be used on zyBooks exercises. Note: We do not include "Challenge" activities within this 70% calculation. If your goal is to understand the material, then we strongly you have the readings done before lecture. If your only goal is to get the points connected with zyBooks, we pull the data every Friday at 11:59:59 pm. The more you understand the material, the "easier" the exams are (i.e., higher grades) and the "easier" the projects are (i.e., less time-consuming). 16.1.3. i>Clicker Questions There are many i>Clicker exercises throughout the semester. You will receive 1 point for each lecture you obtain at least 50% of the i>Clicker questions correct for that day. Points for i>Clicker questions will be maxed at 10. You must register your i>Clicker through Canvas. If you forgot your i>Clicker for a day, there is no way for us to give you the point. There are extra days worked into the schedule. If you lost your i>Clicker, you will need to obtain and register a new one, along with notifying the course staff at https://eecs183.org/admin about your new i>Clicker. 16.2. Final Grades The number of points you earn will determine your final grade in the class based on a straight scale. It is important to recognize that at the University of Michigan Cs represent adequate performance in the class, Bs represent very good performance and As represent high accomplishment in mastering the material. Note this table is for general guidance only, actual cutoffs will change. Score Range: In percentages Grade A+'s are only awarded in exceptional circumstances where students have gone above and beyond expectation. Points alone do not establish the grade of A+. A+ [93,100] A [90,93) A- [87,90) B+ [83,87) B [80,83) B- [77,80) C+ [73,77) C [70,73) C- [67,70) D+ [63,67) D [60,63) D- The question always comes up: “do we curve the grades”. Normally: no we don’t curve grades. However we may slightly adjust grade cutoffs, but only to the benefit of students. Furthermore, we do not round scores to the closest percentage. Incompletes will generally not be given. According to university policy, doing poorly in a course is not a valid reason for an incomplete. If you are having problems in the course, please talk to an instructor as soon as possible.