Learning Outcomes | Review ICS 111 Review ICS 111 Modules Outcomes Readings Experiences Review Sites Home Learning Outcomes Learning Outcomes This page presents course-level and module-level outcomes. Outcomes identify what students will know and be able to do if they master the material. Articulated Student Learning Outcomes Use an appropriate programming environment to design, code, compile, run and debug computer programs. Demonstrate basic problem solving skills: analyzing problems, modeling a problem as a system of objects, creating algorithms, and implementing models and algorithms in an object-oriented computer language (classes, objects, methods with parameters, abstract classes, interfaces, inheritance and polymorphism). Illustrate basic programming concepts such as program flow and syntax of a high-level general purpose language. Demonstrate working with primitive data types, strings and arrays. Course Specific Student Learning Outcomes Understand the goals, structures, and procedures for learning in ICS 111. Understand the fundamentals how a computer works. To learn how to take a problem, figure out the algorithm to solve it, the write the code. To learn basics of programming with a modern programming language, Java. Understand how to install and use a good Java development environment. To learn how to produce robust programs in Java using exception handling and extensive program testing. BS Program Student Outcomes An ability to apply mathematical foundations, algorithmic principles, and computer science theory to the modeling and design of computer-based systems. An ability to define the computing requirements of a problem and to design appropriate solutions based on established design principles and with an understanding of the tradeoffs involved in design choices. An ability to use sound development principles to implement computer-based and software systems of varying complexity, and to evaluate such systems. An ability to use current techniques, skills, and tools necessary for computing practice. Translate a problem to code To learn how to take a problem, figure out the algorithm to solve it, the write the code. The student will: Be able to deconstruct problems to develop algorithms and eventually program code. Referencing modules: Names and Things, Control, Subroutines, Objects and Classes, Introduction to GUI programming, Arrays and ArrayLists, Recursion Understand Java To learn basics of programming with a modern programming language, Java. The student will: Design, develop and test Java programs using classes, methods, conditionals, loops, etc. Be able to develop simple data structures in object oriented form. Referencing modules: Names and Things, Control, Subroutines, Objects and Classes, Introduction to GUI programming, Arrays and ArrayLists, Recursion Program in Java To learn how to produce robust programs in Java using exception handling and extensive program testing. The student will: Develop substantial Java programs, when appropriate reusing previously created classes, writing programs requiring three or more classes. Referencing modules: Names and Things, Control, Subroutines, Objects and Classes, Introduction to GUI programming, Arrays and ArrayLists, Recursion Understand the fundamentals of computers Understand the fundamentals how a computer works. The student will: Understand the fetch - decode - execute cycle. Know and be able to describe the difference between Machine Language and High-level Programming Languages. Know the difference between compiled and interpreted code. Referencing modules: Computer Fundamentals Employ a good Java development environment Understand how to install and use a good Java development environment. The student will: Install the Java Development Kit on their laptop/computer. Install an IDE on their laptop/computer. Demonstrate developing a simple Java application. Referencing modules: Java Environment, Names and Things, Control, Subroutines, Objects and Classes, Introduction to GUI programming, Arrays and ArrayLists, Recursion Understand course structure Understand the goals, structures, and procedures for learning in ICS 111. The student will: Know the flow of the course. Know how the grades will be calculated. Know where to get information about the course. Referencing modules: Introduction to ICS 111 Carleton (Cam) Moore | Information and Computer Sciences | University of Hawaii, Manoa cmoore@hawaii.edu Powered by the Morea Framework (Theme: cerulean) Last update on: 2016-05-05 09:45:23 -1000 10 modules | 16 outcomes | 77 readings | 80 experiences