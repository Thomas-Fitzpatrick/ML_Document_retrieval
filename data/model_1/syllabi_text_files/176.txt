UCC Book of Modules, 2017/2018: Computer Science Calendar Menu: Undergraduate Postgraduate Book of Modules Marks and Standards Students should note that all of the modules below may not be available to them. Undergraduate students should refer to the relevant section of the UCC Undergraduate Calendar for their programme requirements. Postgraduate students should refer to the relevant section of the UCC Postgraduate Calendar for their programme requirements. Accounting Anatomy Applied Linguistics Applied Mathematics Applied Psychology Archaeology Architecture Arts and Humanities Asian Studies Audiology Biochemistry and Cell Biology Biology Biomedical Sciences Biotechnology Business BÃ©aloideas Celtic Civilisation Centre for Adult Continuing Education Chemical Physics Chemistry Chinese Studies Civil Engineering Clinical Gerontology and Rehabilitation Clinical Science and Practice Clinical Therapies Clinical and Translational Research Commerce Faculty Computer Science Criminology Dental Nursing Dental Surgery Drama and Theatre Studies Earth Science Ecology Economics Education Electrical Engineering Energy Engineering Engineering Science English Environmental Science and Environmental Studies European Studies Film Studies Finance Financial Mathematics Folklore Food Business and Development Food Science Foundations in Medicine French Gaeilge/Irish General Practice Genetics Geography Geology German Government Graduate Entry Medicine Greek Greek and Roman Civilisation Health in the Community History History of Art Interdisciplinary Health Care Irish Studies Italian Language Centre Language and Literature Latin Law Management Information Systems Management Technology Management and Marketing Master Business Administration (MBA) Mathematical Studies Mathematics Mechanical Engineering Medicine Medicine (Special Study Modules) Microbiology Microelectronic Engineering Molecular Biology Music Nursing Nutrition Obstetrics and Gynaecology Occupational Therapy Oral Health and Development Palliative Care Pathology Pharmacology Pharmacy Philosophy Physics Physiology Planning and Sustainable Development Plant Science Policy Studies Politics Portuguese Postgraduate Training Process Engineering Professional Development Public Health Religions and Global Diversity Restorative Dentistry Social Policy Social Work Sociology Spanish Speech and Language Therapy Sports and Exercise Medicine Statistics Surgery Teaching and Learning University Wide Women's Studies World Languages Youth and Community Work Zoology ACXXXX ADXXXX AEXXXX AHXXXX ALXXXX AMXXXX ANXXXX APXXXX ARXXXX ASXXXX ATXXXX AUXXXX BCXXXX BDXXXX BLXXXX BMXXXX BTXXXX BUXXXX CCXXXX CEXXXX CGXXXX CHXXXX CMXXXX COXXXX CPXXXX CRXXXX CSXXXX CTXXXX CYXXXX DHXXXX DNXXXX DRXXXX DSXXXX ECXXXX EDXXXX EEXXXX EHXXXX ENXXXX ERXXXX ESXXXX EVXXXX FCXXXX FEXXXX FIXXXX FLXXXX FMXXXX FNXXXX FRXXXX FSXXXX FTXXXX FXXXXX GAXXXX GEXXXX GGXXXX GKXXXX GLXXXX GMXXXX GNXXXX GPXXXX GRXXXX GVXXXX HAXXXX HCXXXX HIXXXX HSXXXX IPXXXX IRXXXX ISXXXX ITXXXX LCXXXX LLXXXX LTXXXX LWXXXX MAXXXX MBXXXX MDXXXX MEXXXX MFXXXX MGXXXX MHXXXX MLXXXX MSXXXX MTXXXX MUXXXX MXXXXX NEXXXX NTXXXX NUXXXX OGXXXX OHXXXX OTXXXX PAXXXX PDXXXX PEXXXX PFXXXX PGXXXX PHXXXX PLXXXX PMXXXX POXXXX PSXXXX PTXXXX PUXXXX PXXXXX PYXXXX RDXXXX RGXXXX SCXXXX SEXXXX SHXXXX SLXXXX SSXXXX STXXXX SXXXXX SYXXXX TLXXXX UEXXXX UWXXXX WLXXXX WSXXXX ZYXXXX CS1050 Fundamentals of Internet Computing CS1061 Programming in C CS1065 Computer Applications Programming CS1068 Introductory Programming in Python CS1069 Introduction to Internet Technologies CS1070 Introductory Python Programming for Digital Humanities CS1106 Introduction to Relational Databases CS1110 Systems Organisation I CS1111 Systems Organisation II CS1112 Foundations of Computer Science I CS1113 Foundations of Computer Science II CS1115 Web Development 1 CS1116 Web Development 2 CS1117 Introduction to Programming CS1118 Multimedia CS1130 Irish Language for Computer Science I CS1131 Irish Language for Computer Science II CS2051 Introduction to Digital Media CS2052 Introduction to Internet Information Systems CS2501 Database Design and Administration CS2502 Logic Design CS2503 Operating Systems 1 CS2505 Network Computing CS2506 Operating Systems II CS2507 Computer Architecture CS2510 Web Servers CS2511 Usability Engineering CS2512 Authoring CS2513 Intermediate Programming CS2514 Introduction to Java CS2515 Algorithms and Data Structures I CS2516 Algorithms and Data Structures II CS2517 Multimedia 2 CS3031 Interaction Design CS3051 Digital Content Management CS3052 Information Systems Security and Electronic Commerce CS3300 Work Placement CS3301 Work Placement CS3305 Team Software Project CS3306 Workplace Technology and Skills CS3311 Middleware CS3318 Advanced Programming with Java CS3500 Software Engineering CS3505 Web Systems Team Project CS3506 Networks and Data Communications CS3509 Theory of Computation CS3510 Advanced Server-Side Programming CS3511 Web Security CS3513 Client-side Programming CS3514 C-Programming for Microcontrollers CS3605 E-Enterprise Team Project CS4092 Special Topics in Computing I CS4093 Special Topics in Computing II CS4150 Principles of Compilation CS4402 Parallel and Grid Computing CS4403 Introduction to Embedded Systems CS4404 Computer Graphics CS4405 Multimedia Compression and Delivery CS4407 Algorithm Analysis CS4412 Rules-Based Systems CS4413 Future and Emerging Technologies CS4501 Computer Science Project CS4502 Web Systems Project CS4503 Software Enterprise Project CS4506 Advanced Client-side Programming CS4507 Advanced Software Engineering CS4508 Software System Engineering CS4610 Collective Intelligence and the Adaptive Web CS4611 Information Retrieval CS4612 Web Search CS4613 Games Engines CS4614 Introductory Network Security CS4615 Computer Systems Security CS4616 Distributed Algorithms CS4617 Advanced Computer Architecture I CS4618 Artificial Intelligence I CS4619 Artificial Intelligence II CS4620 Functional Programming I CS4621 Functional Programming II CS4622 Advanced Computer Architecture II CS4624 Digital Video Capture and Packaging CS4625 Audio and Sound Engineering CS4626 Constraint Programming and Optimisation CS4801 Programming in Python CS5002 Web Development 1 CS5007 Computer Applications Programming CS5008 Internet Computing CS5009 Multimedia CS5018 Web Development 2 CS5019 Systems Organisation I CS5020 Systems Organisation II CS5021 Introduction to Relational Databases CS5022 Database Design and Administration CS6100 Authoring CS6101 Web Development for Digital Media CS6102 Graphics for Interactive Media CS6103 Audio and Sound Engineering CS6104 Digital Video Capture and Packaging CS6105 Future and Emerging Interaction Technologies CS6110 Animation CS6111 3D Graphics and Modelling CS6112 Image Processing CS6113 Internet-based Applications CS6114 Digital Video Compression and Delivery CS6115 Human Computer Interaction CS6116 Mobile Multimedia CS6117 Audio Processing CS6118 Speech Processing CS6119 Interactive Visualisation CS6120 Intelligent Media Systems CS6200 Dissertation in Interactive Media CS6301 Design of Cyber-Physical Systems CS6311 Mobile Network Protocols CS6312 Mobile Devices and Systems CS6313 Services and Mobile Middleware CS6314 Mobile Applications Design CS6315 Mobile Systems Security CS6316 Cellular Network Services CS6317 Multimedia Technology in Mobile Networks CS6320 Formal Methods for Distributed Systems CS6321 Model-Based Software Development CS6322 Optimisation CS6323 Analysis of Networks and Complex Systems CS6325 Network Security CS6400 Dissertation in Computing Science CS6402 Virtualisation Technologies CS6403 Case Studies in Computing Entrepreneurship CS6405 Datamining CS6406 Large-Scale Application Development and Integration 1 CS6407 Large-Scale Application Development and Integration 2 CS6408 Database Technology CS6409 Information Storage and Retrieval CS6410 Project Development Skills CS6500 Dissertation in Data Analytics CS6501 Programming for Bioscientists I CS6502 Programming for Bioscientists II CS6503 Introduction to Relational Databases CS6504 Digital Video Project CS6505 Database Design and Administration CS6506 Programming in Python CS6507 Programming in Python with Data Science Applications CS6509 Internet Computing for Data Science CS1050 Fundamentals of Internet Computing Credit Weighting: 15 Semester(s): Semesters 1 and 2. No. of Students: Max 150. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 72 x 1hr(s) Lectures; 18 x 1hr(s) Practicals. Module Co-ordinator: Mr Gavin Russell, Department of Computer Science. Lecturer(s): Mr Gavin Russell, Department of Computer Science. Module Objective: To introduce students to Internet computer systems, web design, andclient-side programming. Module Content: This module provides an introduction to the key concepts of Internet computing. Starting with the fundamentals of computer systems and the Internet, students progress to learn how to design web sites and how to utilize simple client-side programming. Issues related to user interface design and human-computer interfacing (HCI) are covered. Broader issues related to the use of the Internet for Blogging and Social Networks are discussed. The practical element of the module allows students to develop skills necessary for web site design using simple client side programming. Learning Outcomes: On successful completion of this module, students should be able to:?Understand the fundamental principles of computer systems and the Internet;?Design web sites;?Use simple client-side programming;?Understand the principles of user interface design and human-computer interfaces. Assessment: Total Marks 300: Formal Written Examination 240 marks; Continuous Assessment 60 marks (Departmental Tests; Assignments). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 3 hr(s) paper(s) to be taken in Summer 2018. Requirements for Supplemental Examination: 1 x 3 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS1061 Programming in C Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Min 5. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; Other (12hrs Practicals/Laboratory Sessions). Module Co-ordinator: Prof John Morrison, Department of Computer Science. Lecturer(s): Prof John Morrison, Department of Computer Science. Module Objective: To teach fundamental techniques of computer programming using the C language. Module Content: Principles of programming: algorithm analysis, design and specification; testing; debugging; verification; optimisation. Fundamentals of C programming: data types; operators; expressions; control structures; console and file i/o. Program structure: functions, recursion, standard libraries. Aggregate data types: arrays; pointers; strings; records. Dynamic data structures: allocation; deallocation; memory management; list structures. Learning Outcomes: On successful completion of this module, students should be able to:?Understand the basic principles of imperative computer programming;?Have an appreciation for the syntax and semantics of the C programming language;?Be able to write and debug programs using all of the key elements of C. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks (Laboratory Assessments 20). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Winter 2017. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS1065 Computer Applications Programming Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Min 5. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 12 x 1hr(s) Practicals. Module Co-ordinator: Dr James G. Doherty, Department of Computer Science. Lecturer(s): Dr James G. Doherty, Department of Computer Science. Module Objective: Provide students with the skills to employ effectively the high-end features of some commonly-used application packages. Module Content: Application features relating to: content-rich document preparation and production; building complex spreadsheet models; linking spreadsheets; using OLE. Learning Outcomes: On successful completion of this module, students should be able to:?Integrate features of Applications for document and presentation production?Build complex spreadsheet models?Use spreadsheet linking and object linking and embedding?Write scripts to automate and integrate multiple tasks. Assessment: Total Marks 100: Formal Written Examination 70 marks; Continuous Assessment 30 marks (6 laboratory assignments, 5 marks each). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Summer 2018. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS1068 Introductory Programming in Python Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Min 20. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 10 x 1hr(s) Practicals. Module Co-ordinator: Dr Kieran Herley, Department of Computer Science. Lecturer(s): Dr Kieran Herley, Department of Computer Science. Module Objective: Introduce the fundamental principles of programming using the Python language. Module Content: Variables, expressions and statements; functions, conditionals and recursion; fruitful functions and iteration; strings and lists; tuples and dictionaries; files and exceptions; classes and objects. Learning Outcomes: On successful completion of this module, students should be able to:?Understand the basic principles of imperative computer programming?Have an appreciation for the syntax and semantics of the Python programming language?Be able to write and debug programs using the key elements of Python. Assessment: Total Marks 100: Formal Written Examination 60 marks; Continuous Assessment 40 marks (8 laboratory assignments, each worth 5 marks). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Winter 2017. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS1069 Introduction to Internet Technologies Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Min 20, Max 150. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 5 x 2hr(s) Practicals. Module Co-ordinator: Mr Adrian O'Riordan, Department of Computer Science. Lecturer(s): Mr Adrian O'Riordan, Department of Computer Science. Module Objective: To provide students with an introduction to computer networking and the Internet. Module Content: Networking basics: history, components, packet switching, performance, architecture. Application layer protocols, including HTTP and peer-to-peer file sharing. Naming, including domain name system. Transport protocols, including TCP. Network security essentials. Learning Outcomes: On successful completion of this module, students should be able to:?Understand the Network Stack?Explain Internet naming and resolution?Understand the goals of network protocols such as TCP/IP?Explain the operation of application protocols such as HTTP and FTP?Use networking services on modern operating systems. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks (5 laboratory assignments, 4 marks each). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Winter 2017. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS1070 Introductory Python Programming for Digital Humanities Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Max 60. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 10 x 1hr(s) Practicals. Module Co-ordinator: Prof Barry O'Sullivan, Department of Computer Science. Lecturer(s): Prof Barry O'Sullivan, Department of Computer Science. Module Objective: Introduce the basics of Python programming for Digital Humanities Module Content: Running Python scripts; Using a programming editor; Basic Python programming for processing strings and text files: variables, expressions, strings and lists, repetition and conditional statements; Numeric data; Functions; Introduction to processing text markup including XML in Python. Learning Outcomes: On successful completion of this module, students should be able to:?Demonstrate an understanding of the basic principles of computer programming;?Write and debug simple programs to search, alter and format strings and text documents;?Have an appreciation for the tasks involved in handling text that has been marked-up in XML. Assessment: Total Marks 100: Formal Written Examination 60 marks; Continuous Assessment 40 marks (5 assignments worth 5 marks each; 1 Departmental Test worth 15 marks). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Summer 2018. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS1106 Introduction to Relational Databases Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Max 200. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 10 x 2hr(s) Practicals. Module Co-ordinator: Dr Kieran Herley, Department of Computer Science. Lecturer(s): Dr Kieran Herley, Department of Computer Science. Module Objective: Students will learn the fundamental practices of relational database systems: designing databases for practical applications, construction of such databases and manipulation of the data using different interfaces. Module Content: Fundamentals of relational databases; the SQL database query language. Learning Outcomes: On successful completion of this module, students should be able to:?Set up, populate and manipulate simple relational databases;?Formulate SQL queries to extract information from databases;?Design simple databases. Assessment: Total Marks 100: Formal Written Examination 70 marks; Continuous Assessment 30 marks (In-class Tests 30 marks). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Winter 2017. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) (which incorporates assessment of both End-of-Year Written Examination and Continuous Assessment) to be taken in Autumn 2018. [Top of page] CS1110 Systems Organisation I Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Max 200. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 10 x 1hr(s) Practicals. Module Co-ordinator: Prof John Morrison, Department of Computer Science. Lecturer(s): Prof John Morrison, Department of Computer Science. Module Objective: Students will attain competence in representing information with numbers. Hardware circuits will be constructed to manipulate these representations and through a series of abstraction levels, this module will show how a simple CPU, under the control of a stored program, can be constructed. Module Content: Number Systems, Using numbers to represent information, Boolean Algebra, Logic Gates and Combinatorial Logic, Hardware Arithmetic, Multiplexing and De-multiplexing, Memory Technologies, Instruction Pathways, CPU organisation. Learning Outcomes: On successful completion of this module, students should be able to:?Convert from one number base to another;?Design and build Combinatorial Logic Circuits;?Use the Rules of Boolean Algebra for Circuit optimization;?Describe the Fetch-Decode-Execute Cycle;?Enumerate the principal components of a CPU and describe their function;?Construct a logical circuit to store information;?Describe how ROM, DRAM and SRAM work. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks. Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Winter 2017. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS1111 Systems Organisation II Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Max 200. Pre-requisite(s): None Co-requisite(s): CS1110 Teaching Method(s): 24 x 1hr(s) Lectures; 10 x 1hr(s) Practicals. Module Co-ordinator: Prof John Morrison, Department of Computer Science. Lecturer(s): Prof John Morrison, Department of Computer Science. Module Objective: Students will attain competence in a number of computing environments, operating systems and software tools; they will obtain an appreciation for computer organisation and hardware-software interaction. Module Content: Instruction sets, address modes, traps, basic machine/assembly programming and language translation. Introduction to operating systems, file systems and devices, protocols, introduction to networking and the Internet. Learning Outcomes: On successful completion of this module, students should be able to:?Describe how the functional components of the PC operate;?Calculate data transfer rates between various functional components;?Theoretically construct a PC by combining appropriate functional components together;?Explore the engineering trade-offs in Computer Architecture;?Describe the Virtual Memory System;?Design and write Assembly Language programs;?Describe the primary functions of an Operating System;?Identify hosts and subnets from IP addresses. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks (Laboratory Assignments). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Summer 2018. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS1112 Foundations of Computer Science I Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Max 200. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 11 x 2hr(s) Tutorials. Module Co-ordinator: Prof Barry O'Sullivan, Department of Computer Science. Lecturer(s): Prof Barry O'Sullivan, Department of Computer Science. Module Objective: Students should develop skills in the foundational techniques needed to analyse, design, implement and communicate computational problems and solutions. Module Content: The scope of computer science and software engineering; practical problems and solutions in computer science; discrete structures for computer science, including sets, functions and propositional logic; formulating, evaluating and manipulating expressions. Learning Outcomes: On successful completion of this module, students should be able to:?Understand some basic tools for analysing computational problems;?Formulate computational problems using representations such as sets, functions and logical specifications;?Derive formal proofs of logical statements. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks (In-Class Tests 20 marks). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Winter 2017. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) (which incorporates assessment of both End of Semester Written Examination and Continuous Assessment) to be taken in Autumn 2018. [Top of page] CS1113 Foundations of Computer Science II Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Max 200. Pre-requisite(s): None Co-requisite(s): CS1112 Teaching Method(s): 24 x 1hr(s) Lectures; 11 x 2hr(s) Tutorials. Module Co-ordinator: Prof Barry O'Sullivan, Department of Computer Science. Lecturer(s): Prof Barry O'Sullivan, Department of Computer Science. Module Objective: Students should develop advanced skills in the foundational techniques needed to analyse, design, implement and communicate computational problems and solutions. Module Content: Predicate logic; representing and solving computational problems with trees and graphs; analysis of simple data structures, algorithms and problem spaces. Learning Outcomes: On successful completion of this module, students should be able to:?Formulate computational problems using predicate logic specifications;?Represent and solve computational problems with trees and graphs;?Analyse simple data structures and algorithms. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks (In-Class Tests 20 marks). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Summer 2018. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) (which incorporates assessment of both End of Semester Written Examination and Continuous Assessment) to be taken in Autumn 2018. [Top of page] CS1115 Web Development 1 Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Min 20, Max 150. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 22 x 1hr(s) Lectures; 10 x 2hr(s) Practicals. Module Co-ordinator: Dr Derek Bridge, Department of Computer Science. Lecturer(s): Dr Derek Bridge, Department of Computer Science. Module Objective: To provide students with an introduction to web site development Module Content: The operation of the web: client, server, HTTP. Web sites: HTML, CSS, media formats. Web site design: usability, accessibility, cross-browser compatibility, etc. Tools: WYSIWYG systems, Content Management Systems, etc. Learning Outcomes: On successful completion of this module, students should be able to:?Explain the operation of the web;?Design and create web pages using HTML and CSS;?Appreciate the role of web development tools. Assessment: Total Marks 100: Formal Written Examination 75 marks; Continuous Assessment 25 marks (Laboratory Assignments). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Winter 2017. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS1116 Web Development 2 Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Min 20, Max 150. Pre-requisite(s): none Co-requisite(s): CS1115, CS1117, CS1106 Teaching Method(s): 24 x 1hr(s) Lectures; 10 x 2hr(s) Practicals. Module Co-ordinator: Dr Derek Bridge, Department of Computer Science. Lecturer(s): Dr Derek Bridge, Department of Computer Science. Module Objective: To provide students with an introduction to web programming Module Content: Introductory server-side programming (using the programming language taught in CS1117). Topics in server-side programming: connecting to databases, cookies, sessions, etc. Introductory client-side programming. Topics in client-side programming: the DOM, event-handling, asynchronous requests, etc. Survey of other technologies. Learning Outcomes: On successful completion of this module, students should be able to:?Explain the role of server-side and client-side technologies;?Write simple server-side programs using the programming language taught in CS1117;?Write simple client-side programs. Assessment: Total Marks 100: Formal Written Examination 75 marks; Continuous Assessment 25 marks (Laboratory Assignments). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Summer 2018. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS1117 Introduction to Programming Credit Weighting: 15 Semester(s): Semesters 1 and 2. No. of Students: Min 20, Max 150. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 69 x 1hr(s) Lectures; 20 x 2hr(s) Practicals. Module Co-ordinator: Dr Aisling O'Driscoll, Department of Computer Science. Lecturer(s): Dr Aisling O'Driscoll, Department of Computer Science. Module Objective: To introduce the fundamentals of computer programming using a modern programming language (currently Python). Module Content: Programming constructs: data and types; variables; expressions; statements; simple I/O; conditionals; iteration; function and method calls; defining functions; scope; modules; strings; sets, lists, tuples and dictionaries; comprehensions; exceptions; file handling. Problem-solving for programming, Learning Outcomes: On successful completion of this module, students should be able to:?Demonstrate an understanding of core programming constructs;?Write computer programs of moderate complexity;?Demonstrate an understanding of some of the principles of good program design. Assessment: Total Marks 300: Formal Written Examination 225 marks; Continuous Assessment 75 marks (Departmental Tests and Laboratory Assignments). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 3 hr(s) paper(s) to be taken in Summer 2018. Requirements for Supplemental Examination: 1 x 3 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS1118 Multimedia Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Min 20, Max 150. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 9 x 1hr(s) Practicals. Module Co-ordinator: Dr Ahmed Zahran, Department of Computer Science. Lecturer(s): Dr Ahmed Zahran, Department of Computer Science. Module Objective: To provide students with a practical introduction to the hardware and software technologies used for the development and delivery of multimedia products. Module Content: Introduction to media types: text, audio, graphic, video, animated images ; audio editing techniques; graphic editing techniques; video editing techniques; use of authoring software package to facilitate media integration and creation of animation effects. Learning Outcomes: On successful completion of this module, students should be able to:?Distinguish between the various types of data and digital media;?Use the skills acquired to compose and manipulate media of various kinds;?Use authoring software. Assessment: Total Marks 100: Formal Written Examination 70 marks; Continuous Assessment 30 marks (5 x Laboratory Assignments (6 marks each)). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Winter 2017. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS1130 Irish Language for Computer Science I Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Min 8, Max 20. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 12 x 2hr(s) Tutorials (Tutorials/Practicals). Module Co-ordinator: Dr Ciaran Dawson, Ionad Na Gaeilge Labhartha. Lecturer(s): Dr Ciaran Dawson, Ionad Na Gaeilge Labhartha. Module Objective: To enhance the ability of students to communicate efficiently through the medium of Irish by consolidating them at B2 in the Common European Framework of Reference for Languages. Module Content: Students will expand their knowledge of day to day conversation in Irish. They will increase their literacy skills in the language and will begin to explore the use of Irish to discuss Computer Science. They will concentrate on some of the more challenging aspects of Irish Grammar and Syntax, with emphasis on the use of the noun and verb phrase. Learning Outcomes: On successful completion of this module, students should be able to:?choose the appropriate forms of nouns and verbs to use across a range of linguistic situations;?classify the various parts of speech in Irish and explain their function within the language;?apply the rules of grammar and syntax to build accurate and relevant discourse in target language;?distinguish between the copula and the substantive verb and decide on the appropriate use of both; and?construct phrases, clauses and sentences in Irish which articulate their own unique world view. Assessment: Total Marks 100: Continuous Assessment 100 marks (In-class Written Test, 50 marks; Oral Exam, 50 marks). Compulsory Elements: An obair a dheanfai i gcaitheamh na bliana. Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: No Formal Written Examination. Requirements for Supplemental Examination: Marks in passed element(s) of Continuous Assessment are carried forward, Failed element(s) of Continuous Assessment must be repeated. [Top of page] CS1131 Irish Language for Computer Science II Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Min 8, Max 20. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 12 x 2hr(s) Tutorials (As part of this module students will have the opportunity to spend a weekend in UCC's centre in Corca Dhuibhne, the Irish speaking region of Kerry where they will meet and interact with Computer Science professionals working through the medium of Irish.). Module Co-ordinator: Dr Ciaran Dawson, Ionad Na Gaeilge Labhartha. Lecturer(s): Dr Ciaran Dawson, Ionad Na Gaeilge Labhartha. Module Objective: To enable the students to function professionally through the medium of Irish by moving them to C1.1/1.2 of the Common European Framework of Reference for Languages with a particular reference to the language of Computer Science. Module Content: Students will deepen their knowledge of day to day conversation in Irish with particular reference to Computer Science. They will refine their literacy skills in the language and will gain experience of professional writing. They will concentrate on some of the more challenging aspects of Irish Grammar and Syntax, with emphasis on the clause. They will explore and be made aware of the synergies that exist between Computer Science and the Irish Language. Learning Outcomes: On successful completion of this module, students should be able to:?select the appropriate forms of verbs and nouns to enable efficient and accurate communication through the medium of Irish;?demonstrate an ability to discuss their field of study through the medium of Irish;?construct sentences containing both primary and subordinate clauses;?distinguish between direct and indirect relative clauses;?give an opinion on the linguistic accuracy and intelligibility of a range of discourses. Assessment: Total Marks 100: Continuous Assessment 100 marks (Weekly Exercises, 50 marks; Oral Exam, 50 marks). Compulsory Elements: Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: No Formal Written Examination. Requirements for Supplemental Examination: Marks in passed element(s) of Continuous Assessment are carried forward, Failed element(s) of Continuous Assessment must be repeated. [Top of page] CS2051 Introduction to Digital Media Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Min 5. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 12 x 1hr(s) Practicals; 24 x 1hr(s) Lectures. Module Co-ordinator: Dr Kieran Herley, Department of Computer Science. Lecturer(s): Staff, Department of Computer Science. Module Objective: To Introduce students to digital media and its applications for Internet computing. Module Content: This module introduces the concept of digital media and related computer technology. Starting with coverage of different media types and devices, and the process of digitization and media file formats, students then progress to learn about topical applications, including MP3s, pod casting, streaming media and Internet TV (IPTV). The practical element of the module allows students to develop skills necessary to augment web sites with digital content including audio, video, images, and animations. Learning Outcomes: On successful completion of this module, students should be able to:?Display awareness of pertinent historical background and the possibilities for future forms and uses of multimedia technology.?Display awareness of the different types of multimedia and the different technical characteristics of each.?Prove cognisance of the commercial issues relating to multimedia, including licensing and copyright.?Display understanding of how to control distribution and access to multimedia. In particular different formats allowing controlled distribution (known as Digital Rights Management).?Exhibit the skills necessary to augment web sites with multimedia content. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks (Laboratory Assignments 20 marks). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Winter 2017. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS2052 Introduction to Internet Information Systems Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Min 5. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 12 x 1hr(s) Practicals. Module Co-ordinator: Dr Steven David Prestwich, Department of Computer Science. Lecturer(s): Dr Steven David Prestwich, Department of Computer Science. Module Objective: To introduce students to Information Systems in the context of Internet Computing. Module Content: This module provides an introduction to the core concepts of Information Systems with an emphasis on the Internet environment. Students gain an appreciation for the fundamental role of Information Systems for Electronic Commerce (e-Commerce) and the use of Information Systems in large organizations. Important applications include Customer Relationship Management (CRM) systems and supply-chain management. Topics covered include Data Models, Relational Databases and Database Design for the Web. The practical element of the module allows students to develop skills necessary to design simple Internet-based Information Systems based on the use of server-side scripting. Learning Outcomes: On successful completion of this module, students should be able to:?Lay out a web page in XHTML?Apply some style specifications to a web page using CSS?Write a short PHP program?Retrieve form data using PHP?Create a small database?Access a database from a web page. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks (Laboratory Assignments 20 marks). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Summer 2018. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS2501 Database Design and Administration Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Max 120. Pre-requisite(s): CS1106 Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 10hr(s) Practicals. Module Co-ordinator: Mr Humphrey Sorensen, Department of Computer Science. Lecturer(s): Mr Humphrey Sorensen, Department of Computer Science. Module Objective: Students will learn: analysis requirements for various types of application for managing persistent data and how to design, implement and administer databases to meet these requirements; the remainder of the SQL concepts and constructs not covered in the prerequisite module. Module Content: Database Management Systems; DBMS storage structures. Relational algebra and relational calculus; SQL; query optimisation; views. Database Design: UML Class Diagrams and Entity-Relationship Diagrams; UML Sequence Diagrams; conceptual, logical and physical database design; data integrity; functional dependencies and normal forms. Learning Outcomes: On successful completion of this module, students should be able to:?demonstrate a working knowledge of relational database theory?demonstrate a detailed knowledge of the SQL language and SQL-based database management systems?demonstrate an understanding of the principles and practices of relational database design and administration. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks (5 x Laboratory Assignments, 4 marks each). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Summer 2018. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS2502 Logic Design Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Max 120. Pre-requisite(s): CS1110, CS1111 Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 10hr(s) Practicals. Module Co-ordinator: Dr Frank Boehme, Department of Computer Science. Lecturer(s): Dr Frank Boehme, Department of Computer Science. Module Objective: Students should learn the ideas that underlie the design of digital circuits. Module Content: Combination circuits: design and optimisation; Sequential circuits: design and optimisation; description languages; CAD. Learning Outcomes: On successful completion of this module, students should be able to:?Perform formula manipulations in Boolean Logic;?Design digital combinational circuits from a target specification down to gate level;?Design optimal combinational circuits (with minimum number of logic gates). If there is only one output line and not more than 4 input lines then this should be achieved without the help of software tools;?Design sequential circuits from a target specification down to state diagram level. Sub-optimal results might be achieved at gate level;?Reverse-engineer small logic circuits which are given on gate level. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks (5 Laboratory Assignments, 4 marks each). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Winter 2017. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS2503 Operating Systems 1 Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Max 120. Pre-requisite(s): CS1110, CS1111 Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 10hr(s) Practicals. Module Co-ordinator: Dr James G. Doherty, Department of Computer Science. Lecturer(s): Dr James G. Doherty, Department of Computer Science. Module Objective: Students will learn about file system management and scripting in modern operating systems, using Unix as a case study. Module Content: Operating Systems from an architectural perspective. The Unix Operating System. Shell scripting. Environment Variables. File protection mechanisms. Learning Outcomes: On successful completion of this module, students should be able to:?Use the Unix OS (Operating System) at the shell level.?Use: Basic file related commands; Input and output redirection; the file protection mechanism; Commonly used Unix utilities; Shell scripting.?Describe: File and memory protection mechanisms. Assessment: Total Marks 100: Formal Written Examination 70 marks; Continuous Assessment 30 marks (2 In-Class Tests, 7.5 marks each; 3 Laboratory Assignments, 5 marks each). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Winter 2017. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS2505 Network Computing Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Max 120. Pre-requisite(s): CS1117 Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 10hr(s) Practicals. Module Co-ordinator: Prof Cormac Sreenan, Department of Computer Science. Lecturer(s): Prof Cormac Sreenan, Department of Computer Science. Module Objective: To introduce students to the fundamentals of internetworking, Internet services and the higher-layer Internet protocols. Module Content: Basics of networking architecture, Application layer protocols, including HTTP. Naming, including domain name system. Transport protocols, including TCP. Network management. Learning Outcomes: On successful completion of this module, students should be able to:?identify the layers and functions of network architectures?explain the operation of key Internet transport and application protocols?compare the functionality and performance of different protocols?implement client/server programs and simple protocols using the Socket interface. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks (5 x laboratory assignments, 4 marks each). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Summer 2018. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS2506 Operating Systems II Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Max 120. Pre-requisite(s): CS2503 Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 10hr(s) Practicals. Module Co-ordinator: Dr Dan Emanoil Grigoras, Department of Computer Science. Lecturer(s): Dr Dan Emanoil Grigoras, Department of Computer Science. Module Objective: Students will learn about process and instruction execution and management in modern operating systems; and they will learn about systems programming. Module Content: Systems programming: Memory management and pointer manipulation; Large-scale application organization. Libraries. Makefiles. Devices, files and IO. Processes and resources. Scheduling. Device organisation and management. Interrupts. User/system state transitions. Interprocess communication and synchronisation. Operating system threads. Operating system APIs Learning Outcomes: On successful completion of this module, students should be able to:?Have a good understanding of system programming techniques, and of OS APIs (Application Programming Interfaces) for file I/O, process creation, and interprocess communication.?Know: Processes, exit statuses, and process control.?Understand: The difference between processes and threads; Critical section; Race conditions; Deadlock and starvation; Mutexes and semaphores; Virtual memory; Interrupts; The process cycle.?Learn to: Implement programs and libraries; Create and maintain make files; Dynamically allocate and free memory; use OS APIs for I/O, process creation, and inter-process communication. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks (5 Laboratory Assignments, 4 marks each). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Summer 2018. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS2507 Computer Architecture Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Max 120. Pre-requisite(s): CS1110, CS1111 Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 10hr(s) Practicals. Module Co-ordinator: Dr Ahmed Zahran, Department of Computer Science. Lecturer(s): Dr Ahmed Zahran, Department of Computer Science. Module Objective: To introduce the student to the taxonomies of Computer Design, the basic concerns of Computer Architecture, provide an overview of the technology trends that drive the industry and how to use this information in the art of Computer Design. Module Content: Instruction Set Design. Case study design of the control unit and datapath of a pipeline RISC processor. Memory Hierarchy Design. Bus architecture and interconnection strategies. Tools and techniques for performance measurement. Comparison of architectures of recent processors. Learning Outcomes: On successful completion of this module, students should be able to:?Appraise an instruction set architecture;?Distinguish between an architecture and its implementation;?Measure the performance of a particular implementation of an architecture;?Critically evaluate a memory hierarchical design using skills and toolsets acquired during the module. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks (5 Laboratory Assignments, 4 marks each). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Summer 2018. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS2510 Web Servers Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Max 120. Pre-requisite(s): CS1115 or CS1050 Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 10hr(s) Practicals. Module Co-ordinator: Mr Humphrey Sorensen, Department of Computer Science. Lecturer(s): Mr Humphrey Sorensen, Department of Computer Science. Module Objective: To teach students about the architecture of servers for the Hyper Text Transfer Protocol (HTTP) and to show them how to install, manage and re-configure HTTP servers. Module Content: Web server installation and configuration. Firewalls. Proxy servers. Access controls and permissions. Application performance monitoring. Analysis and interpretation of performance logs and reports Learning Outcomes: On successful completion of this module, students should be able to:?Describe the architecture of HTTP servers?Install a HTTP server?Manage a HTTP server?Re-configure a HTTP server. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks (In-class Test). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Winter 2017. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. Marks in passed element(s) of Continuous Assessment are carried forward, Failed element(s) of Continuous Assessment must be repeated (as specified by the Module Coordinator). [Top of page] CS2511 Usability Engineering Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Max 120. Pre-requisite(s): CS1116 Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 10hr(s) Practicals. Module Co-ordinator: Dr Ian Pitt, Department of Computer Science. Lecturer(s): Dr Ian Pitt, Department of Computer Science. Module Objective: Students will appreciate the wide range of user-interface devices and style and their effect on the human user. Students will learn how to analyse, design and implement systems with proper regard to the human user. Module Content: Human perception and human memory. User-centred design. Screen design. Dynamic interaction and dialogue design. Help systems. Accessibility. Specification and modelling; software architectures; evaluation methodologies. Learning Outcomes: On successful completion of this module, students should be able to:?Explain the role of human perception and memory in human-computer interaction and be able to apply this knowledge to interface design;?Describe the use of Guidelines, Metrics, Modelling and User-Centered-Design in the development of user interfaces, and be able to select and employ appropriate techniques for specific purposes;?Design and conduct both informal and controlled user-studies, and to analyse and interpret the resulting data. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks (1 x Laboratory Assignment, 10 marks; 1 x In-Class Test 10 marks). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Summer 2018. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward (with the exception of failed non-laboratory elements which must be repeated as specified by the Module Coordinator). [Top of page] CS2512 Authoring Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Min 10. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 12 x 1hr(s) Practicals. Module Co-ordinator: Dr John J. O'Mullane, Department of Computer Science. Lecturer(s): Dr John J. O'Mullane, Department of Computer Science. Module Objective: Develop expertise in multimedia authoring using industry-standard authoring environments. Module Content: Introduction to the principles of authoring for digital media environments using industry-standard authoring tools. Plan, develop, and evaluate digital media interactive applications. Learning Outcomes: On successful completion of this module, students should be able to:?Acquire a comprehensive knowledge of the techniques and industry-standard tools used in interactive media;?Develop understanding of the potential for new technologies and their new creative uses;?Evaluate the effectiveness of these techniques and tools in a variety of situations;?Apply these techniques and tools to produce digital media projects;?Display and communicate the results of, digital media projects. Assessment: Total Marks 100: Formal Written Examination 60 marks; Continuous Assessment 40 marks (Individual and group project work; tests, presentations; reports). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Where work is submitted up to and including 7 days late, 5% of the total marks available shall be deducted from the mark achieved. Where work is submitted up to and including 14 days late, 10% of the total marks available shall be deducted from the mark achieved. Work submitted 15 days late or more shall be assigned a mark of zero. Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Winter 2017. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS2513 Intermediate Programming Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Max 120. Pre-requisite(s): CS1117 Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 12 x 1hr(s) Practicals. Module Co-ordinator: Dr Kieran Herley, Department of Computer Science. Lecturer(s): Staff, Department of Computer Science. Module Objective: To build on the foundation of CS1117, particularly in the areas of object-oriented concepts and library usage, in designing and implementing computer programs of increasing sophistication and complexity Module Content: ? review of classes and objects;? inheritance;? polymorphism;? object-oriented design;? generators;? special methods;? the use of language libraries for tasks such as graphical user interfaces, event-driven programming, operating system interaction, regular expressions. Learning Outcomes: On successful completion of this module, students should be able to:?express the principles of object-oriented design;?explain the use of some prominent language libraries;?show significant improvement in their overall programming skills. Assessment: Total Marks 100: Formal Written Examination 70 marks; Continuous Assessment 30 marks (As prescribed by the Department: Tests and/or Laboratory Assignments). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Winter 2017. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS2514 Introduction to Java Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Max 120. Pre-requisite(s): CS1117 Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 12 x 1hr(s) Practicals. Module Co-ordinator: Dr Marc Van Dongen, Department of Computer Science. Lecturer(s): Dr Marc Van Dongen, Department of Computer Science. Module Objective: To build on the foundation of CS1117, particularly in the areas of object-oriented concepts and library usage, in designing and implementing computer programs of increasing sophistication and complexity Module Content: o Class definitions;o Procedural abstraction and data abstraction;o Associations between objects;o Class hierarchies and inheritance;o Polymorphism and dynamic method binding; Learning Outcomes: On successful completion of this module, students should be able to:?Interpret a set of requirements for a software system;?Construct Java programs in a good object oriented style;?Design medium-sized software in a disciplined manner;?Examine an existing software system for quality criteria;?Employ object oriented abstractions such as encapsulation and inheritance in an appropriate way. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks (Departmental Tests and/or Laboratory Assignments). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Summer 2018. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS2515 Algorithms and Data Structures I Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Max 120. Pre-requisite(s): CS1112, CS1113, CS1117 Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 16 x 1hr(s) Practicals. Module Co-ordinator: Prof Kenneth Brown, Department of Computer Science. Lecturer(s): Prof Kenneth Brown, Department of Computer Science. Module Objective: Students should gain expertise in the use and implementation of simple data structures, and their application in the creation of efficient software. Module Content: Simple data structures (lists, stacks, queues, dictionaries, sets). Applications and problem solving using simple data structures. Array-based and linked implementations of data structures. Recursion. Binary trees and balanced trees. Search and traversal algorithms for trees. Hashing. Learning Outcomes: On successful completion of this module, students should be able to:?Apply data structures and algorithms appropriately in formulating solutions of meaningful computational problems;?Implement computer applications employing simple data structures in a modern programming language;?Implement simple data structures using array-based techniques and linked lists. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks (Departmental Tests and/or Laboratory Assignments). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Winter 2017. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS2516 Algorithms and Data Structures II Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Max 120. Pre-requisite(s): Co-requisite(s): CS2515 Teaching Method(s): 24 x 1hr(s) Lectures; 16 x 1hr(s) Practicals. Module Co-ordinator: Prof Kenneth Brown, Department of Computer Science. Lecturer(s): Prof Kenneth Brown, Department of Computer Science. Module Objective: Students should gain expertise in the use and implementation of fundamental data structures and algorithms, and their application in the creation of efficient software. Module Content: Algorithm analysis techniques. Analysis of simple algorithms and data structures. Simple algorithm design paradigms: divide and conquer. Quadratic and nlogn sorting algorithms. Undirected and directed graphs; graph algorithms: depth-first and breadth-first search, shortest paths, minimum spanning trees. Learning Outcomes: On successful completion of this module, students should be able to:?Apply data structures and algorithms appropriately in formulating solutions of meaningful computational problems;?Implement data structures and algorithms in a modern programming language;?Analyze simple algorithm?Evaluate algorithms on the basis of performance. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks (Departmental tests and/or Laboratory Assignments). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Summer 2018. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS2517 Multimedia 2 Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Min 20, Max 150. Pre-requisite(s): CS1118 Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 9 x 1hr(s) Practicals. Module Co-ordinator: Dr James G. Doherty, Department of Computer Science. Lecturer(s): Dr James G. Doherty, Department of Computer Science. Module Objective: To provide students with a practical introduction to more advanced hardware and software technologies used for the development and delivery of multimedia products. Module Content: Further audio editing techniques; graphic editing techniques; video editing techniques; use of authoring software package to facilitate media integration and creation of animation effects. Learning Outcomes: On successful completion of this module, students should be able to:?Compose and manipulate audio, graphic, and video data;?Use authoring software;?Create advanced interactive multimedia. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks (Laboratory Assignments). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Summer 2018. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS3031 Interaction Design Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Max 150. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 12 x 1hr(s) Practicals. Module Co-ordinator: Prof Cormac Sreenan, Department of Computer Science. Lecturer(s): Staff, Department of Computer Science. Module Objective: To provide students with practical experience in Human-Centred design and evaluation. Module Content: Students will work on the development of a practical solution to a given design problem, undertaking background research, design, development, and usability evaluation. Learning Outcomes: On successful completion of this module, students should be able to:?Review software/product requirements and identify potential usability/accessibility issues;?Design relevant solutions, making appropriate use of guidelines, heuristics, etc.;?Develop prototypes suitable for use in usability testing, using standard toolkits/frameworks where appropriate to achieve interaction/accessibility/universal design goals;?Design and conduct user-studies to test the effectiveness of the prototypes in terms of the stated design goals, and analyse and present the results. Assessment: Total Marks 100: Formal Written Examination 75 marks; Continuous Assessment 25 marks. Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Winter 2017. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS3051 Digital Content Management Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Min 5. Pre-requisite(s): CS2051 Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 12 x 1hr(s) Practicals. Module Co-ordinator: Mr Adrian O'Riordan, Department of Computer Science. Lecturer(s): Mr Adrian O'Riordan, Department of Computer Science. Module Objective: To develop students' understanding of digital content management in the context of Internet computing. Module Content: This module addresses the issue of managing digital content, with an emphasis on multimedia data. Starting with the key topics of content discovery, content indexing and search techniques, students then learn about underlying technologies for large-scale content storage and delivery. Topical applications include peer-to-peer (P2P) music and file sharing, World Wide Web search engines, and streaming servers for Movies-on-Demand and video clips. The practical element of the module allows students to develop skills necessary to use server-side scripting to design scalable websites for content access and that can interface with large numbers of globally-distributed clients. Learning Outcomes: On successful completion of this module, students should be able to:?Understand the issues associated with managing digital content?Appreciate the underlying content storage and delivery technologies?Apply the skills learned to the design of multimedia websites. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks (4 Laboratory Assignments, 5 marks each). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Summer 2018. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS3052 Information Systems Security and Electronic Commerce Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Min 5. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 12 x 1hr(s) Practicals. Module Co-ordinator: Mr Gavin Russell, Department of Computer Science. Lecturer(s): Mr Gavin Russell, Department of Computer Science. Module Objective: To develop students' understanding of advanced topics in Information Systems. Module Content: This module addresses a set of key issues in designing Internet-based Electronic Commerce systems. Starting with technical and business aspects of commissioning and configuring E-Commerce systems, the focus shifts to operational issues including security and risk management. Students learn fundamentals of Internet security theory and practice, including encryption protocols and firewall operation. The practical element of the module allows students to develop skills necessary to use advanced server-side scripting to design the features necessary for Internet-based Information Systems. Learning Outcomes: On successful completion of this module, students should be able to:?Understand the development of e-commerce and its business models?Assimilate the technologies that support electronic commerce?Appreciate the business models and social issues surrounding e-commerce. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks (1 Laboratory Assignment 20 marks). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Winter 2017. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS3300 Work Placement Credit Weighting: 10 Semester(s): Semester 2 and 3. (April-September). No. of Students: Max 120. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): Placements (6 months placement in the workplace). Module Co-ordinator: Lecturer(s): Ms Clodagh Kerr, Department of Careers Service. Module Objective: Students should gain experience of the workplace. Module Content: At the end of the second term, each student will take up a placement outside the Department of Computer Science on an agreed work programme. The placement period will normally be 22 weeks. The work programme will be jointly monitored by a UCC Computer Science staff member and an employee of the placement organisation. Each student will be required to submit a report. Learning Outcomes: On successful completion of this module, students should be able to:?Define different roles and their relationships in an IT department of a company;?Use the internal protocols and technologies of an industrial setting;?Analyse the specifications and define the goals of an industrial project and manage it to success;?Report results;?Work as a member of a team. Assessment: No specific mark will be given. Assessment is based on the Student Report and the Assessment Forms from Supervisor(s). Students who fail to apply for Work Placements or who fail to accept a Placement when offered will fail CS3300. Compulsory Elements: Submission of Student Report. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: Pass/Fail Judgement. Formal Written Examination: No Formal Written Examination. Requirements for Supplemental Examination: No Supplemental Examination. [Top of page] CS3301 Work Placement Credit Weighting: 10 Semester(s): Semesters 1 and 2 and 3. (Between April and April of the following year). No. of Students: Max 120. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): Placements (12 months in workplace). Module Co-ordinator: Prof Gregory Provan, Department of Computer Science. Lecturer(s): Ms Clodagh Kerr, Department of Careers Service. Module Objective: Students should gain experience of the workplace. Module Content: At the end of the second term, each student will take a placement outside the Department of Computer Science on an agreed work programme. The placement period will normally be 12 months. The work programme will be jointly monitored by a UCC Computer Science staff member and an employee of the placement organisation. Learning Outcomes: On successful completion of this module, students should be able to:?Define different roles and their relationships in an IT department of a company;?Use the internal protocols and technologies of an industrial setting;?Analyse the specifications and define the goals of an industrial project and manage it to success;?Report results;?Work as a member of a team. Assessment: No specific mark will be given. Assessment is based on Student Report and the Assessment Forms from Supervisor(s). Students who fail to apply for Work Placements or who fail to accept a Placement when offered will fail CS3301. Compulsory Elements: Submission of Student Report. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: A Pass/Fail judgement. Formal Written Examination: No Formal Written Examination. Requirements for Supplemental Examination: No Supplemental Examination. [Top of page] CS3305 Team Software Project Credit Weighting: 10 Semester(s): Semester 2. No. of Students: Max 200. Pre-requisite(s): CS2513, CS2514 Co-requisite(s): CS3500 Teaching Method(s): 16 x 1hr(s) Lectures; 16 x 1hr(s) Practicals; 16 x 1hr(s) Seminars. Module Co-ordinator: Dr Klaas-Jan Stol, Department of Computer Science. Lecturer(s): Dr Klaas-Jan Stol, Department of Computer Science. Module Objective: Students should learn the value of, and the problems associated with, working in teams, especially in the case of the development of large software systems; They should appreciate the problems associated with developing large software systems, and techniques that can overcome some of these problems. Module Content: Students work together in formal groups to build large software systems. Lectures, seminars and workshops will provide specific project support covering such topics as: working in groups, project management and planing, analysis and design, configuration management, version control, verification and validation, project documentation. Learning Outcomes: On successful completion of this module, students should be able to:?Work effectively with others in a software development team;?Plan and apply project management techniques to scheduling and controlling the software development process;?Identify the difficulties and risks inherent in developing large pieces of software;?Document the software design and development process;?Apply software skills to the implementation of a small software system;?Design and apply a software testing plan;?Deliver technical presentations during the software development cycle;?Apply learned skills and experience more effectively in future project work;?Contribute positively to projects during their Work Placment internship. Assessment: Total Marks 200: Continuous Assessment 200 marks (Breakdown as given out by Department: Project Related Presentations, Progress Documentation Submission, Presentation of Completed Task, Submission of Project Reports). Compulsory Elements: Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: No Formal Written Examination. Requirements for Supplemental Examination: Marks in passed element(s) of Continuous Assessment are carried forward, Failed element(s) of Continuous Assessment must be repeated (as specified by the Module Coordinator). [Top of page] CS3306 Workplace Technology and Skills Credit Weighting: 10 Semester(s): Semester 2. No. of Students: Max 120. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 32 x 1hr(s) Lectures; 16 x 1hr(s) Practicals. Module Co-ordinator: Dr Steven David Prestwich, Department of Computer Science. Lecturer(s): Dr Steven David Prestwich, Department of Computer Science; Mr Adrian O'Riordan, Department of Computer Science. Module Objective: Students should learn workplace skills including commonplace technologies that they might encounter in their Work Placement. Module Content: Module content will vary from year to year, depending on what the Department considers to be useful for contemporary industry. Indicative content is: C; C++; C#; Visual Basic; Windows architecture and programming; essential systems administration techniques; Linux scripting; WordPress; Net-Beans; networking; web services; virtualisation; teamwork; presentation skills. Learning Outcomes: On successful completion of this module, students should be able to:?Work effectively with others in a team environment;?Deliver an oral presentation to a peer-group;?Communicate effectively with others in both oral and written modes;?Effectively use software and programming languages that are commonly usedin industry;?Obtain maximum benefit and enjoyment from their Work Placement intern-ship. Assessment: Total Marks 200: Continuous Assessment 200 marks (Departmental written examination 100 marks; lab assignments - detailed mark breakdown will be given at the beginning of the module). Compulsory Elements: Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: No Formal Written Examination. Requirements for Supplemental Examination: Marks in passed element(s) of Continuous Assessment are carried forward, Failed element(s) of Continuous Assessment must be repeated (as specified by the Module Coordinator). [Top of page] CS3311 Middleware Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Max 120. Pre-requisite(s): CS2503 Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 10 x 1hr(s) Practicals. Module Co-ordinator: Dr Dan Emanoil Grigoras, Department of Computer Science. Lecturer(s): Dr Dan Emanoil Grigoras, Department of Computer Science. Module Objective: Students will learn the role of middleware and different models of middleware; They will learn how to program systems that use the different models of middleware. Module Content: Middleware architecture. Network services and protocols. Distributed message passing. Client-server communication: RPC. Interfaces. Interface Definition Languages. Document-based middleware: the World Wide Web. File system based middleware: transfer model, directory hierarchy, naming transparency, file-sharing semantics. Shared Object-based Middleware: Communication between distributed objects, RMI. Coordination-based Middleware: Events and notifications, Publish/subscribe. Learning Outcomes: On successful completion of this module, students should be able to:?Define the role of middlware and its architecture in terms of services;?Make the distinction between different middleware solutions according to their features and expected performance benefits;?Apply middleware services such as name, trade, discovery, remote execution, etc., to distributed applications when necessary;?Program RMI applications;?Use event/notification (CORBA) service in distributed systems;?Use Java Messaging Service;?Evaluate performances of middleware systems. Assessment: Total Marks 100: Formal Written Examination 70 marks; Continuous Assessment 30 marks (10 x Laboratory Assignments, 3 marks each). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Winter 2017. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS3318 Advanced Programming with Java Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Max 120. Pre-requisite(s): CS2514 Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 10 x 1hr(s) Practicals. Module Co-ordinator: Dr John J. O'Mullane, Department of Computer Science. Lecturer(s): Dr John J. O'Mullane, Department of Computer Science. Module Objective: Students will learn advanced aspects of Java programming and Java project development. Module Content: Java project management, including developing projects (using an IDE), structuring projects (using packages), project documentation (with JavaDoc), testing (with JUnit), version control (with GIT), and deployment.Advanced Java including defensive programming (with exceptions) and event-driven software and graphical user interfaces. Learning Outcomes: On successful completion of this module, students should be able to:?Use tools to develop, test and maintain Java software projects.?Implement event-driven programs, including graphical user interfaces.?Write code that demonstrated an understanding of Java's exception handling model.?Write programs in a defensive programming style. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks (Departmental Tests and/or Laboratory Assignments). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Winter 2017. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS3500 Software Engineering Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Max 120. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 10hr(s) Practicals. Module Co-ordinator: Dr Klaas-Jan Stol, Department of Computer Science. Lecturer(s): Dr Klaas-Jan Stol, Department of Computer Science. Module Objective: Students will learn the elements of software project planning; Students will learn the characteristics of high quality object-orientated designs. Module Content: Project management planning; configuration management; testing techniques. Object-orientated design: cohesion and coupling; programming to an interface; defensive programming; design patterns. Learning Outcomes: On successful completion of this module, students should be able to:?Use project management techniques to facilitate the software development process;?Use the appropriate criteria to select a development model for a particular software application;?Identify the difficulties inherent in developing large pieces of software;?Apply acquired techniques to elicit and model user requirements;?Identify and apply appropriate validation and verification methods for testing during the software development process. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks (5 Laboratory Assignments, 4 marks each). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Winter 2017. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS3505 Web Systems Team Project Credit Weighting: 10 Semester(s): Semester 2. No. of Students: Max 120. Pre-requisite(s): CS2513, CS2514 Co-requisite(s): CS3500 Teaching Method(s): 16 x 1hr(s) Lectures; 16 x 1hr(s) Practicals; 16 x 1hr(s) Seminars. Module Co-ordinator: Dr Klaas-Jan Stol, Department of Computer Science. Lecturer(s): Dr Klaas-Jan Stol, Department of Computer Science. Module Objective: Students should learn the value of, and the problems associated with, working in teams, especially in the case of the development of large software systems for web systems; They should appreciate the problems associated with developing large software systems for web systems, and techniques that can overcome some of these problems. Module Content: Students work together in formal groups to build software systems for web systems. Lectures, seminars and workshops will provide specific project support covering such topics as: working in groups, project management and planning, analysis and design, configuration management, version control, verification and validation, project documentation. Learning Outcomes: On successful completion of this module, students should be able to:?Work effectively with others in a software development team;?Plan and apply project management techniques to scheduling and controlling the software development process;?Identify the difficulties and risks inherent in developing large pieces of software;?Document the software design and development process;?Apply software skills to the implementation of a web software system;?Design and apply a software testing plan;?Deliver technical presentations during the software development cycle;?Apply learned skills and experience more effectively in future project work;	?Contribute positively to projects during their Work Placement internship. Assessment: Total Marks 200: Continuous Assessment 200 marks (Breakdown as given out by Department: Project Related Presentations, Progress Documentation Submission, Presentation of Completed Task, Submission of Project Reports). Compulsory Elements: Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: No Formal Written Examination. Requirements for Supplemental Examination: Marks in passed element(s) of Continuous Assessment are carried forward, Failed element(s) of Continuous Assessment must be repeated (as specified by the Module Coordinator). [Top of page] CS3506 Networks and Data Communications Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Max 120. Pre-requisite(s): CS2505 Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 10hr(s) Practicals. Module Co-ordinator: Prof Cormac Sreenan, Department of Computer Science. Lecturer(s): Prof Cormac Sreenan, Department of Computer Science. Module Objective: Students will learn advanced aspects of network computing. Module Content: Network layer, including router design, Internet addressing and Internet Protocol (IPv4 and IPv6).Intra- and Inter-domain routing. Multicast routing. Link layer, including error detection, medium access control, Ethernet case study with VLANs and switching. Network Security. Learning Outcomes: On successful completion of this module, students should be able to:?Explain the operation of the Internet Protocol?Show how routing algorithms select paths in a network?Compare and contrast IPv4 and IPv6?Identify the functions needed at the link-layer?Analyse IP and Ethernet network traffic on a Local Area Network?Perform network-related system administration tasks. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks (5 Laboratory Assignments, 4 marks each). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Winter 2017. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS3509 Theory of Computation Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Max 120. Pre-requisite(s): CS1112, CS1113 Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 10hr(s) Tutorials. Module Co-ordinator: Prof Michel P Schellekens, Department of Computer Science. Lecturer(s): Prof Michel P Schellekens, Department of Computer Science. Module Objective: Students will learn the principles of algorithm design, algorithm complexity and the theory of computation Module Content: Introduction to computability and its limits. Correctness analysis: Efficiency analysis. NP, P. Learning Outcomes: On successful completion of this module, students should be able to:?Analyse basic algorithms, worst case and average case;?Use basic techniques for good algorithm design, such as divide and conquer and greedy algorithms;?Recognise the difference between a computable and a non computable problem;?Recognise non computable problems such as the halting problem;?Explain the notion of a polynomial time algorithm. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks (In-class Test). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Winter 2017. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward (with the exception of failed non-laboratory elements which must be repeated as specified by the Module Coordinator). [Top of page] CS3510 Advanced Server-Side Programming Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Max 120. Pre-requisite(s): CS2510, CS2514 Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 10hr(s) Practicals. Module Co-ordinator: Dr Frank Boehme, Department of Computer Science. Lecturer(s): Dr Frank Boehme, Department of Computer Science. Module Objective: Students will learn advanced object-oriented programming techniques for server-side programming Module Content: Server-side programming using Java Servlets and Java Server Pages Learning Outcomes: On successful completion of this module, students should be able to:?write robust, extensible, easily maintained, large-scale server-side programmes using Java Servlets and Java Server Pages;?write server-side programmes which make extensive use of the HTTP protocol for achieving elegant, powerful and efficient client-server interaction;?write server-side programmes which make extensive use of XML-based technologies. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks (5 Laboratory Assignments, 4 marks each). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Winter 2017. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS3511 Web Security Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Max 120. Pre-requisite(s): CS2510, CS2514 Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 10hr(s) Practicals. Module Co-ordinator: Dr Paolo Palmieri, Department of Computer Science. Lecturer(s): Dr Paolo Palmieri, Department of Computer Science. Module Objective: Students will learn about the threats that malicious users pose to web systems and how to forestall these dangers. Module Content: Password attacks, injection attacks, denial of service, stack-smashing, scripting attacks, malicious code. One-way Hash functionsand introduction to cryptography. Basics of Secure coding, password/authentication mechanisms, secure connection management. Securing thedatabase backend/web-server, browser security. Web vulnerabilityaudit tools, firewalls. Learning Outcomes: On successful completion of this module, students should be able to:?Test/Audit existing Web applications in order to discover security vulnerabilities?Develop web-applications that avoid basic security vulnerabilities?Configure web-application infrastructure to avoid common securityvulnerabilities. Assessment: Total Marks 100: Formal Written Examination 90 marks; Continuous Assessment 10 marks. Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Winter 2017. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS3513 Client-side Programming Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Max 120. Pre-requisite(s): CS2509, CS2510 Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 10hr(s) Practicals. Module Co-ordinator: Dr Frank Boehme, Department of Computer Science. Lecturer(s): Dr Frank Boehme, Department of Computer Science. Module Objective: Students will learn how to develop dynamic web pages using client-side programming. Module Content: Programming in JavaScript. Style control. Form processing. Dynamic form generation. Reacting to browser-triggered and user-triggered events. Stand-alone client-side application development. Java applets. AJAX-style interaction with server-side utilities. Learning Outcomes: On successful completion of this module, students should be able to:?develop complex stand-alone client-side applications;?write JavaScript programs which react to browser and user events, process forms and control the rendering of HTML pages by controlling the use of Cascading Style Sheets?write Java applets?use AJAX techniques for writing client-side programs which interact with server-side programs. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks (5 Laboratory Assignments, 4 marks each). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Winter 2017. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS3514 C-Programming for Microcontrollers Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Max 120. Pre-requisite(s): CS2502, CS2514 Co-requisite(s): none Teaching Method(s): 24 x 1hr(s) Lectures; 10hr(s) Practicals. Module Co-ordinator: Prof John Morrison, Department of Computer Science. Lecturer(s): Prof John Morrison, Department of Computer Science. Module Objective: To explore the hardware/software interface Module Content: Basics of the C-programming language. Introduction to standard libraries. Compiling to Hex, Flash programmers. Von-Neumann versus Harvard Architecture, Sepcial Functions Registers, Counters/Timers, Interrupt processing, Analog-to-digital conversion, EEPROM Memory, Capture/Compare/Pulse Width Modulation Modules, EUSART, 1-wire protocol. Learning Outcomes: On successful completion of this module, students should be able to:?Describe the internal architecture of modern peripheral interface controllers?Design efficient and maintainable microcontroller programs?Write C programs to control devices, attached to a microcontroller, such as LEDs, LCDs, stepper motors and other actuators?Write C programs to process input data from digital and analog environmental sensors?Write C programs to communicate, using appropriate network protocols, between a peripheral interface controller and a personal computer. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks (Laboratory Assignments). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Winter 2017. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS3605 E-Enterprise Team Project Credit Weighting: 10 Semester(s): Semester 2. No. of Students: Max 120. Pre-requisite(s): CS2513, CS2514 Co-requisite(s): CS3500 Teaching Method(s): 16 x 1hr(s) Lectures; 16 x 1hr(s) Practicals; 16 x 1hr(s) Seminars. Module Co-ordinator: Dr Klaas-Jan Stol, Department of Computer Science. Lecturer(s): Dr Klaas-Jan Stol, Department of Computer Science. Module Objective: Students should learn the value of, and the problems associated with, working in teams, especially in the case of the development of large software systems for e-enterprises; They should appreciate the problems associated with developing large software systems for e-enterprises, and techniques that can overcome some of these problems. Module Content: Students work together in formal groups to build software systems for e-enterprises. Lectures, seminars and workshops will provide specific project support covering such topics as: working in groups, project management and planning, analysis and design, configuration management, version control, verification and validation, project documentation. Learning Outcomes: On successful completion of this module, students should be able to:?Work effectively with others in a software development team;?Plan and apply project management techniques to scheduling and controlling the software development process;?Identify the difficulties and risks inherent in developing large pieces of software;?Document the software design and development process;?Apply software skills to the implementation of a web software system;?Design and apply a software testing plan;?Deliver technical presentations during the software development cycle;?Apply learned skills and experience more effectively in future project work;	?Contribute positively to projects during their Work Placement internship. Assessment: Total Marks 200: Continuous Assessment 200 marks (Breakdown as given out by Department: Project Related Presentations, Progress Documentation Submission, Presentation of Completed Task, Submission of Project Reports). Compulsory Elements: Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: No Formal Written Examination. Requirements for Supplemental Examination: Marks in passed element(s) of Continuous Assessment are carried forward, Failed element(s) of Continuous Assessment must be repeated (as specified by the Module Coordinator). [Top of page] CS4092 Special Topics in Computing I Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Min 5. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 9 x 1hr(s) Practicals. Module Co-ordinator: Dr Kieran Herley, Department of Computer Science. Lecturer(s): Dr Kieran Herley, Department of Computer Science. Module Objective: To provide students with an in-depth knowledge of a selected topic related to any area of computing. Module Content: An advanced topic selected mainly from areas within general computing science. Current members of staff and visitors to the Department of Computer Science will determine choice of topic in a given year. Students should check with the Department of Computer Science to determine what topics will be offered during a specific year and which prerequisites, if any, are appropriate. Learning Outcomes: On successful completion of this module, students should be able to:?Recognise situations where the concepts introduced in the module are relevant;?Compare the expected efficacy of the techniques introduced in the module with that of any alternative techniques, in order to choose the most appropriate approach to the task hand;?If the selected technique is one presented in this module, successfully apply the selected technique. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks (Laboratory Assignments). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Winter 2017. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS4093 Special Topics in Computing II Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Min 5. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures. Module Co-ordinator: Prof Kenneth Brown, Department of Computer Science. Lecturer(s): Prof Kenneth Brown, Department of Computer Science. Module Objective: To provide students with an in-depth knowledge of a selected topic related to any area of computing. Module Content: An advanced topic selected mainly from areas within general computing science. Current members of staff and visitors to the Department of Computer Science will determine choice of topic in a given year. Students should check with the Department of Computer Science to determine what topics will be offered during a specific year and which prerequisites, if any, are appropriate. Learning Outcomes: On successful completion of this module, students should be able to:?Recognise situations where the concepts introduced in the module are relevant;?Compare the expected efficacy of the techniques introduced in the module with that of any alternative techniques, in order to choose the most appropriate approach to the task hand;?If the selected technique is one presented in this module, successfully apply the selected technique. Assessment: Total Marks 100: Formal Written Examination 90 marks; Continuous Assessment 10 marks (2 x Laboratory Assignments, 5 marks each). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Summer 2018. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS4150 Principles of Compilation Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Min 5. Pre-requisite(s): CS2514, CS2515, CS2516 Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 10hr(s) Practicals. Module Co-ordinator: Dr Kieran Herley, Department of Computer Science. Lecturer(s): Dr Kieran Herley, Department of Computer Science. Module Objective: To develop an understanding of the Principles of Compilation. Module Content: Lexical analysis. Syntax analysis. Symbol tables. Run-time storage management. Code generation. Compiler generation tools. Learning Outcomes: On successful completion of this module, students should be able to:?Build the initial phases of a basic compiler for a simple (imperative) programming language, either by using standard compiler generation tools or programming entirely using a standard language;?Transfer such skills as lexical, syntax and basic semantic analysis to software development in general;?Program more effectively with a better understanding of language design, translation and execution processes. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks (Laboratory Assignments). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Winter 2017. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS4402 Parallel and Grid Computing Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Pre-requisite(s): CS2503 Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 24 x 1hr(s) Tutorials. Module Co-ordinator: Dr Marius-Sabin Tabirca, Department of Computer Science. Lecturer(s): Dr Marius-Sabin Tabirca, Department of Computer Science. Module Objective: To introduce algorithmic, architectural and systems aspects of parallel and grid computing. Module Content: Paradigms, models, algorithms, languages, tools, architectures and applications. Learning Outcomes: On successful completion of this module, students should be able to:?acquire a comprehensive knowledge of the techniques and industry-standard tools used in Parallel and Grid processing?determine the correct use of these techniques and tools through a comprehensive understanding of the underlying theoretical and programming principles?design and analyse good Parallel and Grid algorithms based on more advanced techniques?analyse the potential for parallel implementation of solutions to real life problems?implement basic algorithms suited to a combination of problem, hardware platform and programming technology. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks. Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Winter 2017. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS4403 Introduction to Embedded Systems Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Pre-requisite(s): CS2502 Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 10hr(s) Other (Laboratory/Tutorial sessions). Module Co-ordinator: Dr Kieran Herley, Department of Computer Science. Lecturer(s): Prof John Morrison, Department of Computer Science. Module Objective: To introduce the principles and practices of embedded systems. Module Content: Embedded processors. Interfacing memory and I/O for embedded systems. Memory, power and performance tradeoffs. Modeling behaviour. Software for embedded systems. Learning Outcomes: On successful completion of this module, students should be able to:?Define the major characteristics of an embedded system;?Distinguish between processor architecture and interfacing a processor to the outside world;?Analyse various input/output systems useful for embedded systems;?Describe the interaction between hardware and software for embedded systems. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks. Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Summer 2018. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS4404 Computer Graphics Credit Weighting: 5 Semester(s): Semesters 1 or 2. No. of Students: Min 5. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures. Module Co-ordinator: Lecturer(s): Staff, Department of Computer Science. Module Objective: Students should obtain a strong theoretical and practical foundation in 2-D and 3-D interactive computer graphics. Module Content: 2-D computer graphics: line and circle drawing; area filling; fonts and text display; single and double buffering; simple animations; morphing; colour; interaction using keyboard, mouse and menus. 3-D computer graphics: geometric transformations and matrices; projection modes; light; simple virtual reality. Learning Outcomes: On successful completion of this module, students should be able to:?write programs to create graphical images, using a graphics library such as OpenGL, called from a programming language such as C?implement algorithms for the efficient construction of 2-D geometric primitives such as lines and circles?create simple animations and achieve smoothness using the technique of double-buffering?implement 2-D morphing algorithms?write interactive graphics programs, using keyboard, mouse, and menus for interaction?use transformation matrices to perform translation, rotation, and scaling of 3-D images?view 3-D images using both parallel and perspective projections?control the lighting of 3-D images?implement simple 3-D interactive virtual-reality scenes. Assessment: Total Marks 100: Formal Written Examination 70 marks; Continuous Assessment 30 marks (3 x Laboratory Assignments, 6 marks each; 1 x Laboratory Assignment, 12 marks). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Summer 2018. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS4405 Multimedia Compression and Delivery Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Min 5. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 9 x 1hr(s) Practicals. Module Co-ordinator: Dr John J. O'Mullane, Department of Computer Science. Lecturer(s): Dr John J. O'Mullane, Department of Computer Science. Module Objective: Students should gain a comprehensive understanding of algorithms and technologies pertaining to multimedia compression and delivery. Module Content: Introduction to multimedia compression: fundamentals, lossless compression, lossy compression. Image compression; video compression; audio compression. Multimedia communication and delivery. Learning Outcomes: On successful completion of this module, students should be able to:?Perform linear algebra calculations which have applications in color space transformations, such as RGB to YUV conversion. This should be achieved without the help of external (software) tools;?Perform basic signal transformations using simple systems of orthogonal functions. This should be achieved without the help of external (software) tools;?Write algorithms for lossless media compression without re-using or linking against libraries which provide these algorithms;?Write algorithms for lossy compression by re-using or linking against libraries which provide these algorithms;?Extend certain general software frameworks (packages) that provide functionality for the delivery of streaming media into small but complete user space applications. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks (Laboratory Assignments). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Summer 2018. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS4407 Algorithm Analysis Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Min 5. Pre-requisite(s): CS2515, CS2516 Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 12hr(s) Practicals. Module Co-ordinator: Prof Gregory Provan, Department of Computer Science. Lecturer(s): Prof Gregory Provan, Department of Computer Science. Module Objective: Students should learn the techniques of advanced algorithm analysis.The objective is to introduce some main techniques for the analysis of algorithms as well as to motivate to the relevance of such techniques for the theory and practice of Computer Science. Module Content: Advanced techniques of Algorithmic analysis, including the formal derivation of complexity lower bounds for comparison based algorithms, demonstrations that algorithms are optimal with respect to such bounds, solution of recurrence equations, deriving recurrence equations from pseudo-code to specify an algorithm's complexity. Advanced techniques for algorithmic analysis including amortized analysis, randomized algorithms, parallel algorithms and some advanced practical application, such as for instance page ranking algorithms for internet searching. Learning Outcomes: On successful completion of this module, students should be able to:?have the capacity to formulate an algorithm's complexity formally via recurrence equations?know and apply the main techniques to solve recurrence equations?apply some of the main algorithmic analysis techniques to gain information on an algorithms complexity (those sketched in the Module Content)?better understand the usefulness of designing good algorithms to practice, illustrated by applications of algorithms used by industry (such as e.g. the page ranking algorithm). Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks (Laboratory Assignments). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Summer 2018. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS4412 Rules-Based Systems Credit Weighting: 5 Semester(s): Semesters 1 or 2. No. of Students: Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 10hr(s) Other (Laboratory/Tutorial sessions). Module Co-ordinator: Lecturer(s): Staff, Department of Computer Science. Module Objective: To provide a practical introduction to rules-based systems for business modelling and optimisation Module Content: Development and application of tools and techniques from Computer Science for business modelling. Use of high-level business-oriented programming languages for real-world problem-solving. Business Rules: Methodology, business/technical perspectives, use case descriptions, creating initial rules tables, emulating different business scenarios, running rules, adding a web interface. Business Process Management: design, modelling, execution, monitoring and case management. Business Optimisation: methodology, integration with Business Rules and Business Process Management. Learning Outcomes: On successful completion of this module, students should be able to:?Explain the fundamental techniques underlying Business rules. Business Process Management and Business Optimisation?Identify when and where these techniques be applied to specific business problems?Demonstrate proficiency in problem analysis, model building and writing software using rules-systems?Design medium-sized web-based appliations in a disciplined manner using a structured rules-based methodology?Assess an existing rules-based software system for compliance with quality criteria. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks. Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Summer 2018. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS4413 Future and Emerging Technologies Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Min 5. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 12 x 1hr(s) Practicals. Module Co-ordinator: Mr David Murphy, Department of Computer Science. Lecturer(s): Mr David Murphy, Department of Computer Science. Module Objective: Develop an understanding of the potential for new interaction technologies and their creative uses. Module Content: Design of Interaction Environments, Immersion in Virtual and Augmented Realities, Three Dimensional Geometry and Interactive Computer Graphics. Learning Outcomes: On successful completion of this module, students should be able to:?Acquire a comprehensive knowledge of the techniques and industry-standard tools used in the Digital Media Industry.?Determine the correct use of these techniques and tools through a comprehensive understanding of the underlying theoretical and programming principles.?Develop understanding of the potential for new technologies and their new creative uses.?Evaluate the effectiveness of these techniques and tools in a variety of situations.?Apply these techniques and tools to produce digital media projects.?Design, plan and communicate the results of digital media projects. Assessment: Total Marks 100: Formal Written Examination 60 marks; Continuous Assessment 40 marks (Individual and group project work; tests; presentations; reports). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Where work is submitted up to and including 7 days late, 5% of the total marks available shall be deducted from the mark achieved. Where work is submitted up to and including 14 days late, 10% of the total marks available shall be deducted from the mark achieved. Work submitted 15 days late or more shall be assigned a mark of zero. Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Summer 2018. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS4501 Computer Science Project Credit Weighting: 15 Semester(s): Semesters 1 and 2. No. of Students: Max 120. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 5 x 1month(s) Directed Study (Independent supervised project work). Module Co-ordinator: Dr Kieran Herley, Department of Computer Science. Lecturer(s): Dr Kieran Herley, Department of Computer Science. Module Objective: Students should develop the skills of independent investigation on an extended engineering or scientific project under suprvision. Module Content: The Department publishes specifications for a large number of projects which members of staff are willing to supervise. Choice, however, is not confined to these published specifications. Students may produce self-defined specifications. These students are responsible for finding a member of Computer Science staff who is willing to superise the project. Projects should have the scope for students to exercise analysis, design, implementation and evaluation skills. Learning Outcomes: On successful completion of this module, students should be able to:?conduct a reasonably thorough investigation into a topic of interest, importance or relevance to computer science or its applications?where appropriate, accomplish an acceptable implementation to fulfill the main goals of the project?work largely independently, within agreed project requirements, with minimal supervision. Assessment: Total Marks 300: Continuous Assessment 300 marks (Dissertation). Compulsory Elements: Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Where work is submitted up to and including 7 days late, 10% of the total marks available shall be deducted from the mark achieved. Where work is submitted up to and including 14 days late, 20% of the total marks available shall be deducted from the mark achieved. Work submitted 15 days late or more shall be assigned a mark of zero. Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: No Formal Written Examination. Requirements for Supplemental Examination: No Supplemental Examination. [Top of page] CS4502 Web Systems Project Credit Weighting: 15 Semester(s): Semesters 1 and 2. No. of Students: Max 120. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 5 x 1month(s) Directed Study (Independent supervised project work). Module Co-ordinator: Dr Kieran Herley, Department of Computer Science. Lecturer(s): Dr Kieran Herley, Department of Computer Science. Module Objective: Under supervision, students should acquire the skills, motivation and self-confidence to develop large web systems and to write well-structured reports about their work. Module Content: The Department publishes specifications for a large number of web projects which members of staff are willing to supervise. Choice, however, is not confined to these published specifications. Students may produce self-defined specifications. These students are responsible for finding a member of Computer Science staff who is willing to supervise the project. Projects should have the scope for students to exercise analysis, design, implementation and evaluation skills. Learning Outcomes: On successful completion of this module, students should be able to:?Analyse web applications?Design, implement and evaluate web systems?Write a well-structured technical report?Work largely independently, within agreed project requiprements, with minimal supervision. Assessment: Total Marks 300: Continuous Assessment 300 marks (Dissertation). Compulsory Elements: Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Where work is submitted up to and including 7 days late, 10% of the total marks available shall be deducted from the mark achieved. Where work is submitted up to and including 14 days late, 20% of the total marks available shall be deducted from the mark achieved. Work submitted 15 days late or more shall be assigned a mark of zero. Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: No Formal Written Examination. Requirements for Supplemental Examination: No Supplemental Examination. [Top of page] CS4503 Software Enterprise Project Credit Weighting: 15 Semester(s): Semesters 1 and 2. No. of Students: Max 120. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 5 x 1month(s) Directed Study (Independent supervised project work). Module Co-ordinator: Dr Kieran Herley, Department of Computer Science. Lecturer(s): Dr Kieran Herley, Department of Computer Science. Module Objective: Under supervision provided jointly by staff from the departments of Computer Science and Economics, students should acquire the skills, motivation and self-confidence to develop software enterprise proposals Module Content: The Departments of Computer Science and Economics publish specifications for a number of software enterprise projects which members of staff are willing to supervise. Choice, however, is not confined to these published specifications. Students may produce self-defined specifications. These students are responsible for finding members of staff from Computer Science and Economics who are willing to supervise the project. Projects should have the scope for students to exercise analysis, design, implementation and evaluation skills. Learning Outcomes: On successful completion of this module, students should be able to:?Analyse software enterprise opportunities?Design a business plan, well-founded both technologically and from an enterprise economics perspective, for a software enterprise?Write a well-structured proposal document for a new software enterprise?Work largely independently, within agreed project requiprements, with minimal supervision. Assessment: Total Marks 300: Continuous Assessment 300 marks (Dissertation). Compulsory Elements: Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Where work is submitted up to and including 7 days late, 10% of the total marks available shall be deducted from the mark achieved. Where work is submitted up to and including 14 days late, 20% of the total marks available shall be deducted from the mark achieved. Work submitted 15 days late or more shall be assigned a mark of zero. Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: No Formal Written Examination. Requirements for Supplemental Examination: No Supplemental Examination. [Top of page] CS4506 Advanced Client-side Programming Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Pre-requisite(s): CS3513 Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures (1); 10 x 1hr(s) Practicals. Module Co-ordinator: Lecturer(s): Staff, Department of Computer Science. Module Objective: Students will learn how to write advanced client-side programs which: interact with the XML Document Object Model, in particular its JavaScript binding; use JSON object notation; use Regular Expressions. Module Content: XML Document Object Model and the JavaScript binding to it. Regular Expressions. Learning Outcomes: On successful completion of this module, students should be able to:?Know the W3C Document Object Model (DOM) for XML?Write client-side programs which interact with the DOM for their host pages?Use regular expressions for analyzing document content. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks (2 x in-class tests, 10 marks each). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Summer 2018. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. Marks in passed element(s) of Continuous Assessment are carried forward, Failed element(s) of Continuous Assessment must be repeated (as specified by the Module Coordinator). [Top of page] CS4507 Advanced Software Engineering Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Min 5, Max 100. Pre-requisite(s): CS3500 Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 10hr(s) Other (Laboratory/Tutorial sessions). Module Co-ordinator: Mr Adrian O'Riordan, Department of Computer Science. Lecturer(s): Mr Adrian O'Riordan, Department of Computer Science. Module Objective: To provide students with the theoretical concepts of software engineering and their application in techniques and tools for software development. Module Content: General software development process models. Software requirements engineering. Software design patterns. Software verification and validation. Software metrics and quality assurance. Computer aided software engineering. Use of a standard modelling language. Software development following a model-driven process. Formal requirements specification and formal correctness of software. Learning Outcomes: On successful completion of this module, students should be able to:?Participate in all development activities of a software engineering project;?Evaluate the management of a software project;?Use a modelling language, such as the Universal Modelling language (UML);?Follow a model driven software development process;?Use important software design patterns;?Develop working software using a commercial software modelling tool. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks. Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Winter 2017. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS4508 Software System Engineering Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Min 5, Max 100. Pre-requisite(s): CS3500 Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 10hr(s) Other (Laboratory/Tutorial sessions). Module Co-ordinator: Dr John Herbert, Department of Computer Science. Lecturer(s): Dr John Herbert, Department of Computer Science. Module Objective: Provide students with the theoretical concepts and skills to analyse and engineer software at the system level. Module Content: Software architecture models. Distributed system architectures. Analysis of the non-functional properties of software systems. Global distributed system design issues. Cloud computing architecture. Software frameworks for distributed processing of large data sets. Real-time software system development. Learning Outcomes: On successful completion of this module, students should be able to:?Evaluate and use different software system architectures;?Analyse and evaluate non-functional properties of software systems;?Develop and deploy a service-oriented system;?Deploy a software system on a cloud computing platform;?Use a software framework for distributed processing of a large data set;?Participate in design and development of a real-time software system. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks. Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Summer 2018. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS4610 Collective Intelligence and the Adaptive Web Credit Weighting: 5 Semester(s): Semesters 1 or 2. No. of Students: Min 5. Pre-requisite(s): CS1116 Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 10hr(s) Practicals. Module Co-ordinator: Lecturer(s): Staff, Department of Computer Science. Module Objective: The module aims to introduce students to collective intelligence and adaptive web-based systems. The module will cover personalization and contextualization technologies and their application in web-based systems for e-commerce, entertainment, e-learning, browsing and search. Module Content: Information overload. User models: techniques; privacy. Collaborative-filtering. Content-based filtering. Hybrid systems. Semantic Web: ontology, RDF, OWL. Social Web: social networks; tagging; folksonomy. Case studies: e-commerce; entertainment; e-learning; browsing; search. Learning Outcomes: On successful completion of this module, students should be able to:?Recognise situations where adaptiv3 systems can be used;?Compare the efficacy of the personalization and contextualization techniques introduced in the module;?Explain and apply the techniques;?Choose the most appropriate approach for a given task. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks (Laboratory Assignments). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Summer 2018. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS4611 Information Retrieval Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Min 5. Pre-requisite(s): CS2515, CS2516 Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 10hr(s) Practicals. Module Co-ordinator: Prof Michel P Schellekens, Department of Computer Science. Lecturer(s): Prof Michel P Schellekens, Department of Computer Science. Module Objective: To examine fundamental concepts of indexing, information retrieval, and categorisation. Module Content: Information retrieval (IR) basics, term vocabulary and postings list, dictionaries and tolerant retrieval, index construction, compression, term statistics, scoring, term weighting and the vectorspace model, computing scores in a complete search system, evaluation in information retrieval, information extraction. Indexing strategies, efficiency, boolean retrieval, probabilistic models, vector space ranking and page ranking, error correction algorithms (including levensthein distance), link analysis. Selected additional topics. Learning Outcomes: On successful completion of this module, students should be able to:?Use and adapt/discuss various basic information retrieval concepts, included, but not limited to, term vocabulary and postings list, dictionaries and tolerant retrieval, index construction.?Explain, use and critically analyze various evaluation measures?Carry out compression and decompression, understand and explain gains involved?Apply term statistics laws?Exhibit knowledge and execution of the various algorithms, explain basic notions and advanced concepts introduced?Apply vector space ranking and page ranking, including link analysis method. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks (in-class test). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Winter 2017. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS4612 Web Search Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Min 5. Pre-requisite(s): CS2515, CS2516 Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 10hr(s) Practicals. Module Co-ordinator: Lecturer(s): Staff, Department of Computer Science. Module Objective: To examine the major concepts in Web search and related technologies such as Web syndication, and to learn how to manage and configure a search engine. Module Content: XML retrieval. Web metadata: Web search basics, paid placement, search engine optimization (SEO). Web crawling and index creation; Collaborative search and link analysis (PageRank); Shopping and recommender agents; Web syndication and aggregation (RSS); Social search. Web archiving. Searching different media - image, audio. Open source search engines (Lucene/Nutch) Learning Outcomes: On successful completion of this module, students should be able to:?Identify basic issues in Web search;?Determine the correct use of standards-based technologies;?Configure and use free open-source Web crawling and search software;?Develop a Web search-based application. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks (Laboratory Assignments). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Summer 2018. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS4613 Games Engines Credit Weighting: 5 Semester(s): Semesters 1 or 2. No. of Students: Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 10hr(s) Other (Laboratory/Tutorial sessions). Module Co-ordinator: Lecturer(s): Staff, Department of Computer Science. Module Objective: Students are introduced to the fundamentals of game development using games engines. Students should learn about designing and developing game strategies and the techniques necessary to utilise the engine to create a game application. Module Content: Analysis and design of game engine technologies. Game Design. Mathematics for games development. Media assets and game concepts. Editing Systems. Scripting Languages. Learning Outcomes: On successful completion of this module, students should be able to:?Identify the technologies used in games engines;?Recognise basic Human Computer Interaction issues in games;?Explain the basic game development processes including designing games; strategies/rules and story-boarding;?Produce a game using a games engine. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks. Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Summer 2018. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS4614 Introductory Network Security Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Min 5. Pre-requisite(s): CS2513, CS2514 Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 10hr(s) Practicals. Module Co-ordinator: Dr Paolo Palmieri, Department of Computer Science. Lecturer(s): Dr Paolo Palmieri, Department of Computer Science. Module Objective: To introduce some of the important concepts in network security and how they are applied in practice Module Content: Introduction to Ciphers. Symmetric key cryptography. Authentication, Secrecy and Integrity. Cryptographic Hash functions and their application. Implementation issues and Cryptographic APIs. Identification Techniques. Authentication and Key Exchange Protocols and their implementation. Design analysis and attacks on security protocols. Public Key Certificates and infrastructure. Digital Signatures. Public Key Infrastructures. Learning Outcomes: On successful completion of this module, students should be able to:?Apply cryptography in the develoopment of basic secure networked systems;?Analyze and design elementary cryptographic authentication protocols;?Compromise network systems by exploiting common vulnerabilities;?Use cryptographic APIs to provide confidentiality, integrity and authentication across networked application systems. Assessment: Total Marks 100: Formal Written Examination 90 marks; Continuous Assessment 10 marks (Laboratory Assignments). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Winter 2017. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS4615 Computer Systems Security Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Min 5. Pre-requisite(s): CS2513, CS2514 Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 10hr(s) Practicals. Module Co-ordinator: Dr Paolo Palmieri, Department of Computer Science. Lecturer(s): Dr Paolo Palmieri, Department of Computer Science. Module Objective: To introduce some of the important concepts in system security and how they are applied in practice Module Content: Access control models. Mandatory access control models and mechanisms. Operating system security, including Unix and Java2. Network Access Controls. Code-level vulnerabilities. Malicious software. Security risk management and audit Learning Outcomes: On successful completion of this module, students should be able to:?Distinguish between different types of security policy model?Compromise existing systems by exploiting common vulnerabilities?Develop applications that avoid basic security vulnerabilities?Use the Java security acrchitecture to provide support for secure application systems?Conduct a security assessment of a system. Assessment: Total Marks 100: Formal Written Examination 90 marks; Continuous Assessment 10 marks (Laboratory Assignments). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Summer 2018. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS4616 Distributed Algorithms Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Min 5. Pre-requisite(s): CS2515, CS2516 Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 10hr(s) Practicals. Module Co-ordinator: Prof Michel P Schellekens, Department of Computer Science. Lecturer(s): Prof Michel P Schellekens, Department of Computer Science. Module Objective: Students will gain an understanding of the fundamental principles of distributed algorithms, their design and implementation. Module Content: An overview of distributed algorithms will be presented, covering various sequential algorithms and their counter parts in a distributed context, as well as sorting networks. The course will proceed to cover main principles of distributed algorithms, focusing mainly on the synchronous case (lock-step computation), though asynchronous concepts may be broached. Selected topics. Learning Outcomes: On successful completion of this module, students should be able to:?Identify key challenges for distributed algorithm design and implementation;?clearly explain the differences between a distributed approach and a sequential one.?Present pseudo-code for the various algorithms presented in the course, design new code for variations of such algorithms.?Fine-tune algorithms to include changes or extensions of code, or design novel distributed algorithms according to specifications for a problem to be executed in a distributed context.?Verify properties of algorithms (including but not limited to correctness, complexity etc).?Explain the fundamental principles of distributed algorithms design.?Carry out basic performance analysis regarding time and communication complexity to address congestion and other issues.?Explain and apply the principles of reaching concensus. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks (in-class test). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Winter 2017. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS4617 Advanced Computer Architecture I Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Pre-requisite(s): CS2507 Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 10hr(s) Other (Laboratory/Tutorial sessions). Module Co-ordinator: Dr Kieran Herley, Department of Computer Science. Lecturer(s): Staff, Department of Computer Science. Module Objective: To learn the principles of Computer Architecture and Design Module Content: Instruction Set Design. Case study design of the control unit and datapath of a pipeline RISC processor. Memory Hierarchy Design. Bus architecture and interconnection strategies. Tools and techniques for performance measurement. Comparison of architectures of recent processors Learning Outcomes: On successful completion of this module, students should be able to:?Appraise an instruction set architecture;?Distinguish between an architecture and its implementation?Measure the performance of a particular implementation of a architecture;?Critically evaluate a memory hierarchical design using skills and toolsets acquired during the module. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks. Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Winter 2017. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS4618 Artificial Intelligence I Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Min 5. Pre-requisite(s): CS2515, CS2516 Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 9 x 2hr(s) Practicals. Module Co-ordinator: Dr Derek Bridge, Department of Computer Science. Lecturer(s): Dr Derek Bridge, Department of Computer Science. Module Objective: Students will explore the state of the art in Artificial Intelligence (AI) Module Content: Topics will be selected from the following and others: AI search; natural language processing; evolutionary computation; knowledge representation and reasoning; AI planning; data analytics and machine learning; probabilistic reasoning; case-based reasoning; diagnostic systems; recommender systems. Learning Outcomes: On successful completion of this module, students should be able to:?Characterize modern AI theory and applications, including a sense of the successes and failures.?Apply advanced AI techniques to selected problems.?Assess if a problem is amenable for solution by specific AI techniques. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks (Laboratory assignments/tests). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Winter 2017. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS4619 Artificial Intelligence II Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Min 5. Pre-requisite(s): None Co-requisite(s): CS4618 Teaching Method(s): 24 x 1hr(s) Lectures; 9 x 2hr(s) Practicals. Module Co-ordinator: Dr Derek Bridge, Department of Computer Science. Lecturer(s): Dr Derek Bridge, Department of Computer Science. Module Objective: Students will continue to explore the state of the art in Artificial Intelligence (AI) Module Content: Topics will be selected from the following and others: AI search; natural language processing; evolutionary computation; knowledge representation and reasoning; AI planning; data analytics and machine learning; probabilistic reasoning; case-based reasoning; diagnostic systems; recommender systems. Learning Outcomes: On successful completion of this module, students should be able to:?Discuss typical application scenarios and outline limitations;?Identify which AI technique is appropriate for solving a specific problem;?Apply and adapt the AI techniques covered in the lecture to concrete problems. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks (Laboratory Assignments/tests). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Summer 2018. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS4620 Functional Programming I Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Min 5. Pre-requisite(s): CS2513 Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures. Module Co-ordinator: Dr Marc Van Dongen, Department of Computer Science. Lecturer(s): Dr Marc Van Dongen, Department of Computer Science. Module Objective: To present a practical introduction to computer programming in a pure functional style. Module Content: Expression based computing. Simple functions, recursion, lambda expressions, higher-order functions, currying. Lists and list comprehensions. Types and type classes. Algebraic types. Eager and lazy evaluation. Infinite data structures. Stream-based interactive I/O. Attention throughout to problem-solving, program design and testing skills. Learning Outcomes: On successful completion of this module, students should be able to:?Read and be able to explain computer programs written in a pure functional style;?Design and implement functional solutions to problems of modest complexity;?Contrast the functional and the imperative styles of programming;?Program, in any language, at a significantly higher skill level. Assessment: Total Marks 100: Formal Written Examination 70 marks; Continuous Assessment 30 marks (6 x Laboratory Assignments, 5 marks each). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Winter 2017. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS4621 Functional Programming II Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Min 5. Pre-requisite(s): CS2515, CS2516 Co-requisite(s): CS4620 Teaching Method(s): 24 x 1hr(s) Lectures. Module Co-ordinator: Dr Marc Van Dongen, Department of Computer Science. Lecturer(s): Dr Marc Van Dongen, Department of Computer Science. Module Objective: To explore and apply more advanced concepts in functional programming. Module Content: Functional implementations of common data structures (stacks, queues, trees, graphs) and related algorithms. Monads and monad-based interactive I/O. Design and implementation of a language interpreter as a functional program. Attention throughout to problem-solving, program design, and testing skills. Learning Outcomes: On successful completion of this module, students should be able to:?Explain the nature and applicability of functional programming techniques;?Design and implement functional solutions to problems of substantial complexity;?Program, in any language, at a significantly higher skill level. Assessment: Total Marks 100: Formal Written Examination 70 marks; Continuous Assessment 30 marks (5 x Laboratory Assignments, 6 marks each). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Summer 2018. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS4622 Advanced Computer Architecture II Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Pre-requisite(s): CS4617 Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 10hr(s) Other (Laboratory/Tutorial sessions). Module Co-ordinator: Lecturer(s): Staff, Department of Computer Science. Module Objective: To learn the design principles underlying advanced computer architectures Module Content: Comparison of processor architecture models. Techniques for performance improvement. Storage models and peripherals. Multiple processor configurations. Learning Outcomes: On successful completion of this module, students should be able to:?Evaluate the suitability of an architecture for a given problem area;?Suggest areas in which an architecture might be improved;?Assess appropriate peripheral connectivity;?Appreciate the application areas and problems inherent in multiprocessing. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks. Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Summer 2018. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS4624 Digital Video Capture and Packaging Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Min 10. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 12 x 1hr(s) Practicals. Module Co-ordinator: Dr Ian Pitt, Department of Computer Science. Lecturer(s): Dr Ian Pitt, Department of Computer Science. Module Objective: Develop expertise in digital video capture, processing and packaging. Module Content: Develop understanding of the planning, production and post-production of digital video. Application and evaluation of industry-standard tools in capturing, processing and packaging digital video. Learning Outcomes: On successful completion of this module, students should be able to:?Acquire a comprehensive knowledge of the techniques used in the Digital Media Industry;?Determine the correct use of these techniques and tools through a comprehensive understanding of the underlying theoretical and programming principles;?Develop understanding of the potential for new technologies and their new creative uses;?Evaluate the effectiveness of these techniques and tools in a variety of situations;?Apply these techniques and tools to produce digital media projects;?Design and execute digital video works. Assessment: Total Marks 100: Formal Written Examination 70 marks; Continuous Assessment 30 marks (Tests; individual and group project work). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Where work is submitted up to and including 7 days late, 5% of the total marks available shall be deducted from the mark achieved. Where work is submitted up to and including 14 days late, 10% of the total marks available shall be deducted from the mark achieved. Work submitted 15 days late or more shall be assigned a mark of zero. Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Winter 2017. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS4625 Audio and Sound Engineering Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Min 10. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 12 x 1hr(s) Practicals. Module Co-ordinator: Mr David Murphy, Department of Computer Science. Lecturer(s): Mr David Murphy, Department of Computer Science. Module Objective: Develop understanding of the techniques and industry-standard tools used in digital audio capture and processing. Module Content: Introduction to the technologies and techniques used in digital audio. Physics of sound and the psycho-physiological basis of hearing. Sound engineering, production and post-production. Learning Outcomes: On successful completion of this module, students should be able to:?Acquire a comprehensive knowledge of the techniques and industry-standard tools used in the Digital Media Industry;?Determine the correct use of these techniques and tools through a comprehensive understanding of the underlying theoretical and programming principles;?Develop understanding of the potential for new technologies and their new creative uses;?Evaluate the effectiveness of these techniques and tools in a variety of situations;?Apply these techniques and tools to produce digital media projects;?Design and execute digital audio works. Assessment: Total Marks 100: Formal Written Examination 60 marks; Continuous Assessment 40 marks (Individual and group project work; tests; presentations; reports). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Where work is submitted up to and including 7 days late, 5% of the total marks available shall be deducted from the mark achieved. Where work is submitted up to and including 14 days late, 10% of the total marks available shall be deducted from the mark achieved. Work submitted 15 days late or more shall be assigned a mark of zero. Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Winter 2017. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS4626 Constraint Programming and Optimisation Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Min 5. Pre-requisite(s): CS1112, CS1113, CS2514, CS2515 Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 9hr(s) Practicals. Module Co-ordinator: Prof Kenneth Brown, Department of Computer Science. Lecturer(s): Prof Kenneth Brown, Department of Computer Science. Module Objective: Students will learn how to model and solve constraint-based decision and optimisation problems, and will gain an understanding of constraint programming applications and current research Module Content: Topics will be selected from the following and others: constraint satisfaction and optimisation problems, modelling problems, global constraints, backtracking search, constraint propagation, ordering heuristics, local search, current research topics Learning Outcomes: On successful completion of this module, students should be able to:?Describe and apply the fundamental procedures of constraint-based search and inference.?Construct constraint-based models from problem descriptions.?Implement constraint models in a practical CP toolkit or language.?Describe the use and benefits of global constraints.?Describe constraint-based local search procedures. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks (Laboratory Assignments). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Summer 2018. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS4801 Programming in Python Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Min 20. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 10 x 1hr(s) Practicals. Module Co-ordinator: Dr Kieran Herley, Department of Computer Science. Lecturer(s): Dr Kieran Herley, Department of Computer Science. Module Objective: Introduce the fundamental principles of object-oriented programming using the Python language. Module Content: Variables, expressions and statements; functions, conditionals and recursion; fruitful functions and iteration; strings and lists; tuples and dictionaries; files and exceptions; classes and objects. Learning Outcomes: On successful completion of this module, students should be able to:?Demonstrate the basic principles of object-oriented programming?Write computer programs of moderate complexity?Incorporate third-party code into their own programs. Assessment: Total Marks 100: Formal Written Examination 60 marks; Continuous Assessment 40 marks (8 laboratory assignments, each worth 5 marks). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Winter 2017. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS5002 Web Development 1 Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Min 20, Max 150. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 22 x 1hr(s) Lectures; 10 x 2hr(s) Practicals. Module Co-ordinator: Dr Derek Bridge, Department of Computer Science. Lecturer(s): Dr Derek Bridge, Department of Computer Science. Module Objective: To provide students with an introduction to web site development Module Content: The operation of the web: client, server, HTTP. Web sites: HTML, CSS, media formats. Web site design: usability, accessibility, cross-browser compatibility, etc. Tools: WYSIWYG systems, Content Management Systems, etc. Learning Outcomes: On successful completion of this module, students should be able to:?Explain the operation of the web;?Design and create web pages using HTML and CSS;?Appreciate the role of web development tools;?Evaluate the real-world applicability of the technologies covered in the module. Assessment: Total Marks 100: Formal Written Examination 75 marks; Continuous Assessment 25 marks. Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Winter 2017. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS5007 Computer Applications Programming Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Min 20, Max 150. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 12 x 1hr(s) Practicals. Module Co-ordinator: Dr James G. Doherty, Department of Computer Science. Lecturer(s): Dr James G. Doherty, Department of Computer Science. Module Objective: Provide students with the skills to employ effectively the high-end features of some commonly-used application packages. Module Content: Application features relating to: content-rich document preparation and production; building complex spreadsheet models; linking spreadsheets; using OLE. Learning Outcomes: On successful completion of this module, students should be able to:?Integrate features of applications for document and presentation production?Build complex spreadsheet models?Use spreadsheet linking and object linking and embedding?Write scripts to automate and integrate multiple tasks. Assessment: Total Marks 100: Formal Written Examination 70 marks; Continuous Assessment 30 marks (6 laboratory assignments, 5 marks each). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Summer 2018. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS5008 Internet Computing Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Min 20, Max 150. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 5 x 2hr(s) Practicals. Module Co-ordinator: Mr Adrian O'Riordan, Department of Computer Science. Lecturer(s): Mr Adrian O'Riordan, Department of Computer Science. Module Objective: To provide students with an introduction to computer networking and the Internet. Module Content: Networking basics: history, components, packet switching, performance, architecture. Application layer protocols, including HTTP and peer-to-peer file sharing. Naming, including domain name system. Transport protocols, including TCP. Network security essentials. Learning Outcomes: On successful completion of this module, students should be able to:?Identify the layers and functions in a network architecture? Explain the operation of key Internet protocols?Analyse Internet traffic?Configure networking on Linux and Windows operating systems?Set up a simple firewall. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks (5 laboratory assignments, 4 marks each). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Winter 2017. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS5009 Multimedia Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Min 20, Max 150. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 9 x 1hr(s) Practicals. Module Co-ordinator: Dr Ahmed Zahran, Department of Computer Science. Lecturer(s): Dr Ahmed Zahran, Department of Computer Science. Module Objective: To provide students with a practical introduction to the hardware and software technologies used for the development and delivery of multimedia products. Module Content: Introduction to media types: text, audio, graphic, video, animated images ; audio editing techniques; graphic editing techniques; video editing techniques; use of authoring software package to facilitate media integration and creation of animation effects. Learning Outcomes: On successful completion of this module, students should be able to:?Distinguish between the various types of data media used in multimedia work?Use the skills acquired to edit media of various kinds?Use authoring software. Assessment: Total Marks 100: Formal Written Examination 70 marks; Continuous Assessment 30 marks (5 x Laboratory Assignments (6 marks each)). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Winter 2017. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS5018 Web Development 2 Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Min 20, Max 150. Pre-requisite(s): none Co-requisite(s): CS1117, CS5002, CS5021 Teaching Method(s): 24 x 1hr(s) Lectures; 10 x 2hr(s) Practicals. Module Co-ordinator: Dr Derek Bridge, Department of Computer Science. Lecturer(s): Dr Derek Bridge, Department of Computer Science. Module Objective: To provide students with an introduction to web programming Module Content: Introductory server-side programming (using the programming language taught in CS1117). Topics in server-side programming: connecting to databases, cookies, sessions, etc. Introductory client-side programming. Topics in client-side programming: the DOM, event-handling, asynchronous requests, etc. Survey of other technologies. Learning Outcomes: On successful completion of this module, students should be able to:?Explain the role of server-side and client-side technologies;?Write simple server-side programs using the programming language taught in CS1117;?Write simple client-side programs;?Evaluate the real-world applicability of the technologies covered in the module. Assessment: Total Marks 100: Formal Written Examination 75 marks; Continuous Assessment 25 marks. Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Summer 2018. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS5019 Systems Organisation I Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Min 5, Max 200. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 10 x 1hr(s) Practicals. Module Co-ordinator: Prof John Morrison, Department of Computer Science. Lecturer(s): Prof John Morrison, Department of Computer Science. Module Objective: Students will attain competence in representing information with numbers. Hardware circuits will be constructed to manipulate these representations and through a series of abstraction levels, this module will show how a simple CPU, under the control of a stored program, can be constructed. Module Content: Number Systems, Using numbers to represent information, Boolean Algebra, Logic Gates and Combinatorial Logic, Hardware Arithmetic, Multiplexing and De-multiplexing, Memory Technologies, Instruction Pathways, CPU organisation. Learning Outcomes: On successful completion of this module, students should be able to:?Convert from one number base to another;?Design and build Combinatorial Logic Circuits;?Use the Rules of Boolean Algebra for Circuit optimization?Use Karnaugh Maps in Circuit Design?Describe the Fetch-Decode-Execute Cycle;?Enumerate the principle components of a CPU and describe their function;?Construct a logical circuit to store information;?Build Sequential Circuits;?Construct Moore Mealy Finite State Machines. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks. Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Winter 2017. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS5020 Systems Organisation II Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Min 5, Max 200. Pre-requisite(s): None Co-requisite(s): CS5019 Teaching Method(s): 24 x 1hr(s) Lectures; 10 x 1hr(s) Practicals. Module Co-ordinator: Prof John Morrison, Department of Computer Science. Lecturer(s): Prof John Morrison, Department of Computer Science. Module Objective: Students will attain competence in a number of computing environments, operating systems and software tools; they will obtain an appreciation for computer organisation and hardware-software interaction. Module Content: Instruction sets, address modes, traps, basic machine/assembly programming and language translation. Introduction to operating systems, file systems and devices, protocols, introduction to networking and the Internet. Learning Outcomes: On successful completion of this module, students should be able to:?Calculate data transfer rates between various functional components;?Theoretically construct a PC by combining appropriate functional;components together;?Enumerate and describe the defining characteristics of a microcontroller;?Describe Quantization in Analogue to Digital Conversions;?Work with different encoding schemes including BCD and Gray codes;?Explore the engineering trade-offs in Computer Architecture;?Design and write Assembly Language programs;?Describe the primary functions of an Operating System;?Identify hosts and subnets from IP addresses. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks. Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Summer 2018. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. [Top of page] CS5021 Introduction to Relational Databases Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Max 200. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 10 x 2hr(s) Practicals. Module Co-ordinator: Dr Kieran Herley, Department of Computer Science. Lecturer(s): Dr Kieran Herley, Department of Computer Science. Module Objective: Students will learn the fundamental practices of relational database systems: designing databases for practical applications, construction of such databases and manipulation of the data using different interfaces. Module Content: Fundamentals of relational databases; the SQL database query language. Learning Outcomes: On successful completion of this module, students should be able to:?Design simple multi-table relational databases;?Apply the relational data model to common scenarios;?Write SQL-based software to access a database;?Use both a command-line and a graphical user-interface to a relational database system to implement and query such databases. Assessment: Total Marks 100: Formal Written Examination 70 marks; Continuous Assessment 30 marks (In-class Tests 30 marks). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Winter 2017. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) (which incorporates assessment of both End-of-Year Written Examination and Continuous Assessment) to be taken in Autumn 2018. [Top of page] CS5022 Database Design and Administration Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Max 120. Pre-requisite(s): CS5021 Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 10hr(s) Practicals. Module Co-ordinator: Mr Humphrey Sorensen, Department of Computer Science. Lecturer(s): Mr Humphrey Sorensen, Department of Computer Science. Module Objective: Students will learn: analysis requirements for various types of application for managing persistent data and how to design, implement and administer databases to meet these requirements; the remainder of the SQL concepts and constructs not covered in the prerequisite module. Module Content: Database Management Systems; DBMS storage structures. Relational algebra and relational calculus; SQL; query optimisation; views. Database Design: UML Class Diagrams and Entity-Relationship Diagrams; UML Sequence Diagrams; conceptual, logical and physical database design; data integrity; functional dependencies and normal forms. Learning Outcomes: On successful completion of this module, students should be able to:?demonstrate a working knowledge of relational database theory?demonstrate a detailed knowledge of the SQL language and SQL-based database management systems?demonstrate an understanding of the principles and practices of relational database design and administration?design efficient data models?develop UML based models of application scenarios. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks (5 x Laboratory Assignments, 4 marks each). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Summer 2018. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS6100 Authoring Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Min 10. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 12 x 1hr(s) Practicals. Module Co-ordinator: Dr John J. O'Mullane, Department of Computer Science. Lecturer(s): Dr John J. O'Mullane, Department of Computer Science. Module Objective: Develop expertise in multimedia authoring using industry-standard authoring environments. Module Content: Introduction to the principles of authoring for digital media environments using industry-standard authoring tools. Plan, develop, and evaluate digital media interactive applications. Learning Outcomes: On successful completion of this module, students should be able to:?Acquire a comprehensive knowledge of the techniques and industry-standard tools used in the Digital Media Industry.?Determine the correct use of these techniques and tools through a comprehensive understanding of the underlying theoretical and programming principles.?Develop understanding of the potential for new technologies and their new creative uses.?Evaluate the effectiveness of these techniques and tools in a variety of situations.?Apply these techniques and tools to produce digital media projects.?Design, plan and communicate the results of, digital media projects. Assessment: Total Marks 100: Formal Written Examination 60 marks; Continuous Assessment 40 marks (Individual and group project work; tests; presentations; reports). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Where work is submitted up to and including 7 days late, 5% of the total marks available shall be deducted from the mark achieved. Where work is submitted up to and including 14 days late, 10% of the total marks available shall be deducted from the mark achieved. Work submitted 15 days late or more shall be assigned a mark of zero. Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Winter 2017. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS6101 Web Development for Digital Media Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Min 10. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 12 x 1hr(s) Practicals. Module Co-ordinator: Dr Ian Pitt, Department of Computer Science. Lecturer(s): Dr Ian Pitt, Department of Computer Science. Module Objective: Develop expertise in creating and publishing professional quality websites using industry-standard tools. Module Content: Develop understanding of the client, server and infrastructure technologies used in online publishing of digital media. Application and evaluation of industry-standard tools for creation, management and delivery of online content. Learning Outcomes: On successful completion of this module, students should be able to:?Acquire a comprehensive knowledge of the techniques and industry-standard tools used in the Digital Media Industry.?Determine the correct use of these techniques and tools through a comprehensive understanding of the underlying theoretical and programming principles.?Develop understanding of the potential for new technologies and their new creative uses.?Evaluate the effectiveness of these techniques and tools in a variety of situations.?Apply these techniques and tools to produce digital media projects.?Design, plan and communicate the results of, digital media projects. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks. Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Where work is submitted up to and including 7 days late, 5% of the total marks available shall be deducted from the mark achieved. Where work is submitted up to and including 14 days late, 10% of the total marks available shall be deducted from the mark achieved. Work submitted 15 days late or more shall be assigned a mark of zero. Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Winter 2017. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS6102 Graphics for Interactive Media Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Min 10. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 12 x 1hr(s) Practicals. Module Co-ordinator: Dr Marius-Sabin Tabirca, Department of Computer Science. Lecturer(s): Dr Marius-Sabin Tabirca, Department of Computer Science. Module Objective: Develop understanding of graphic design, creation and production using industry-standard tools. Module Content: The principles, practices, technologies and critical frameworks associated with the practice of graphic design for digital media. Develop understanding of the creative and technical aspects of image capture, editing and manipulation. Production of graphics for digital media using industry-standard tools. Learning Outcomes: On successful completion of this module, students should be able to:?Acquire a comprehensive knowledge of the techniques and industry-standard tools used in the Digital Media Industry.?Determine the correct use of these techniques and tools through a comprehensive understanding of the underlying theoretical and programming principles.?Develop understanding of the potential for new technologies and their new creative uses.?Evaluate the effectiveness of these techniques and tools in a variety of situations.?Apply these techniques and tools to produce digital media projects.?Design, plan and communicate the results of, digital media projects. Assessment: Total Marks 100: Formal Written Examination 60 marks; Continuous Assessment 40 marks (Individual and group project work; tests; presentations; reports). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Where work is submitted up to and including 7 days late, 5% of the total marks available shall be deducted from the mark achieved. Where work is submitted up to and including 14 days late, 10% of the total marks available shall be deducted from the mark achieved. Work submitted 15 days late or more shall be assigned a mark of zero. Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Winter 2017. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS6103 Audio and Sound Engineering Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Min 10. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 12 x 1hr(s) Practicals. Module Co-ordinator: Mr David Murphy, Department of Computer Science. Lecturer(s): Mr David Murphy, Department of Computer Science. Module Objective: Develop understanding of the techniques and industry-standard tools used in digital audio capture and processing. Module Content: Introduction to the technologies and techniques used in digital audio. Physics of sound and the psycho-physiological basis of hearing. Sound engineering, production and post-production. Learning Outcomes: On successful completion of this module, students should be able to:?Acquire a comprehensive knowledge of the techniques and industry-standard tools used in the Digital Media Industry.?Determine the correct use of these techniques and tools through a comprehensive understanding of the underlying theoretical and programming principles.?Develop understanding of the potential for new technologies and their new creative uses.?Evaluate the effectiveness of these techniques and tools in a variety of situations.?Apply these techniques and tools to produce digital media projects.?Design, plan and communicate the results of, digital media projects. Assessment: Total Marks 100: Formal Written Examination 60 marks; Continuous Assessment 40 marks (Individual and group project work; tests; presentations; reports). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Where work is submitted up to and including 7 days late, 5% of the total marks available shall be deducted from the mark achieved. Where work is submitted up to and including 14 days late, 10% of the total marks available shall be deducted from the mark achieved. Work submitted 15 days late or more shall be assigned a mark of zero. Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Winter 2017. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS6104 Digital Video Capture and Packaging Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Min 10. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 12 x 1hr(s) Practicals. Module Co-ordinator: Dr Ian Pitt, Department of Computer Science. Lecturer(s): Dr Ian Pitt, Department of Computer Science. Module Objective: Develop expertise in digital video capture, processing and packaging Module Content: Develop understanding of the planning, production and post-production of digital video. Application and evaluation of industry-standard tools in capturing, processing and packaging digital video. Learning Outcomes: On successful completion of this module, students should be able to:?Acquire a comprehensive knowledge of the techniques and industry-standard tools used in the Digital Media Industry.?Determine the correct use of these techniques and tools through a comprehensive understanding of the underlying theoretical and programming principles.?Develop understanding of the potential for new technologies and their new creative uses.?Evaluate the effectiveness of these techniques and tools in a variety of situations.?Apply these techniques and tools to produce digital media projects.?Design, plan and communicate the results of, digital media projects. Assessment: Total Marks 100: Formal Written Examination 70 marks; Continuous Assessment 30 marks (tests; individual and group project work). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Where work is submitted up to and including 7 days late, 5% of the total marks available shall be deducted from the mark achieved. Where work is submitted up to and including 14 days late, 10% of the total marks available shall be deducted from the mark achieved. Work submitted 15 days late or more shall be assigned a mark of zero. Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Winter 2017. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS6105 Future and Emerging Interaction Technologies Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Min 10. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 12 x 1hr(s) Practicals. Module Co-ordinator: Mr David Murphy, Department of Computer Science. Lecturer(s): Mr David Murphy, Department of Computer Science. Module Objective: Develop understanding of the potential for new interaction technologies and their creative uses. Module Content: Design of Interaction Environments, Immersion in Virtual and Augmented Realities, Three Dimensional Geometry and Interactive Computer Graphics. Learning Outcomes: On successful completion of this module, students should be able to:?Acquire a comprehensive knowledge of the techniques and industry-standard tools used in the Digital Media Industry.?Determine the correct use of these techniques and tools through a comprehensive understanding of the underlying theoretical and programming principles.?Develop understanding of the potential for new technologies and their new creative uses.?Evaluate the effectiveness of these techniques and tools in a variety of situations.?Apply these techniques and tools to produce digital media projects.?Design, plan and communicate the results of, digital media projects. Assessment: Total Marks 100: Formal Written Examination 60 marks; Continuous Assessment 40 marks (Individual and group project work; tests; presentations; reports). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Where work is submitted up to and including 7 days late, 5% of the total marks available shall be deducted from the mark achieved. Where work is submitted up to and including 14 days late, 10% of the total marks available shall be deducted from the mark achieved. Work submitted 15 days late or more shall be assigned a mark of zero. Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Summer 2018. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS6110 Animation Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Min 5. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 12 x 1hr(s) Practicals. Module Co-ordinator: Dr John J. O'Mullane, Department of Computer Science. Lecturer(s): Staff, Department of Computer Science. Module Objective: Develop understanding of both general and specific computer animation methods. Module Content: Dramaturgy and aesthetics for computer animation, 2D animation effects such as squash, stretch, anticipation and exaggeration. Building models for 3D animation. Interpolation, kinematics (forward/inverse), particle animation, deformation and morphing, rigid- and soft body animation. Motion capture. Learning Outcomes: On successful completion of this module, students should be able to:?Acquire a comprehensive knowledge of the techniques and industry-standard tools used in the Digital Media Industry.?Determine the correct use of these techniques and tools through a comprehensive understanding of the underlying theoretical and programming principles.?Develop understanding of the potential for new technologies and their new creative uses.?Evaluate the effectiveness of these techniques and tools in a variety of situations.?Apply these techniques and tools to produce digital media projects.?Design, plan and communicate the results of, digital media projects. Assessment: Total Marks 100: Formal Written Examination 60 marks; Continuous Assessment 40 marks (Individual and group project work; tests; presentations; reports). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Where work is submitted up to and including 7 days late, 5% of the total marks available shall be deducted from the mark achieved. Where work is submitted up to and including 14 days late, 10% of the total marks available shall be deducted from the mark achieved. Work submitted 15 days late or more shall be assigned a mark of zero. Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Summer 2018. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS6111 3D Graphics and Modelling Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Min 5. Pre-requisite(s): None Co-requisite(s): CS6102 Teaching Method(s): 24 x 1hr(s) Lectures; 12 x 1hr(s) Practicals. Module Co-ordinator: Mr David Murphy, Department of Computer Science. Lecturer(s): Mr David Murphy, Department of Computer Science. Module Objective: Develop understanding of the fundamental concepts in the modelling of objects and apply these principles, techniques, and tools for creating 3D graphics. Module Content: Tools, techniques and processes involved in 3D graphics design, modelling and rendering. Create appropriate models of 3D objects and scenes. Solving problems in curve, surface and solid modeling. Learning Outcomes: On successful completion of this module, students should be able to:?Acquire a comprehensive knowledge of the techniques and industry-standard tools used in the Digital Media Industry.?Determine the correct use of these techniques and tools through a comprehensive understanding of the underlying theoretical and programming principles.?Develop understanding of the potential for new technologies and their new creative uses.?Evaluate the effectiveness of these techniques and tools in a variety of situations.?Apply these techniques and tools to produce digital media projects.?Design, plan and communicate the results of, digital media projects. Assessment: Total Marks 100: Formal Written Examination 60 marks; Continuous Assessment 40 marks (Individual and group project work; tests; presentations; reports). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Where work is submitted up to and including 7 days late, 5% of the total marks available shall be deducted from the mark achieved. Where work is submitted up to and including 14 days late, 10% of the total marks available shall be deducted from the mark achieved. Work submitted 15 days late or more shall be assigned a mark of zero. Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Winter 2017. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS6112 Image Processing Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Min 5. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 12 x 1hr(s) Practicals; Seminars. Module Co-ordinator: Dr John J. O'Mullane, Department of Computer Science. Lecturer(s): Staff, Department of Computer Science. Module Objective: Develop understanding of the techniques and applications of image processing. Module Content: Fundamentals of image processing. Image enhancement and restoration; edge detection; segmentation and texture; correlation and registration. Feature extraction, and recognition. Applications of image processing. Learning Outcomes: On successful completion of this module, students should be able to:?Acquire a comprehensive knowledge of the techniques and industry-standard tools used in the Digital Media Industry.?Determine the correct use of these techniques and tools through a comprehensive understanding of the underlying theoretical and programming principles.?Develop understanding of the potential for new technologies and their new creative uses.?Evaluate the effectiveness of these techniques and tools in a variety of situations.?Apply these techniques and tools to produce digital media projects.?Design, plan and communicate the results of, digital media projects. Assessment: Total Marks 100: Formal Written Examination 60 marks; Continuous Assessment 40 marks (1 In-class test, 10 marks; 1 Assignment, 20 marks; 1 Report, 10 marks). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Where work is submitted up to and including 7 days late, 10% of the total marks available shall be deducted from the mark achieved. Where work is submitted up to and including 14 days late, 20% of the total marks available shall be deducted from the mark achieved. Work submitted 15 days late or more shall be assigned a mark of zero. Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Summer 2018. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. Marks in passed element(s) of Continuous Assessment are carried forward, Failed element(s) of Continuous Assessment must be repeated (as specified by the Module Coordinator). [Top of page] CS6113 Internet-based Applications Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Min 5. Pre-requisite(s): CS6101 Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 12 x 1hr(s) Practicals. Module Co-ordinator: Dr Frank Boehme, Department of Computer Science. Lecturer(s): Dr Frank Boehme, Department of Computer Science. Module Objective: Develop understanding of the techniques and tools used in internet-based digital media applications. Module Content: Evaluation of different platforms and architectures for internet-based digital media applications including: layered architectures; service-oriented architectures, XML-based architectures and customisable environments. Implementation of internet-based digital media applications. Learning Outcomes: On successful completion of this module, students should be able to:?Acquire a comprehensive knowledge of the techniques and industry-standard tools used in the Digital Media Industry.?Determine the correct use of these techniques and tools through a comprehensive understanding of the underlying theoretical and programming principles.?Develop understanding of the potential for new technologies and their new creative uses.?Evaluate the effectiveness of these techniques and tools in a variety of situations.?Apply these techniques and tools to produce digital media projects.?Design, plan and communicate the results of, digital media projects. Assessment: Total Marks 100: Formal Written Examination 60 marks; Continuous Assessment 40 marks (Individual and group project work; tests; presentations; reports). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Where work is submitted up to and including 7 days late, 5% of the total marks available shall be deducted from the mark achieved. Where work is submitted up to and including 14 days late, 10% of the total marks available shall be deducted from the mark achieved. Work submitted 15 days late or more shall be assigned a mark of zero. Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Summer 2018. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS6114 Digital Video Compression and Delivery Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Min 5. Pre-requisite(s): CS6104 Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 12 x 1hr(s) Practicals. Module Co-ordinator: Dr John J. O'Mullane, Department of Computer Science. Lecturer(s): Dr John J. O'Mullane, Department of Computer Science. Module Objective: Develop understanding of the principles of digital video compression and delivery. Module Content: Develop understanding of the principles underlying the compression of video. Evaluation of state-of-the-art coding techniques, including compression algorithms and error resilience. Enhancement of the performance of existing systems for compression and delivery. Design of novel techniques and tools for compression and delivery. Learning Outcomes: On successful completion of this module, students should be able to:?Acquire a comprehensive knowledge of the techniques and industry-standard tools used in the Digital Media Industry.?Determine the correct use of these techniques and tools through a comprehensive understanding of the underlying theoretical and programming principles.?Develop understanding of the potential for new technologies and their new creative uses.?Evaluate the effectiveness of these techniques and tools in a variety of situations.?Apply these techniques and tools to produce digital media projects.?Design, plan and communicate the results of, digital media projects. Assessment: Total Marks 100: Formal Written Examination 60 marks; Continuous Assessment 40 marks (Individual and group project work; tests; presentations; reports). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Where work is submitted up to and including 7 days late, 5% of the total marks available shall be deducted from the mark achieved. Where work is submitted up to and including 14 days late, 10% of the total marks available shall be deducted from the mark achieved. Work submitted 15 days late or more shall be assigned a mark of zero. Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Summer 2018. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS6115 Human Computer Interaction Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Min 5. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 12 x 1hr(s) Practicals. Module Co-ordinator: Dr Ian Pitt, Department of Computer Science. Lecturer(s): Dr Ian Pitt, Department of Computer Science. Module Objective: Develop understanding of the wide range of user-interface devices and their effect on the human user. Module Content: Human perception and human memory. User-centred design. Dynamic interaction and dialogue design. Help systems. Accessibility. Specification and modeling. Analysis, design and implementation of systems with proper regard to the human user. Learning Outcomes: On successful completion of this module, students should be able to:?Acquire a comprehensive knowledge of the techniques and industry-standard tools used in the Digital Media Industry.?Determine the correct use of these techniques and tools through a comprehensive understanding of the underlying theoretical and programming principles.?Develop understanding of the potential for new technologies and their new creative uses.?Evaluate the effectiveness of these techniques and tools in a variety of situations.?Apply these techniques and tools to produce digital media projects.?Design, plan and communicate the results of, digital media projects. Assessment: Total Marks 100: Formal Written Examination 80 marks; Continuous Assessment 20 marks. Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Where work is submitted up to and including 7 days late, 5% of the total marks available shall be deducted from the mark achieved. Where work is submitted up to and including 14 days late, 10% of the total marks available shall be deducted from the mark achieved. Work submitted 15 days late or more shall be assigned a mark of zero. Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Summer 2018. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS6116 Mobile Multimedia Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Min 5. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 12 x 1hr(s) Practicals. Module Co-ordinator: Dr Marius-Sabin Tabirca, Department of Computer Science. Lecturer(s): Dr Marius-Sabin Tabirca, Department of Computer Science. Module Objective: Develop understanding of the principles, techniques and tools for mobile multimedia systems. Module Content: Develop understanding of the novel digital media aspects of mobile, ubiquitous and pervasive computing systems. The tools and techniques for creating and delivering multimedia content on wirelessand 3G/4G networks. Acquire a range of skills for software development in mobile and ubiquitous computing using industry-standard tools. Learning Outcomes: On successful completion of this module, students should be able to:?Acquire a comprehensive knowledge of the techniques and industry-standard tools used in the Digital Media Industry.?Determine the correct use of these techniques and tools through a comprehensive understanding of the underlying theoretical and programming principles.?Develop understanding of the potential for new technologies and their new creative uses.?Evaluate the effectiveness of these techniques and tools in a variety of situations.?Apply these techniques and tools to produce digital media projects.?Design, plan and communicate the results of, digital media projects. Assessment: Total Marks 100: Formal Written Examination 60 marks; Continuous Assessment 40 marks (2 x assignments, 20 marks each). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Where work is submitted up to and including 7 days late, 5% of the total marks available shall be deducted from the mark achieved. Where work is submitted up to and including 14 days late, 10% of the total marks available shall be deducted from the mark achieved. Work submitted 15 days late or more shall be assigned a mark of zero. Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Summer 2018. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. Marks in passed element(s) of Continuous Assessment are carried forward, Failed element(s) of Continuous Assessment must be repeated. [Top of page] CS6117 Audio Processing Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Min 5. Pre-requisite(s): CS6103 Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 12 x 1hr(s) Practicals. Module Co-ordinator: Mr David Murphy, Department of Computer Science. Lecturer(s): Mr David Murphy, Department of Computer Science. Module Objective: Develop understanding of the principles of digital audio compression and delivery. Module Content: Develop understanding of the principles underlying the compression of audio. Evaluation of state-of-the-art coding techniques, including compression algorithms, error resilience, sound synthesis and music synthesis. Enhancement of the performance of existing systems for compression and delivery. Design of novel techniques and tools for compression and delivery. Learning Outcomes: On successful completion of this module, students should be able to:?Acquire a comprehensive knowledge of the techniques and industry-standard tools used in the Digital Media Industry.?Determine the correct use of these techniques and tools through a comprehensive understanding of the underlying theoretical and programming principles.?Develop understanding of the potential for new technologies and their new creative uses.?Evaluate the effectiveness of these techniques and tools in a variety of situations.?Apply these techniques and tools to produce digital media projects.?Design, plan and communicate the results of, digital media projects. Assessment: Total Marks 100: Formal Written Examination 60 marks; Continuous Assessment 40 marks (Individual and group project work; tests; presentations; reports). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Where work is submitted up to and including 7 days late, 5% of the total marks available shall be deducted from the mark achieved. Where work is submitted up to and including 14 days late, 10% of the total marks available shall be deducted from the mark achieved. Work submitted 15 days late or more shall be assigned a mark of zero. Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Summer 2018. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS6118 Speech Processing Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Min 5. Pre-requisite(s): CS6103 Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 12 x 1hr(s) Practicals. Module Co-ordinator: Dr John J. O'Mullane, Department of Computer Science. Lecturer(s): Staff, Department of Computer Science. Module Objective: Develop understanding of the principles and applications of speech processing. Module Content: Develop understanding of the special properties of speech. Evaluation and analysis of spoken dialogue design and command sets. Implementation of speech interfaces using industry-standard tools and technologies (e.g. SALT, VoiceXML). Learning Outcomes: On successful completion of this module, students should be able to:?Acquire a comprehensive knowledge of the techniques and industry-standard tools used in the Digital Media Industry.?Determine the correct use of these techniques and tools through a comprehensive understanding of the underlying theoretical and programming principles.?Develop understanding of the potential for new technologies and their new creative uses.?Evaluate the effectiveness of these techniques and tools in a variety of situations.?Apply these techniques and tools to produce digital media projects.?Design, plan and communicate the results of, digital media projects. Assessment: Total Marks 100: Formal Written Examination 60 marks; Continuous Assessment 40 marks (Individual and group project work; tests; presentations; reports). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Where work is submitted up to and including 7 days late, 5% of the total marks available shall be deducted from the mark achieved. Where work is submitted up to and including 14 days late, 10% of the total marks available shall be deducted from the mark achieved. Work submitted 15 days late or more shall be assigned a mark of zero. Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Summer 2018. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS6119 Interactive Visualisation Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Min 5. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 12 x 1hr(s) Practicals. Module Co-ordinator: Dr John J. O'Mullane, Department of Computer Science. Lecturer(s): Staff, Department of Computer Science. Module Objective: Develop understanding of the techniques used in the visualisation of data. Module Content: Develop understanding of the techniques used in the interactive exploration of data, including abstract data sets, scientific data and medical data. Evaluation and analysis of industry-standard tools and programming libraries for interactive data exploration. Implementation of interactive visualisation applications using industry-standard programming libraries. Learning Outcomes: On successful completion of this module, students should be able to:?Acquire a comprehensive knowledge of the techniques and industry-standard tools used in the Digital Media Industry.?Determine the correct use of these techniques and tools through a comprehensive understanding of the underlying theoretical and programming principles.?Develop understanding of the potential for new technologies and their new creative uses.?Evaluate the effectiveness of these techniques and tools in a variety of situations.?Apply these techniques and tools to produce digital media projects.?Design, plan and communicate the results of, digital media projects. Assessment: Total Marks 100: Formal Written Examination 60 marks; Continuous Assessment 40 marks (Individual and group project work; tests; presentations; reports). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Where work is submitted up to and including 7 days late, 5% of the total marks available shall be deducted from the mark achieved. Where work is submitted up to and including 14 days late, 10% of the total marks available shall be deducted from the mark achieved. Work submitted 15 days late or more shall be assigned a mark of zero. Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Summer 2018. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS6120 Intelligent Media Systems Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Min 5. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 12 x 1hr(s) Practicals. Module Co-ordinator: Dr John J. O'Mullane, Department of Computer Science. Lecturer(s): Staff, Department of Computer Science. Module Objective: Develop understanding of the design and implementation of intelligent software agents. Module Content: Develop understanding of the principles and techniques used in intelligent information filtering. Evaluation and analysis of innovative technologies for designing and implementing future intelligent media applications. Learning Outcomes: On successful completion of this module, students should be able to:?Acquire a comprehensive knowledge of the techniques and industry-standard tools used in the Digital Media Industry.?Determine the correct use of these techniques and tools through a comprehensive understanding of the underlying theoretical and programming principles.?Develop understanding of the potential for new technologies and their new creative uses.?Evaluate the effectiveness of these techniques and tools in a variety of situations.?Apply these techniques and tools to produce digital media projects.?Design, plan and communicate the results of, digital media projects. Assessment: Total Marks 100: Formal Written Examination 60 marks; Continuous Assessment 40 marks (Individual and group project work; tests; presentations; reports). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Where work is submitted up to and including 7 days late, 5% of the total marks available shall be deducted from the mark achieved. Where work is submitted up to and including 14 days late, 10% of the total marks available shall be deducted from the mark achieved. Work submitted 15 days late or more shall be assigned a mark of zero. Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Summer 2018. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS6200 Dissertation in Interactive Media Credit Weighting: 30 Semester(s): Semester 3. (Project work will be undertaken over the summer (June - September)). No. of Students: Min 10. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): Directed Study (directed reading, individual research). Module Co-ordinator: Dr John J. O'Mullane, Department of Computer Science. Lecturer(s): Staff, Department of Computer Science. Module Objective: Apply the skills that have been introduced in the taught part of the MSc Interactive Media. Module Content: The student undertakes a substantial digital media project, approved by the Department of Computer Science, which builds the skills that have been introduced in the taught part of the programme. Learning Outcomes: On successful completion of this module, students should be able to:?Acquire a comprehensive knowledge of the techniques and industry-standard tools used in the Digital Media Industry?Determine the correct use of these techniques and tools through a comprehensive understanding of the underlying theoretical and programming principles?Develop understanding of the potential for new technologies and their new creative uses?Evaluate the effectiveness of these techniques and tools in a variety of situations?Apply these techniques and tools to produce digital media projects?Design, plan and communicate the results of, digital media projects. Assessment: Total Marks 600: Continuous Assessment 600 marks (The project consists of a written report and a delivered digital media project.). Compulsory Elements: Continuous Assessment. The Research Dissertation must be submitted by the end of the first academic year of registration for the programme (full-time students) for examination by internal and external examiners. For part-time students, the Research Dissertation must be submitted by the end of the second academic year of registration for the programme. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: No Formal Written Examination. Requirements for Supplemental Examination: No Supplemental Examination. [Top of page] CS6301 Design of Cyber-Physical Systems Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Min 5, Max 30. Pre-requisite(s): None Co-requisite(s): CS6321, CS6406 Teaching Method(s): 24 x 1hr(s) Lectures; 10 x 1hr(s) Tutorials. Module Co-ordinator: Prof Gregory Provan, Department of Computer Science. Lecturer(s): Staff, Department of Computer Science, (visiting lecturer, Dr. Alie El-Din Mady). Module Objective: Introduce model-based design methodology for real-world hardware/software systems (Cyber-Physical Systems). Module Content: Model-based design introduction (modelling and simulation, value of models in development process); introduction to modelling and systems control (model types, modelling techniques, basic model tuning); control modelling (control theory, system structure modelling, component modelling: plant, software, hardware); model testing (design of experiments, Model-In-the-Loop (MIL), Hardware-In-the-Loop (HIL)); hardware/software modelling tool chain (model integration challenges, state-of-the-art exploration). Learning Outcomes: On successful completion of this module, students should be able to:?Identify system component models based on requirements.?Build mathematical models for hardware/software components in a system.?Connect component models to create complex systems.?Follow a process of refinement towards accurate models.?Design of experiment to test/validate the modelled system against the requirements. Assessment: Total Marks 100: Continuous Assessment 100 marks (Laboratory Assignments (40 marks), 1 x End of Module Examination (60 marks)). Compulsory Elements: Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: No Formal Written Examination. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) (corresponding to End of Module Examination) to be taken in Autumn 2018. Marks in passed element(s) of Continuous Assessment are carried forward, Failed element(s) of Continuous Assessment must be repeated (as specified by the Module Coordinator). [Top of page] CS6311 Mobile Network Protocols Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Min 5, Max 25. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 6 x 2hr(s) Practicals. Module Co-ordinator: Lecturer(s): Prof Cormac Sreenan, Department of Computer Science; Staff, Department of Computer Science. Module Objective: To teach students the fundamentals of wireless communication and how to design mobile protocols. Module Content: History of radio communication, radio spectrum and licencing. Introduction to fundamentals of wireless including signal propagation, path loss, fading, antennas and modulation. Network architectures, including cellular. Medium access control, including contention-based, scheduled, and polled. Case study: IEEE 802.11 (WiFi). Mobility management, including Mobile IP and IPv6 mobility support. Impact of wireless on transport layer, specifically TCP. Novel protocols, especially in the context of ad-hoc networks and sensor/mesh networks. Learning Outcomes: On successful completion of this module, students should be able to:?Explain the use of radio spectrum and the impact of physical characteristics on wireless communication.?Apply an understanding of wireless fundamentals to the design of network protocols.?Compare and contrast alternative approaches to medium access control and mobility management.?Describe why TCP performs poorly over wireless links and present solutions.?Analyse the behaviour of wireless communication in a laboratory environment. Assessment: Total Marks 100: Continuous Assessment 100 marks (1 x Mid-Term Examination 35 marks, I x End of Module Examination 35 marks; 5 x Laboratory Assignments, 3 marks each; 1 Survey Paper, 15 marks). Compulsory Elements: Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: No Formal Written Examination. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) (corresponding to Mid-Term Examination and End of Module Examination) to be taken in Autumn 2018. Marks in passed element(s) of Continuous Assessment are carried forward, Failed element(s) of Continuous Assessment must be repeated (as specified by the Module Coordinator). [Top of page] CS6312 Mobile Devices and Systems Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Min 5. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 10 x 1hr(s) Practicals. Module Co-ordinator: Dr Dan Emanoil Grigoras, Department of Computer Science. Lecturer(s): Dr Dan Emanoil Grigoras, Department of Computer Science. Module Objective: Give the students a thorough presentation of the mobile devices platforms: hardware including networking technologies, operating systems, programming. Module Content: Understanding the features of mobile devices is a key aspect of their effective use. We will analyse hardware resource management, power saving strategies, then operating systems for sensors such as Tiny OS, Mantis, Windows Mobile, Symbian OS. Programming applications for mobile devices will be taught using Java ME, CLDC and MIDP. Bluetooth and IEEE 802.11 will be discussed as networking enabling technologies. Learning Outcomes: On successful completion of this module, students should be able to:?Analyse and design mobile devices architecture and scarce resources management, especially battery power?Analyse mobile operating systems, the process/thread/active object models and management?Use MIDlet programming model and programme mobile applications?Use Bluetooth and IEEE 802.11 technologies for networking. Assessment: Total Marks 100: Continuous Assessment 100 marks (1 x Mid-Term Examination 30 marks, I x End of Module Examination 30 marks; 10 x Lab Assignments, 3.5 marks each; 1 Paper Review, 5 marks). Compulsory Elements: Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: No Formal Written Examination. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) (corresponding to Mid-Term Examination and End of Module Examination) to be taken in Autumn 2018. Marks in passed element(s) of Continuous Assessment are carried forward, Failed element(s) of Continuous Assessment must be repeated (as specified by the Module Coordinator). [Top of page] CS6313 Services and Mobile Middleware Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Min 5. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 10 x 1hr(s) Practicals (using mobile equipment - laptops, PDAs, smart phones, Bluetooth printer, access points.). Module Co-ordinator: Dr Dan Emanoil Grigoras, Department of Computer Science. Lecturer(s): Dr Dan Emanoil Grigoras, Department of Computer Science. Module Objective: Equip the students with the knowledge and the skills required to set up and manage mobile networks, deploy services and design service-oriented mobile applications. Module Content: Students will learn different mobile networks architecture, infrastructure-based, nomadic and hybrid, how to set up and manage IP-based and non-IP mobile networks, deploy and use basic services such as DHCP and DNS. The mobile middleware services of naming, discovery, routing, event notification and context awareness will be presented and analysed. Service-oriented mobile applications will be then introduced. Learning Outcomes: On successful completion of this module, students should be able to:?Analyse and design mobile networks (set up and management - infrastructure, nomadic and hybrid modes)?Display knowledge and skills related to mobile middleware services?Display programming skills regarding service-oriented mobile applications design?Monitor performance aspects of mobile services. Assessment: Total Marks 100: Continuous Assessment 100 marks (1 x Mid-Term Examination 30 marks, I x End of Module Examination 30 marks; 10 x Lab Assignments, 3.5 marks each; 1 Paper Review, 5 marks). Compulsory Elements: Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: No Formal Written Examination. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) (corresponding to Mid-Term Examination and End of Term Examination) to be taken in Autumn 2018. Marks in passed element(s) of Continuous Assessment are carried forward, Failed element(s) of Continuous Assessment must be repeated (as specified by the Module Coordinator). [Top of page] CS6314 Mobile Applications Design Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Min 5. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 12 x 1hr(s) Practicals. Module Co-ordinator: Dr Marius-Sabin Tabirca, Department of Computer Science. Lecturer(s): Dr Marius-Sabin Tabirca, Department of Computer Science. Module Objective: Develop understanding of the principles, techniques and tools to design mobile applications. Module Content: Develop understanding of the main technologies used to design and develop mobile application on various types of existing platforms. Acquire a range of skills for mobile software development in mobile and ubiquitous computing using industry standards. Learning Outcomes: On successful completion of this module, students should be able to:?Acquire a comprehensive knowledge of the techniques used in the mobile applications.?Understand the industry standards in the area of mobile applications.?Understand the main principles of designing mobile applications.?Apply these techniques and standards to design and produce mobile applications.?Evaluate the effectiveness of these techniques and standards in a variety of situations. Assessment: Total Marks 100: Continuous Assessment 100 marks (1 x Mid-Term Lab Test, 25 marks; 1 x End of Module Examination, 25 marks; 2 x Assignments, 25 marks each). Compulsory Elements: Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Where work is submitted up to and including 7 days late, 5% of the total marks available shall be deducted from the mark achieved. Where work is submitted up to and including 14 days late, 10% of the total marks available shall be deducted from the mark achieved. Work submitted 15 days late or more shall be assigned a mark of zero. Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: No Formal Written Examination. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) (corresponding to End of Module Examination) to be taken in Autumn 2018. Marks in passed element(s) of Continuous Assessment are carried forward, Failed element(s) of Continuous Assessment must be repeated (as specified by the Module Coordinator). [Top of page] CS6315 Mobile Systems Security Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Min 5. Pre-requisite(s): A basic understanding of security protocols, such as covered by CS6325 or CS4253 Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 10 x 1hr(s) Tutorials. Module Co-ordinator: Lecturer(s): Staff, Department of Computer Science. Module Objective: Introduce the student to the programming and deployment of secure mobile application systems. Module Content: Mobile and Wireless security protocols. Virtual private networks. Protocol vulnerabilities. Identity and Authentication Services, Federated Identity. Trust Management and decentralized authorization. Mobile code security. Java security architecture and secure Java programming for mobile systems. Electronic payment/transactions for mobile systems. Learning Outcomes: On successful completion of this module, students should be able to:?test and audit existing mobile system applications for common security vulnerabilities;?configure and deploy security infrastructure for mobile systems;?program secure mobile application systems;?develop access-control policy mechanisms for mobile applications. Assessment: Total Marks 100: Continuous Assessment 100 marks (1 x Mid-Term Examination 40 marks, 1 x End of Module Examination 40 marks; 2 Assignments, 10 marks each). Compulsory Elements: Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: No Formal Written Examination. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) (corresponding to Mid-Term Examination and End of Module Examination) to be taken in Autumn 2018. Marks in passed element(s) of Continuous Assessment are carried forward, Failed element(s) of Continuous Assessment must be repeated (as specified by the Module Coordinator). [Top of page] CS6316 Cellular Network Services Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Min 5. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 12 x 1hr(s) Lectures; 4 x 2hr(s) Practicals; 12 x 1hr(s) Seminars. Module Co-ordinator: Lecturer(s): Prof Cormac Sreenan, Department of Computer Science; Staff, Department of Computer Science. Module Objective: To teach students the core elements of cellular network architecture and services. Module Content: Evolution of cellular telecommunication networks, including transition from analog to digital. Cellular architectures, frequency reuse, capacity planning. Public Switched Telephone Systems, including SS7 signalling protocol. GSM - architecture, services, protocols. 3G - architecture, services, protocols. Service design and deployment, including Integrated Multimedia Services (IMS). Network management. Next generation networks. Learning Outcomes: On successful completion of this module, students should be able to:?Explain the concept of frequency reuse in the context of cellular networks.?Determine the capacity of a cellular network.?Show how cellular networks integrate with the PSTN using SS7?Compare the 2G and 3G network architectures.?Identify the network and service elements in today's cellular systems.?Analyse cellular network performance in a laboratory environment. Assessment: Total Marks 100: Continuous Assessment 100 marks (1 x Mid-Term Examination 25 marks, 1 x End of Module Examination 25 marks; 4 x Laboratory Assignments, 5 marks each; 1 x Report, 30 marks). Compulsory Elements: Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: No Formal Written Examination. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) (corresponding to Mid-Term Examination and End of Module Examination) to be taken in Autumn 2018. Marks in passed element(s) of Continuous Assessment are carried forward, Failed element(s) of Continuous Assessment must be repeated (as specified by the Module Coordinator). [Top of page] CS6317 Multimedia Technology in Mobile Networks Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Min 5. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 12 x 1hr(s) Practicals. Module Co-ordinator: Dr Marius-Sabin Tabirca, Department of Computer Science. Lecturer(s): Dr Marius-Sabin Tabirca, Department of Computer Science. Module Objective: Develop understanding of the principles, techniques and tools for mobile multimedia systems. Module Content: Develop understanding of the novel digital media aspects of mobile, ubiquitous and pervasive computing systems. Cover the industry-standards for creating and delivering multimedia content on wireless and 3G/4G networks. Acquire a range of skills for software development in mobile and ubiquitous computing using industry-standard tools. Learning Outcomes: On successful completion of this module, students should be able to:?Acquire a comprehensive knowledge of the industry-standard tools used in the Digital Media Industry to generate Mobile Multimedia content.?Determine the correct use of these techniques and tools through a comprehensive understanding of the underlying theoretical and programming principles.?Develop good understanding of the Flash Lite technology and its potential for generating and scripting creative Mobile Multimedia content.?Develop good understanding of the iPhone SDK technology and its potential for developing Mobile Multimedia applications for iPhones and ITouch.?Evaluate the effectiveness of these techniques and tools in a variety of situations.?Apply these techniques and tools to produce digital media projects from image, video and sound processing to gaming.?Design, plan and communicate the results of, digital media projects. Assessment: Total Marks 100: Continuous Assessment 100 marks (1 x Mid-Term Lab Test, 25 marks; 1 x End of Module Examination, 25 marks; 2 x Assignments, 25 marks each). Compulsory Elements: Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: No Formal Written Examination. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) (corresponding to Mid-Term Examination and End of Module Examination) to be taken in Autumn 2018. Marks in passed element(s) of Continuous Assessment are carried forward, Failed element(s) of Continuous Assessment must be repeated (as specified by the Module Coordinator). [Top of page] CS6320 Formal Methods for Distributed Systems Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Min 5. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 10 x 1hr(s) Practicals (Tutorials and Laboratory Sessions). Module Co-ordinator: Dr John Herbert, Department of Computer Science. Lecturer(s): Dr John Herbert, Department of Computer Science. Module Objective: To introduce students to the concepts and techniques of Formal Methods and how they are applied in practice Module Content: Overview of standard mathematical logics including Predicate Calculus, Higher-Order Logic and Temporal Logic. Semantics and Proof. Soundness and Completeness. Formal specification of functional requirements of systems. Formal specification of network communication protocols. Safety and Liveness properties. Tool-based formal analysis and verification of communication protocols. Specification and verification of programs. Learning Outcomes: On successful completion of this module, students should be able to:?Explain the underlying concepts of mathematical logic, correctness and proof;?Specify properties of simple systems using higher-order logic and temporal logic;?Specify a communications protocol;?Understand safety and liveness properties;?Verify, using an automated tool, basic communications protocols;?Explain how code can be specified and formally verified. Assessment: Total Marks 100: Continuous Assessment 100 marks (1 x Mid-Term Examination 40 marks, 1 x End of Module Examination 40 marks; 2 x In-class assignments, 10 marks each). Compulsory Elements: Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: No Formal Written Examination. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) (corresponding to Mid-Term Examination and End of Module Examination) to be taken in Autumn 2018. Marks in passed element(s) of Continuous Assessment are carried forward, Failed element(s) of Continuous Assessment must be repeated (as specified by the Module Coordinator). [Top of page] CS6321 Model-Based Software Development Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Min 5. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 10 x 1hr(s) Practicals (Laboratory Sessions). Module Co-ordinator: Dr John Herbert, Department of Computer Science. Lecturer(s): Dr John Herbert, Department of Computer Science. Module Objective: To introduce students to model-based software development, and in particular the use of the Universal Modelling Language(UML), and its real-time extensions. Module Content: The most important diagramatic elements of the Universal Modelling Language (UML) notation and their roles in software system modelling. A UML based software development process. Special notation and tools for using UML in reactive real-time applications. Learning Outcomes: On successful completion of this module, students should be able to:?Use the various UML diagrams?Rewrite the UML for modelling different stages and aspects of systems?Follow a full software development cycle using a UML-based process?Use a standard commercial UML tool to develop software?Use the extensions of UML for developing reactive real-time systems. Assessment: Total Marks 100: Continuous Assessment 100 marks (1 x Mid-Term Examination 40 marks, 1 x End of Module Examination 40 marks; 2 x in-class assignments, 10 marks each). Compulsory Elements: Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: No Formal Written Examination. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) (corresponding to Mid-Term Examination and End of Module Examination) to be taken in Autumn 2018. Marks in passed element(s) of Continuous Assessment are carried forward, Failed element(s) of Continuous Assessment must be repeated (as specified by the Module Coordinator). [Top of page] CS6322 Optimisation Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Min 5. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 10 x 1hr(s) Practicals (Laboratory Sessions). Module Co-ordinator: Dr Steven David Prestwich, Department of Computer Science. Lecturer(s): Dr Steven David Prestwich, Department of Computer Science. Module Objective: This module will cover a range of modern optimisation methods, and relate them to network optimisation. Module Content: The module will cover optimisation techniques from several fields, focusing on applications problems from the area of networking, design, logistics, etc. From Operations Research it takes linear programming, mixed integer programming, and dynamic programming. From Artificial Intelligence it takes constraint programming. From Computer Science it takes greedy algorithms. From the field of Metaheuristics it takes local search and evolutionary computation. Learning Outcomes: On successful completion of this module, students should be able to:?model and solve optimisation problems as linear programming problems?model and solve optimisation problems as integer programming problems?model and solve optimisation problems as dynamic programming problems?model and solve optimisation problems as constraint programming problems?solve optimisation problems by metaheuristics?decide which methods are most appropriate for a network or other optimisation problem, in particular by greedy or specialised networking algorithms. Assessment: Total Marks 100: Continuous Assessment 100 marks (1 x Mid-Term Examination 40 marks, 1 x End of Module Examination 40 marks; 2 x Assignments, 10 marks each). Compulsory Elements: Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: No Formal Written Examination. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) (corresponding to Mid-Term Examination and End of Module Examination) to be taken in Autumn 2018. Marks in passed element(s) of Continuous Assessment are carried forward, Failed element(s) of Continuous Assessment must be repeated (as specified by the Module Coordinator). [Top of page] CS6323 Analysis of Networks and Complex Systems Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Min 5. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 8 x 1hr(s) Practicals (Laboratory Sessions). Module Co-ordinator: Prof Gregory Provan, Department of Computer Science. Lecturer(s): Prof Gregory Provan, Department of Computer Science. Module Objective: Analyse properties of complex network-based systems Module Content: The topology of a network is one of the primary determinants of the performance of the network. We will examine generic topological properties of complex network-based systems, and the impact of such topologies on a variety of network performance parameters. Examples will range from the WWW to computer networks. Performance properties will include network throughput, fault tolerance, and a range of Quality-of-Service parameters. Learning Outcomes: On successful completion of this module, students should be able to:?Adopt and use the topological design principles of complex networks?Use mathematical properties for principled network design?Analyse key network properties, such as fault tolerance and quality of service?Apply design and analysis principles to important network applications, such as WWW, LANs, etc. Assessment: Total Marks 100: Continuous Assessment 100 marks (1 x Mid-Term Examination 40 marks, 1 x End of Module Examination 40 marks; 2 x Assignments, 10 marks each). Compulsory Elements: Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: No Formal Written Examination. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) (corresponding to Mid-Term Examination and End of Module Examination) to be taken in Autumn 2018. Marks in passed element(s) of Continuous Assessment are carried forward, Failed element(s) of Continuous Assessment must be repeated (as specified by the Module Coordinator). [Top of page] CS6325 Network Security Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Min 5. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 12 x 1hr(s) Practicals (Tutorials and Laboratories). Module Co-ordinator: Dr Paolo Palmieri, Department of Computer Science. Lecturer(s): Dr Paolo Palmieri, Department of Computer Science. Module Objective: Introduce the student to the protocols and techniques for securing network communication. Module Content: Introduction to Ciphers. Symmetric key cryptography. Authentication, Secrecy and Integrity. Hash functions and their application. Implementation issues and Cryptographic APIs. Identification Techniques. Authentication and Key Exchange Protocols and their implementation. Attacks on security Protocols. Public Key Certificates. Digital Signatures. Public Key Infrastructure. Learning Outcomes: On successful completion of this module, students should be able to:?apply cryptography in the development of basic secure networked systems;?design and formally analyse classes of cryptographic authentication protocol;?compromise network systems by exploiting common vulnerabilities;?use cryptographic APIs to provide confidentiality, integrity and authentication across networked application systems. Assessment: Total Marks 100: Continuous Assessment 100 marks (1 x Mid-Term Examination 40 marks, 1 x End of Module Examination 40 marks; 2 x Assignments, 10 marks each). Compulsory Elements: Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: No Formal Written Examination. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) (corresponding to Mid-Term Examination and End of Module Examination) to be taken in Autumn 2018. Marks in passed element(s) of Continuous Assessment are carried forward, Failed element(s) of Continuous Assessment must be repeated (as specified by the Module Coordinator). [Top of page] CS6400 Dissertation in Computing Science Credit Weighting: 30 Semester(s): Semester 3. No. of Students: Min 5. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): Directed Study (4 months x Directed Reading; Individual Research/Development; Computer Analysis; Presentation of Findings). Module Co-ordinator: Lecturer(s): Staff, Department of Computer Science. Module Objective: To carry out independent research/development on a topic in Computer Science related to the taught Masters programme for which the student is registered. Module Content: Each candidate is required to complete a dissertation based on individual research/development in Computer Science, under the supervision of a staff member. Results have to be reported in a typed and bound dissertation, which must include (i) a literature survey of the field, (ii) analysis and design, (iii) simulation/experimental results and (iv) a discussion and evaluation section. Learning Outcomes: On successful completion of this module, students should be able to:?Show enhanced expertise in a chosen area;?Select and apply appropriate tools and techniques to solve a research/development problem;?Independently design, execute and interpret data associated with independent research/development;?Provide a comprehensive evaluation and discussion on an independent body of research/development. Assessment: Total Marks 600: Continuous Assessment 600 marks (Research Dissertation). Compulsory Elements: Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: No Formal Written Examination. Requirements for Supplemental Examination: No Supplemental Examination. [Top of page] CS6402 Virtualisation Technologies Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Min 10. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 5 x 2hr(s) Practicals. Module Co-ordinator: Lecturer(s): Staff, Department of Computer Science. Module Objective: To introduce students to the principles of virtualisation and their applications in key computing technologies. Module Content: Core concepts and principles of resource virtualisation. Resource management in computers and networks. Operating system virtualisation, including VMware. Storage virtualisation, including storage area networks. Network virtualisation. Application virualisation. Business aspects related to cost and energy efficiencies from virtualisation. "GreenIT" issues. Learning Outcomes: On successful completion of this module, students should be able to:? Explain the concept of resource virtualisation and how it is applied in modern computer systems.?Evaluate the business benefits of virtualisation in terms of equipment costs and energy savings.?Compare alternative approaches to virtualisation.?Configure and evaluate a virtualised computing system in a laboratory environment?Critique an enterprise's virtualisation policies. Assessment: Total Marks 100: Continuous Assessment 100 marks (1 x Mid-Term Examination 40 marks, 1 x End of Module Examination 40 marks; 5 x laboratory assignments, 4 marks each). Compulsory Elements: Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: No Formal Written Examination. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) (corresponding to Mid-Term Examination and End of Module Examination) to be taken in Autumn 2018. Marks in passed element(s) of Continuous Assessment are carried forward, Failed element(s) of Continuous Assessment must be repeated (as specified by the Module Coordinator). [Top of page] CS6403 Case Studies in Computing Entrepreneurship Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Min 10. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 6 x 2hr(s) Tutorials; 6 x 1hr(s) Seminars. Module Co-ordinator: Dr John Herbert, Department of Computer Science. Lecturer(s): Dr John Herbert, Department of Computer Science. Module Objective: Students will gain an understanding of the main issues involved in identifying and developing entrepreneurial opportunities in the high-tech computing sector. Module Content: A combination of lectures covering general principles and seminars from invited speakers who have successfully initiated high-tech startups and have brought them to a satisfactory conclusion. Learning Outcomes: On successful completion of this module, students should be able to:?Apply tools and techniques to survey and identify promising opportunities.?Understand the main issues in initiating a high-tech venture.?Know in principle how to develop and grow such a high-tech venture in a global marketplace.?Critique a business plan for a software-based enterprise?Understand the main issues in initiating a high-tech venture. Assessment: Total Marks 100: Continuous Assessment 100 marks (End of Module Examination, 50 marks; 6 x seminar questionnaires, 5 marks each; 1 x project, 20 marks). Compulsory Elements: Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: No Formal Written Examination. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) (Corresponding to End of Module Examination) to be taken in Autumn 2018. Marks in passed element(s) of Continuous Assessment are carried forward, Failed element(s) of Continuous Assessment must be repeated (as specified by the Module Coordinator). [Top of page] CS6405 Datamining Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Min 10. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 10 x 1hr(s) Practicals. Module Co-ordinator: Dr Marc Van Dongen, Department of Computer Science. Lecturer(s): Dr Marc Van Dongen, Department of Computer Science. Module Objective: To give students a thorough presentation of the most commonly used data mining techniques, to show how to properly prepare data-sets, when/how to use the appropriate data mining methods, and appropriately interpret and validate hypotheses. Module Content: Applications and principles of data mining; Knowledge Representation; Rule Learning; Statistical Modelling; Decision Tree Induction; Association Rule Mining; Linear Models; Lazy Learning; Clustering; Evaluating Hypotheses; Cost-Sensitive Learning; Input Transformations; Boosting; Using Unlabelled Data; Extensions; Applications; Tools. Learning Outcomes: On successful completion of this module, students should be able to:?Understand the differences between the major data mining tasks?Identify which data mining task and which algorithm is the most appropriate for a given data mining project, taking into account both the nature of the data to be mined and the goals of the user of the discovered knowledge?Use a number of standard data mining tools?Evaluate the quality of discovered knowledge, taking into account the requirements of the data mining task being solved and the business goals of the user?Recognise how to take into account both the nature of the data to be mined and the goals of the user of the discovered knowledge. Assessment: Total Marks 100: Continuous Assessment 100 marks (End of Module Examination, 50 marks; 2 x Projects, 25 marks each). Compulsory Elements: Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: No Formal Written Examination. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) (corresponding to End of Module Examination) to be taken in Autumn 2018. Marks in passed element(s) of Continuous Assessment are carried forward, Failed element(s) of Continuous Assessment must be repeated (as specified by the Module Coordinator). [Top of page] CS6406 Large-Scale Application Development and Integration 1 Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Min 5, Max 30. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 10 x 1hr(s) Practicals. Module Co-ordinator: Prof Gregory Provan, Department of Computer Science. Lecturer(s): Prof Gregory Provan, Department of Computer Science. Module Objective: Equip students with concepts and skills to design and develop high-quality large-scale complex software systems for either a research or an industrial context. Module Content: Concepts, methodologies and technologies underpinning the design and development of large, leading-edge software applications. Engineering high-quality software and management of the software development process. Large-scale software development and requirements engineering. Architectures and technologies for high-throughput distributed software. Software process models and project management. Learning Outcomes: On successful completion of this module, students should be able to:?Design complex, leading-edge software applications;?Implement applications to best industry standards;?Engineer software for usability;?Manage and plan large software development efforts;?Engineer software for performance. Assessment: Total Marks 100: Continuous Assessment 100 marks (1 x Mid-Term Examination 30 marks, 1 x End of Term Examination, 30 marks; programming/written assignment, 40 marks). Compulsory Elements: Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: No Formal Written Examination. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) (which incorporates assessment of both in-module tests and other continuous assessment) to be taken in Autumn 2018. [Top of page] CS6407 Large-Scale Application Development and Integration 2 Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Min 5, Max 30. Pre-requisite(s): None Co-requisite(s): CS6406 Teaching Method(s): 24 x 1hr(s) Lectures; 10 x 1hr(s) Practicals. Module Co-ordinator: Prof Gregory Provan, Department of Computer Science. Lecturer(s): Prof Gregory Provan, Department of Computer Science. Module Objective: Equip students with concepts and skills to design and develop high-quality large-scale complex software systems for either a research or an industrial context. Module Content: Concepts, methodologies and technologies underpinning the development and testing of large, leading-edge software applications. Engineering high-quality software and management of the software development process. Large-scale software development. Software reliability and performance. Software integration tools and middleware technologies. Code refactoring. Testing. Learning Outcomes: On successful completion of this module, students should be able to:?Design complex, leading-edge software applications;?Implement applications to best industry standards;?Implement detailed test plans for large software teams;?Engineer software for reliability and reusability;?Engineer software for performance. Assessment: Total Marks 100: Continuous Assessment 100 marks (1 x Mid-Term Examination 30 marks, 1 x End of Term Examination, 30 marks; programming/written assignment, 40 marks). Compulsory Elements: Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: No Formal Written Examination. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) (which incorporates assessment of both in-module tests and other continuous assessment) to be taken in Autumn 2018. [Top of page] CS6408 Database Technology Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Min 5, Max 30. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 4 x 2hr(s) Practicals. Module Co-ordinator: Mr Humphrey Sorensen, Department of Computer Science. Lecturer(s): Mr Humphrey Sorensen, Department of Computer Science. Module Objective: Effective collection, analysis, and maintenance of data are necessary in order to achieve rapid progress in almost all disciplines of science and engineering. This often requires the installation of a database management system, sometimes on a special server. This module examines the architecture and operation of such systems, examining both the hardware and software techniques that are necessary for the efficient implementation of modern database systems. Module Content: The potential topics covered in class include processing and optimization of declarative queries, transaction management for concurrency and recovery, database programming and distributed database systems. Learning Outcomes: On successful completion of this module, students should be able to:?Install a database management system and configure it for different user needs;?Provide a database with self-tuning and self-healing capabilities;?Define and implement distributed database systems;?Extend database systems with automated crash-recovery techniques;?Develop software, using native languages and middleware. Assessment: Total Marks 100: Continuous Assessment 100 marks (1 x Mid-Term Examination, 40 marks; 1 x End-of-Term Examination, 40 marks; 4 x assignments, 5 marks each). Compulsory Elements: Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: No Formal Written Examination. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) (which incorporates assessment of both in-module tests and other continuous assessment) to be taken in Autumn 2018. [Top of page] CS6409 Information Storage and Retrieval Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Min 5, Max 30. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 4 x 2hr(s) Practicals. Module Co-ordinator: Mr Humphrey Sorensen, Department of Computer Science. Lecturer(s): Mr Humphrey Sorensen, Department of Computer Science. Module Objective: Much of the information stored on computers, or on the Web, is not well-structured and therefore unsuited to traditional database management systems. Such information might include free text or multimedia (images, audio, video) and is often massive in scale. This module examines how systems can be constructed for such requirements. It examines both the storage technology and software algorithms employed for the retrieval of stored artefacts. Module Content: The potential topics covered in class include storage of unstructured - or semi-structured - data, indexing of digital artefacts, query construction and evaluation, and methods of measuring search accuracy. Learning Outcomes: On successful completion of this module, students should be able to:?Understand the requirements of unstructured data storage;?Understand query requirements for unstructured data;?Develop algorithms for query evaluation across different media;?Evaluate query accuracy. Assessment: Total Marks 100: Continuous Assessment 100 marks (1 x Mid-Term Examination, 40 marks; 1 x End-of-Term Examination, 40 marks; 4 x assignments, 5 marks each). Compulsory Elements: Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: No Formal Written Examination. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) (which incorporates assessment of both in-module tests and other continuous assessment) to be taken in Autumn 2018. [Top of page] CS6410 Project Development Skills Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Min 5, Max 30. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 16 x 1hr(s) Lectures; 8 x 1hr(s) Seminars; 5 x 1hr(s) Practicals. Module Co-ordinator: Dr Ahmed Zahran, Department of Computer Science. Lecturer(s): Dr Ahmed Zahran, Department of Computer Science. Module Objective: Provide basic skills necessary to carry out an independent research/development project in Computer Science Module Content: Research/development methods. Overview of quantitative and qualitative research/development methodologies. Proof, refutation and experimentation. Statistics and metrics in Computer Science. Discrete event simulation, performance evaluation. Data analysis. Rapid prototyping tools. Literature review. Technical writing and presentation. Document preparation and typesetting. Project planning. Learning Outcomes: On successful completion of this module, students should be able to:?design and implement instrument systems for the purpose of gathering and processing data;?analyse experimental data; conduct a critical evaluation of current research/development in their project area;?communicate ideas and conclusions both written and orally,?write a literature review and prepare a research/development proposal. Assessment: Total Marks 100: Continuous Assessment 100 marks (4 x Assignments, 12.5 marks each; Literature Survey and Project Proposal, 50 marks). Compulsory Elements: Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: No Formal Written Examination. Requirements for Supplemental Examination: No Supplemental Examination. [Top of page] CS6500 Dissertation in Data Analytics Credit Weighting: 30 Semester(s): Semester 3. No. of Students: Min 5. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): Directed Study ( 4 months x Directed Reading; Individual Research; Computer Analysis; Presentation of Findings). Module Co-ordinator: Prof Barry O'Sullivan, Department of Computer Science. Lecturer(s): Staff, Department of Computer Science. Module Objective: To carry out independent research on a topic in Computer Science related to the taught Masters programme for which the student is registered. Module Content: Each candidate is required to complete a dissertation based on individual research in Data Analytics and Computer Science under the supervision of a staff member. Results have to be reported in a typed and bound dissertation which must include (i) a literature survey of the field, (ii) analysis and design, (iii) simulation/experimental results and, (iv) a discussion and evaluation section. Learning Outcomes: On successful completion of this module, students should be able to:?Show enhanced expertise in the area of Data Science and Analytics;?Select and apply appropriate tools and techniques to solve a research problem;?Independently design, execute and interpret data associated with independent research;?Provide a comprehensive evaluation and discussion on an independent body of scientific research. Assessment: Total Marks 600: Continuous Assessment 600 marks (Minor Research Dissertation). Compulsory Elements: Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: No Formal Written Examination. Requirements for Supplemental Examination: No Supplemental Examination. [Top of page] CS6501 Programming for Bioscientists I Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Min 20. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 10 x 1hr(s) Practicals. Module Co-ordinator: Dr Kieran Herley, Department of Computer Science. Lecturer(s): Dr Kieran Herley, Department of Computer Science. Module Objective: Introduce the fundamental principles of object-oriented programming using the Python language. Module Content: Variables, expressions and statements; functions, conditionals and recursion; fruitful functions and iteration; strings and lists; tuples and dictionaries; files and exceptions; classes and objects. Learning Outcomes: On successful completion of this module, students should be able to:?Demonstrate the basic principles of object-oriented programming?Write computer programs of moderate complexity?Incorporate third-party code into their own programs. Assessment: Total Marks 100: Formal Written Examination 60 marks; Continuous Assessment 40 marks (8 laboratory assignments, each worth 5 marks). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Winter 2017. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS6502 Programming for Bioscientists II Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Min 10. Pre-requisite(s): CS6501 Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 10 x 1hr(s) Practicals. Module Co-ordinator: Prof Michel P Schellekens, Department of Computer Science. Lecturer(s): Prof Michel P Schellekens, Department of Computer Science. Module Objective: Provide conceptual and practical coverage of intermediate-level computer programming, using the Python language, with particular emphasis on applications to genomics Module Content: Creating and using classes and objects; sorting and searching; trees, graphs, and associated algorithms; dynamic programming; regular expressions; elementary notions of time complexity; implementation of genomic algorithms (including those for optimal sequence alignment and random sequence generation with given element probabilities). Learning Outcomes: On successful completion of this module, students should be able to:?Design and implement algorithms of moderate complexity?Comprehend several standard bioinformatics algorithms from the literature?Develop computational solutions to simple problems in bioinformatics. Assessment: Total Marks 100: Formal Written Examination 60 marks; Continuous Assessment 40 marks (5 laboratory assignments, 8 marks each). Compulsory Elements: Formal Written Examination; Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: 1 x 1.5 hr(s) paper(s) to be taken in Summer 2018. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS6503 Introduction to Relational Databases Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Max 200. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 10 x 2hr(s) Practicals. Module Co-ordinator: Dr Kieran Herley, Department of Computer Science. Lecturer(s): Dr Kieran Herley, Department of Computer Science. Module Objective: Students will learn the fundamental practices of relational database systems: designing databases for practical applications, construction of such databases and manipulation of the data using different interfaces. Module Content: Fundamentals of relational databases; the SQL database query language. Learning Outcomes: On successful completion of this module, students should be able to:?Set up, populate and manipulate simple relational databases;?Formulate SQL queries to extract information from databases;?Design simple databases. Assessment: Total Marks 100: Continuous Assessment 100 marks (2 x Mid-Module Examinations 15 marks each, 1 x End-of-Module Examination 70 marks). Compulsory Elements: Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: No Formal Written Examination. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) (corresponding to Mid-Term Examinations and End of Module Examination) to be taken in Autumn 2018. [Top of page] CS6504 Digital Video Project Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Min 1, Max 10. Pre-requisite(s): None Co-requisite(s): CS6104 Teaching Method(s): 5month(s) Directed Study (Directed reading, individual research). Module Co-ordinator: Dr Ian Pitt, Department of Computer Science. Lecturer(s): Dr Ian Pitt, Department of Computer Science. Module Objective: Apply and develop the skills taught in CS6104, i.e., develop understanding of the planning, production and post-production of digital video; application and evaluation of industry-standard tools in capturing, processing and packaging digital video. Module Content: The student undertakes a digital video project, approved by the Department of Computer Science, which builds the skills that have been introduced in CS6104. Learning Outcomes: On successful completion of this module, students should be able to:?plan a substantial video project, demonstrating appropriate use of storyboarding and other techniques?make informed decisions regarding choice of equipment, software tools, formats, location, camera-angles, lighting, etc., when capturing material?choose and employ appropriate tools for editing and post-production?package the finished material suitably for the chosen delivery media/platforms. Assessment: Total Marks 100: Continuous Assessment 100 marks (The project consists of a written report and a delivered digital video project). Compulsory Elements: Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: No Formal Written Examination. Requirements for Supplemental Examination: Marks in passed element(s) of Continuous Assessment are carried forward, Failed element(s) of Continuous Assessment must be repeated (as directed by the Module Coordinator). [Top of page] CS6505 Database Design and Administration Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Max 120. Pre-requisite(s): CS6503 Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 10hr(s) Practicals. Module Co-ordinator: Mr Humphrey Sorensen, Department of Computer Science. Lecturer(s): Mr Humphrey Sorensen, Department of Computer Science. Module Objective: Students will learn: analysis requirements for various types of application for managing persistent data and how to design, implement and administer databases to meet these requirements; the remainder of the SQL concepts and constructs not covered in the prerequisite module. Module Content: Database Management Systems; DBMS storage structures. Relational algebra and relational calculus; SQL; query optimisation; views. Database Design: UML Class Diagrams and Entity-Relationship Diagrams; UML Sequence Diagrams; conceptual, logical and physical database design; data integrity; functional dependencies and normal forms. Learning Outcomes: On successful completion of this module, students should be able to:?demonstrate a working knowledge of relational database theory?demonstrate a detailed knowledge of the SQL language and SQL-based database management systems?demonstrate an understanding of the principles and practices of relational database design and administration. Assessment: Total Marks 100: Continuous Assessment 100 marks (Continuous Assessment 100 marks (1 x Mid-Term Examination 40 marks, 1 x End-of-Module Examination 40 marks; 5 x Laboratory Assignments 4 marks each)). Compulsory Elements: Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: No Formal Written Examination. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) (corresponding to Mid-Term Examination and End of Module Examination) to be taken in Autumn 2018. Marks in passed element(s) of Continuous Assessment are carried forward, Failed element(s) of Continuous Assessment must be repeated. [Top of page] CS6506 Programming in Python Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Min 10. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 10 x 1hr(s) Practicals. Module Co-ordinator: Dr Kieran Herley, Department of Computer Science. Lecturer(s): Dr Kieran Herley, Department of Computer Science. Module Objective: Introduce the fundamental principles of object-oriented programming using the Python language. Module Content: Variables, expressions and statements; functions, conditionals and recursion; fruitful functions and iteration; strings and lists; tuples and dictionaries; files and exceptions; classes and objects. Learning Outcomes: On successful completion of this module, students should be able to:?Demonstrate the basic principles of object-oriented programming;?Write computer programs of moderate complexity;?Incorporate third-party code into their own programs. Assessment: Total Marks 100: Continuous Assessment 100 marks (1 x End of Module Examination 60 marks; 8 laboratory assignments, each worth 5 marks). Compulsory Elements: Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: No Formal Written Examination. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) (corresponding to End of Module Examination) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS6507 Programming in Python with Data Science Applications Credit Weighting: 5 Semester(s): Semester 2. No. of Students: Min 10. Pre-requisite(s): None Co-requisite(s): CS6506 Teaching Method(s): 24 x 1hr(s) Lectures; 10 x 1hr(s) Practicals. Module Co-ordinator: Dr Kieran Herley, Department of Computer Science. Lecturer(s): Dr Kieran Herley, Department of Computer Science. Module Objective: Provide conceptual and practical coverage of intermediate-level computer programming, using the Python language, with particular emphasis on applications to data science and analytics. Module Content: Creating and using classes and objects; sorting and searching; trees, graphs, and associated algorithms; dynamic programming; regular expressions; elementary notions of time complexity; implementation of data science algorithms, such as those for processing large collections of data like MapReduce (filtering, sorting, reduction operations). Learning Outcomes: On successful completion of this module, students should be able to:?Design and implement algorithms of moderate complexity;?Comprehend several standard data science algorithms from the literature;?Develop computational solutions to simple problems in data science. Assessment: Total Marks 100: Continuous Assessment 100 marks (1 x End of Module Examination 60 marks; 8 laboratory assignments, each worth 5 marks). Compulsory Elements: Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: No Formal Written Examination. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) (corresponding to End of Module Examination) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page] CS6509 Internet Computing for Data Science Credit Weighting: 5 Semester(s): Semester 1. No. of Students: Min 5. Pre-requisite(s): None Co-requisite(s): None Teaching Method(s): 24 x 1hr(s) Lectures; 5 x 2hr(s) Practicals. Module Co-ordinator: Mr Adrian O'Riordan, Department of Computer Science. Lecturer(s): Mr Adrian O'Riordan, Department of Computer Science. Module Objective: To provide students with an introduction to computer networking and the Internet. Module Content: Networking basics: history, components, packet switching, performance, architecture. Application layer protocols, including HTTP and peer-to-peer file sharing. Naming, including domain name system. Transport protocols, including TCP. Network security essentials. Learning Outcomes: On successful completion of this module, students should be able to:?Identify the layers and functions in a network architecture;?Explain the operation of key Internet protocols;?Analyse Internet traffic;?Configure networking on Linux and Windows operating systems;?Set up a simple firewall. Assessment: Total Marks 100: Continuous Assessment 100 marks (1 x Mid-Module Examination 40 marks, 1 x End-of-Module Examination 40 marks; 5 Assignments, 4 marks each). Compulsory Elements: Continuous Assessment. Penalties (for late submission of Course/Project Work etc.): Work which is submitted late shall be assigned a mark of zero (or a Fail Judgement in the case of Pass/Fail modules). Pass Standard and any Special Requirements for Passing Module: 40%. Formal Written Examination: No Formal Written Examination. Requirements for Supplemental Examination: 1 x 1.5 hr(s) paper(s) (corresponding to End of Module Examination) to be taken in Autumn 2018. The mark for Continuous Assessment is carried forward. [Top of page]