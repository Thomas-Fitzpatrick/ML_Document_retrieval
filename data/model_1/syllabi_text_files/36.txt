Module Details G51PGA Programming and Algorithms(Last Updated:03 May 2017) Year  15/16 Total Credits: 20 Level: Level 1 Target Students:  Qualifying year undergraduate students in the School of Computer Science only. This module is part of the Foundations of Computer Science theme in the School of Computer Science. Taught Semesters:SemesterAssessmentAutumn Assessed by end of Autumn Semester Prerequisites: The module is taught in C. Students who have previously taken G51PRG cannot take this module.Corequisites:  None. Summary of Content:  The module introduces basic principles of programming and algorithms. It covers fundamental programming constructs, such as types and variables, expressions, control structures and functions. The module also teaches how to design and analyse simple algorithms and data structures that allow efficient storage and manipulation of data. Finally, it familiarises students with software development methodology, including documentation, testing, debugging, and the use of software development tools, such as integrated development environments (IDEs) and version control systems. You will spend around 6 hours per week in lectures, computer classes and tutorials. Method and Frequency of Class: ActivityNumber Of WeeksNumber of sessionsDuration of a sessionLecture 11 weeks1 per week2 hours Tutorial 11 weeks1 per week1 hour Computing 11 weeks2 per week1 hour Lecture 11 weeks1 per week1 hour Activities may take place every teaching week of the Semester or only in specified weeks. It is usually specified above if an activity only takes place in some weeks of a SemesterFurther Activity Details:The weekly tutorials are for working on the module's coursework. Method of Assessment:  Assessment TypeWeightRequirementsExam 1 25 1 hr written examination Coursework 1 75 4 pieces of weekly coursework Convenor: Professor J GaribaldiDr P Lehre Education Aims:  To teach the principles of design and analysis of programs, including fundamental programming concepts, algorithms, and data structures. To give significant experience in applying this knowledge to develop programs in a suitable language, and with appropriate software development tools. Learning Outcomes:  Knowledge and Understanding: Understanding of the theory and practice of programming. Intellectual Skills: Understand and logically evaluate program requirements and specifications. Understand the complex ideas of programming solutions and relate them to particular problems. The ability to design and analyse simple algorithms and data structures. Professional Skills: The ability to read and write programs. The ability to apply appropriate software development methods and tools. Transferrable Skills: The ability to solve problems using programming; to schedule and present work, and to retrieve additional learning material. Offering School:  Computer Science Use the Back facility of your browser to return to the previous page. Search for another module Return to The University of Nottingham Welcome Page