CS110: Introduction to Computing CS110: Introduction to Computing Swami Iyer, UMass Boston, Spring 2018 Home Course Info Calendar Slides Assignments Resources Course Description and Outcomes An introduction to computer programming – the concepts involved in using a high-level language and the program development process. The goal of this course is proficiency in the design and implementation of programs of significant size and complexity. This course is quite demanding because of the length of the programming exercises assigned. This is the first course in the computer science major sequence. Prerequisites: Math 140 credits or placement; or Math 130 as co-requisite; or permission of the department. This course meets program outcomes 1a, 1c, 1d, and 4a. Students who successfully complete this course will be able to tackle computational challenges that they might encounter later in their careers. Students interested in computer science will be well-prepared to delve deeper into the field and students in science and engineering will be able to incorporate computation into their studies. Instructor Swami Iyer Email: siyer@cs.umb.edu Office Hours: When Where Tue Thu 10:00 AM - Noon S-03-0079 Class Hours Section When Where 1-4 Tue Thu 12:30 PM - 1:45 PM S-01-0006 Discussion Sessions Starting from the second week, there will be a discussion session each week. The focus of the discussion session for a particular week (except the weeks before the exams) will be the homework assignment for that week. The goal of the homework assignment (listed as objectives atop the assignment PDF) is to make sure that you have understood the concepts covered in class and are able to use those concepts to solve solve computational problems. During the discussion session, the teaching assistant (TA) will systematically walk you through the problems in the homework assignment. You may also use this time to ask any specific questions you may have about (homework/project) assignments or about the course material in general. The discussion sessions on the week before the exams will be devoted to preparing for the exams, where the TA will review problems from the Study Guide. Section When Where TA 1 Tue 11:00 AM - 12:15 PM W-01-0048 TBD 2 Thu 11:00 AM - 12:15 PM W-01-0048 TBD 3 Tue 02:00 PM - 03:15 PM W-01-0042 TBD 4 Thu 02:00 PM - 03:15 PM W-01-0042 TBD Supplemental Instruction Sessions As part of the College of Science and Mathematics Freshman Success Program, supplemental instruction (SI) is available to all CS110 students free of charge. The SI sessions will start from the second week, and their format will be similar to that of the discussion sessions. Attending the SI sessions is optional, but you are strongly encouraged to take advantage of this opportunity and attend as many sessions as possible. Ayah Aboelela, a recent CS110 graduate, will be the SI leader this term. Ayah will run four SI sessions per week, each covering the same material. When Where TBD TBD TBD TBD TBD TBD TBD TBD Tutoring Tutoring for this course is available through the office of Math Resource Center. A student is allowed to reserve two private half-hour sessions per week. Information, instructions, and help registering, are available in the tutoring center. Walk-in tutoring can be had, subject to tutor availability at the time of visit. Text CS for All (free online text) by Christine Alvarado, Zachary Dodds, Geoff Kuenning, and Ran Libeskind-Hadas This text provides a good introduction to computer science as an intellectually rich and vibrant field rather than focusing exclusively on computer programming. The text emphasizes concepts and problem-solving over syntax and programming language features. We will refer to this text as the CFA text. Introduction to Programming in Python: An Interdisciplinary Approach by Robert Sedgewick, Kevin Wayne, and Robert Dondero This text offers an excellent introduction to computing principles, motivating each principle by examining its impact on specific applications drawn from fields ranging from materials science to genomics to astrophysics to internet commerce. We will refer to this text as the IPP text. Grading Your final grade for this course will be determined as follows: Item % of Final Grade Homework assignments (best 8 of 10) 8 Project assignments (best 6 of 7) 30 Exams (best 2 of 3) 50 Class participation 12 % Score Grade [97, 100] A+ [93, 97) A [90, 93) A- [87, 90) B+ [83, 87) B [80, 83) B- [77, 80) C+ [73, 77) C [70, 73) C- [67, 70) D+ [63, 67) D [60, 63) D- [0, 60) F To calculate your current course grade, visit the What's My Grade? website. Note: The goal of the homework assignments is to make sure that you have understood the concepts covered in class and are able to use those concepts to solve relatively straightforward computational problems. The goal of the project assignments is to make sure that you can apply the concepts learned in class to arrive at creative solutions to real-world scientific problems. The solutions to these problems will involve modest amounts of code, but will often require considerable thought. Exams 1 and 2 will take place during class periods and Exam 3 will take place during the final exam period. I will not give makeup exams. Each exam will involve multiple-choice questions (~75%) and programming questions (~25%). The exams will be closed-book. No electronic devices will be permitted. I have an amnesty plan to help those who don't do well in the first two exams for whatever reason and are willing to prove to me that they actually know their stuff. If you take all three exams earning a non-zero score in each and if the score on the third exam strictly exceeds the first two exam scores, then the Exam 3 score will be your average exam score. For example, if your scores on the three exams are 64 (D), 59 (F), and 95 (A) respectively, then your average exam score will be 95 (A). The “class participation” portion of your grade will be based on your performance on 75% of the in-class quizzes conducted using an online platform called Top Hat (see below). Top Hat We will be following a flipped classroom approach. You you will be watching the video lecture for each class offline, and the class time will be spent on reviewing the material for the class and on quizzes to gauge your understanding of the material. We will use an online platform called Top Hat to facilitate the flipped classroom model. Weekly schedule for the class will be made on Top Hat. It is your responsibilty to keep up with this schedule and do the necessary preparation before you come to each class. If you fail to do so, you will not fair well in the in-class quizzes or the course in general. Note: You will need to purchase a “Top Hat Classroom” subscription, which costs $26 for one term and $38 for a full year. If you plan on taking the follow-up course, Intermediate Computing with Data Structures (CS210), with me next semester, you will need access to Top Hat Classroom then as well. In that case, you can save $14 by getting an annual subscription. Piazza We will use Piazza as the online discussion forum for the course. If you have any general questions about the assignments, lectures, textbook, or other course materials, the most effective way to get them resolved is by posting them on Piazza. You can expect your questions to be answered by the course staff or one of your classmates. Remember that you can post anonymously, but you are anonymous only to your classmates and not to the course staff. Gradescope We will use Gradescope to grade your project assignments and exams. See the Assignments page for details on how to submit your work on Gradescope. Programming Environment We will work with Python 3. We will use IDLE, a simple integrated development environment (IDE), to create, edit, and debug our Python programs. We will use the terminal to run our programs, since the terminal supports modes of execution that are not supported by IDEs, such as input/output (IO) redirection and piping. In addition, we will use IO libraries from Princeton University for various kinds of IO, pycodestyle to automatically check the style of our programs, and some home-grown scripts to test them. You are provided with a Linux-based Virtual Machine (VM) image pre-configured with the programming environment for the course. See environment.pdf for details on how to setup the VM on your personal computer. Section 4 of the PDF gives you a quick tour of the VM. You are strongly encouraged to read through that section and familiarize yourself with the programming environment. CS Lab In order to use the computing resources of the department, and in particular, those in the CS Lab (S-3-158), you need to setup a CS account. With your CS account credentials, you can connect to our designated server (users.cs.umb.edu) remotely using SSH. With the same credentials, you can also sign into the Ubuntu Linux systems in the CS Lab. In addition, you can sign into the Windows systems in the lab with the same username and an initial password abcd_1234, which you must change the first time you sign in. Visit CS Labs Portal to register for a portal/CS account and confirm via email. If you already have a CS account, use the same username. The next step is to sign into the portal and select your courses for the term. This will initialize your CS account with course directories that you can use for your coursework. You will be notified via your UMB email once the course directories and your account are created. Policies Classroom Etiquette Come to class on time and if you have to leave early do so without causing any fuss. Remember to put your phone on silent mode (vibrate mode is no good because that is distracting as well) before class begins. Refrain from talking to each other during class and if you have any questions or concerns bring them up to me. Finally, do not eat during class  —  drinks are okay. Piazza Etiquette Clearer questions get better answers, so re-read your question before you post it. Also make sure that your question has not already been asked/answered. Follow these guidelines when you ask a question. Posts are organized in folders, so specify the right folder(s) for your post. Use the forum only for questions that can be asked in a general way, without sharing code or other assignment-related work. However, if you are stuck on a problem despite your valiant efforts to solve it, you may seek help from the course staff by posting your code privately. Avoid waiting until the midnight the assignments are due, since the course staff will stop answering questions by 9:00 PM on those days. Any post that is inappropriate or violates the academic honesty code will be deleted by the course staff. Collaboration CS110 is a challenging course that requires a significant time commitment for most students. If you fall behind, ask for help. The course staff will be happy to go through the material with you and help you work on your assignments or study for the exams. There is no excuse for plagiarism. We actively monitor every submission made to us for every assignment. We compare the submitted files both using automated systems that check for similarities in code structure and by hand. We take no pleasure in enforcing disciplinary actions, but we will continue to do so as necessary. We want to keep the playing field level for the majority of students who work very hard in this course. You may only receive help from people in the ways described below and you must acknowledge any help you receive. You are not allowed to post questions about the course or about any of our assignments on any website other than our Piazza page. If you have any questions whatsoever about what is allowed and what not, ask us. Course Staff CS110 Grads Classmates Other People Discuss Concepts With Acknowledge Collaboration With Expose Your Code/Work To View Code/Work Of Copy Code/Work From Code of Conduct For information regarding academic dishonesty policies and procedures, student conduct policies and procedures, and student grievances, see Code of Conduct. Accommodations for Students with Disabilities Section 504 of the Americans with Disabilities Act of 1990 offers guidelines for curriculum modifications and adaptations for students with documented disabilities. If applicable, students may obtain adaptation recommendations from the Ross Center for Disability Services. The student must present these recommendations and discuss them with me within a reasonable period, preferably by the end of Add/Drop period. Tips to Succeed Here are some tips to succeed in this course. Before coming to each class, watch the video for the class and read (or at least skim through) the relevant material from the lecture slides and/or the text. Right after each class, review the material for that class. Doing this diligently will help you understand/retain the concepts better. If you have any questions, don't let them fester; get them sorted out right away either on Piazza, during class, during discussion/SI session, or during office hours. Start working on the assignments early. That way if you have questions on the assignment, we can help you. Not only that, even if you just look at the problems as soon as they are assigned, your brain will work on them subconsciously (or so I am told) and you won't freak out quite as much on the night before the assignment is due. Page generated 2018-01-16 15:31:24 EST, by jemdoc. (source)