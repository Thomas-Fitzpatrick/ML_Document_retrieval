Introduction to Programming Systems Faculty of Information Technology Česká verze Encoding Skip main menu Skip to body Search: You are in section Faculty Study Courses in academic year 2017/2018 Title:Introduction to Programming SystemsCode:IZPAc.Year:2017/2018Term:WinterCurriculums:ProgrammeBranchYearDuty IT-BC-3BIT1stCompulsory Language:CzechPublic info:http://www.fit.vutbr.cz/study/courses/IZP/public/Credits:7Completion:credit+exam (written)Type ofinstruction:Hour/semLecturesSem. ExercisesLab. exercisesComp. exercisesOtherHours:39120207 ExaminationTestsExercisesLaboratoriesOtherPoints:54128026Guarantee:Kreslíková Jitka, doc. RNDr., CSc., DIFSLecturer:Kreslíková Jitka, doc. RNDr., CSc., DIFSSmrčka Aleš, Ing., Ph.D., DITS Instructor:Bruckner Tomáš, Ing., DIFSČeška Milan, RNDr., Ph.D., DITSHavlena Vojtěch, Ing., DITSHruška Martin, Ing., DITSHusa Jakub, Ing., DCSYJanků Petr, Ing., DITSLojda Jakub, Ing., DCSYMalík Viktor, Ing., DITSMatyáš Jiří, Ing., DITSOčenášek Pavel, Ing., Ph.D., DIFSPánek Richard, Ing., DCSYRozman Jaroslav, Ing., Ph.D., DITSSmrčka Aleš, Ing., Ph.D., DITSTrchalík Roman, Mgr., Ph.D., DIFSVeigend Petr, Ing., DITSWrona Jan, Ing., DCSYFaculty:Faculty of Information Technology BUTDepartment:Department of Information Systems FIT BUTFollow-ups:Algorithms (IAL), DIFS Substitute for:Algorithms and Programming (APR), DIFS Schedule:DayLessonWeekRoomStartEndLect.Gr.St.G.EndG.Monexam - 1. oprava2018-01-22E11213:0015:501BIA Monexam - 1. oprava2018-01-22E11213:0015:501BIB Monexam - 1. oprava2018-01-22E11213:0015:502BIA Monexam - 1. oprava2018-01-22E11213:0015:502BIB TueSchůzka asistentů IZP2018-01-09C22812:0012:50 TuePůlsemestrální test - hodnocení2017-11-21A11313:0013:50 Tueexam - řádná2018-01-09D10513:0015:501BIA Tueexam - řádná2018-01-09D10513:0015:501BIB Tueexam - řádná2018-01-09D10513:0015:502BIA Tueexam - řádná2018-01-09D10513:0015:502BIB Tueexam - řádná2018-01-09D020613:0015:501BIA Tueexam - řádná2018-01-09D020613:0015:501BIB Tueexam - řádná2018-01-09D020713:0015:501BIA Tueexam - řádná2018-01-09D020713:0015:501BIB Tueexam - řádná2018-01-09E11213:0015:501BIA Tueexam - řádná2018-01-09E11213:0015:501BIB Tueexam - řádná2018-01-09E10413:0015:501BIA Tueexam - řádná2018-01-09E10513:0015:501BIB Tueexam - řádná2018-01-09G20213:0015:501BIA Tueexam - řádná2018-01-09G20213:0015:501BIB Tueexam - řádná2018-01-09A11213:0015:501BIA Tueexam - řádná2018-01-09A11313:0015:501BIB Tuelecture - reklamace zkoušky2018-01-16A21814:0014:50 TueSchůzka asistentů IZP2018-01-09C23618:0019:50 Wedexam - 2. oprava2018-01-31E11215:0017:501BIA Wedexam - 2. oprava2018-01-31E11215:0017:501BIB Wedexam - 2. oprava2018-01-31E11215:0017:502BIA Wedexam - 2. oprava2018-01-31E11215:0017:502BIB Wedexam - 2. oprava2018-01-31E10415:0017:501BIA Wedexam - 2. oprava2018-01-31E10415:0017:501BIB Thulecture - Představení systému Fedora2017-10-05D10519:0019:50 Thulecture - Prezentace systému Fedora2017-10-05D020619:0019:50 Thulecture - Prezentace systému Fedora2017-10-05D020719:0019:50 FriSchůzka asistentů IZP2017-11-10C22814:0015:50 Friexam - Půlsemestrální test2017-11-10A11216:0017:501BIA Friexam - Půlsemestrální test2017-11-10A11316:0017:501BIB Friexam - Půlsemestrální test2017-11-10E10416:0017:502BIA Friexam - Půlsemestrální test2017-11-10E10516:0017:502BIB Friexam - Půlsemestrální test2017-11-10E11216:0017:501BIA Friexam - Půlsemestrální test2017-11-10D10516:0017:501BIB Friexam - Půlsemestrální test2017-11-10D020716:0017:501BIA Learning objectives:  To grasp an analysis of problems and to determine basic algorithms for their solving. To acquaint oneself with principles and features of high programming language and to possess them for implementing of algorithms. To learn how to use tools for program debugging. To get basic knowledge of data representation in computers memory. To make the acquaintance of testing principles of programs. To possess active basic algorithms. To learn how to document, to present, and to defend the reached results.Description:  Algorithms and problem solving: strategy of problem solving, structured decomposition, concept and features of algorithm. Basic programming construction: syntax and semantics of high programming language, variables, types, expressions, control structures, procedures and functions, parameter passing, input/output, exceptional state processing. Basic data structures: simple data types, structured data types: array, record, file, strings. Dynamic data structures, concept of pointers. Strategy for selecting appropriate data structure. Recursion, concept of recursion. Global and local variables. Simple recursive functions (procedures). Modular Design and abstraction. Concepts will be illustrated by using appropriate programming language. (ISO/IEC 9899:1999 Programming languages - C)Knowledge and skills required for the course:  This course is placed in the winter term of the first year of the bachelors study programme. Thus, we expect that students have the high school level knowledge of using computers.Subject specific learning outcomes and competences:  Student acquaints with the methods of analysing and designing simple computer algorithms. The fundamental concepts of programming languages will be introduced to the student. Student will learn how to write programs in high programming languages and how to understand and use the EBNF to describe programming language syntax. Student will also acquire basic English terminology of programming, syntax, and semantics of programming language. Student will acquainted with testing principles of programs. Student will learn how to document, to present, and to defend the reached results.Generic learning outcomes and competences:  Student will learn the computer-aided solving of simple problems by elaborating projects. Student will learn to create the program documentation and defend the results of project solving.Syllabus of lectures: Introduction to the arrangement of studying. Structure and goals of classes. Properties of algorithms, notations for describing algorithms. Problem solving techniques. Design and implementation of algorithms. Principles of high level programming languages. Symbols and separators, constants, identifiers, variables, numbers repesentation, labels. The concept of data. Simple data types. Expressions and statements. Control structures. Blocks, scope, and activation. Functions, parameters of functions. Programs debugging. Text files, standard input and output. Structured data types. Recursion in programming. Pointer types and dynamic variables. Linked structures. Advanced programs debugging, verification, validation and documentation of source code. Modular construction of program. Syllabus of numerical exercises: Demonstration lessons: The elementary program development tools Programs compilation and running Simple programs in C language Data types, data types casting Control structures Functions, working with strings Basic debugging methods, debugging and profiling tools Programs input and output Recursion Working with memory Source code documentation, testing basics Modular programming, basics of plug-ins Syllabus of computer exercises: Operating instructions, log in intranet, registration at laboratory, email instruction, news groups IZP, Unix for beginner, Dev C++ environment. Next seminars correspond to the content of individual lectures and demonstrate the presented topics. Defences of 3 projects. Computer practises contents: Making of programs, functions. Controll structures, strings and stdio. Pointer type, storage allocation. File operations. Recurzive problems solving. Matrix operations.Syllabus - others, projects and individual work of students: Basic program construction in C language. Recurrence problem solving. Computations with matrixes. Project source code documentation.Fundamental literature: Herout, P.: Učebnice jazyka C, Kopp, České Budějovice, 2009, 6. vyd., ISBN 978-80-7232-383-8. Cormen, T.: Introduction to Algorithms, The MIT Press, 2001, ISBN 0262032937. BS ISO/IEC 9899:2011, Information technology. Programming languages. C, 2012, ISBN 978 0 580 80165 5. The C Standard : Incorporating Technical Corrigendum 1, by Standards Institute British, John Wiley & Sons, 2002, ISBN 0470845732. Kadlec, V.: Učíme se programovat v jazyce C, Computer Press, Praha, 2005, ISBN 80-7226-715-9. Wirth, N.: Algoritmy a štruktúry údajov, Alfa Bratislava, 1988. Cormen, T.: Introduction to Algorithms, The MIT Press, 2001, ISBN 0262032937. Harbison, P.: C: A Reference Manual (5th Edition), Prentice Hall, 2002, ISBN 013089592X. Schildt, H.: Teach Yourself C, McGraw-Hill Companies, 2001.Study literature: McConnell, S.: Code Complete, Microsoft Press, 2004, ISBN 0735619670. Kernighan, B. W.: The Practice of Programming, ADDISON-WESLEY, 2003, ISBN 020161586X. Teaching materials available on WWW. Controlled instruction: Realisation and delivery of 3 home assignments. Demonstration of home assignments during computer practises. 10 computer practices. Delivered and controlled the source code documentation of one project. Mid-term written test. Final written examination. Progress assessment: Evaluated home assignments with the defence - 26 points. Computer practices - 8 points. Mid-term written examination - 12 points. Final written examination - 54 points.Exam prerequisites: Student has to get at least 20 of the points from the projects, practise and mid-term test for receiving the credit and then for entering the final exam. Plagiarism and not allowed cooperation will cause that involved students are not classified and disciplinary action can be initiated. © Faculty of Information Technology, BUT, Božetěchova 1/2, 612 66 Brno, Czech RepublicTel.: +420 54114 1144, Fax: +420 54114 1270 E-mail: info@fit.vutbr.cz, Web: http://www.fit.vutbr.cz/